{
  "version": 3,
  "sources": ["../../@consta/src/hooks/useGlobalKeys/useGlobalKeys.ts"],
  "sourcesContent": ["import { useEffect, useRef } from 'react';\n\nimport { KeyCode } from '##/utils/types/KeyCode';\n\nexport type KeyHandlers = Partial<\n  Record<KeyCode, (e: KeyboardEvent) => void>\n> & {\n  [key: string]: (e: KeyboardEvent) => void;\n};\n\nexport type EventType = 'keyup' | 'keydown';\n\nexport const useGlobalKeys = (\n  keyHandlers: KeyHandlers,\n  eventType: EventType = 'keyup',\n) => {\n  const keyHandlersRef = useRef<KeyHandlers>({});\n\n  useEffect(() => {\n    keyHandlersRef.current = keyHandlers;\n  }, [keyHandlers]);\n\n  useEffect(() => {\n    const handler = (e: KeyboardEvent) => {\n      const { current } = keyHandlersRef;\n\n      const userHandler =\n        current[e.code as KeyCode] || current[e.key as KeyCode];\n      userHandler && userHandler(e);\n    };\n\n    document.addEventListener(eventType, handler);\n\n    return () => {\n      document.removeEventListener(eventType, handler);\n    };\n  }, [eventType]);\n};\n"],
  "mappings": ";;;;;;;;AAAA,mBAAkC;AAY3B,IAAMA,gBAAgB,SAC3BC,GAEG;AAAA,MADHC,IACG,IAAA,UAAA,UAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IADoB,SAEjBC,QAAiBC,qBAAoB,CAAA,CAAd;AAE7BC,8BAAU,WAAM;AACdF,MAAeG,UAAUL;EAC1B,GAAE,CAACA,CAAD,CAFM,OAITI,wBAAU,WAAM;AACd,QAAME,KAAU,SAACC,IAAqB;AAAA,UAC5BF,KAAYH,EAAZG,SAEFG,IACJH,GAAQE,GAAEE,IAAH,KAAuBJ,GAAQE,GAAEG,GAAH;AACvCF,WAAeA,EAAYD,EAAD;IAC3B;AAID,WAFAI,SAASC,iBAAiBX,GAAWK,EAArC,GAEO,WAAM;AACXK,eAASE,oBAAoBZ,GAAWK,EAAxC;IACD;EACF,GAAE,CAACL,CAAD,CAdM;AAeV;",
  "names": ["useGlobalKeys", "keyHandlers", "eventType", "keyHandlersRef", "useRef", "useEffect", "current", "handler", "e", "userHandler", "code", "key", "document", "addEventListener", "removeEventListener"]
}
