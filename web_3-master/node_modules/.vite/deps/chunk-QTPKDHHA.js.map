{
  "version": 3,
  "sources": ["../../@consta/src/utils/types/PropsWithAsAttributes.ts"],
  "sourcesContent": ["import React from 'react';\n\nimport { AsTagAttribute, AsTags } from './AsTags';\n\nexport type PropsWithAsAttributes<Props, As extends AsTags> = Props & {\n  as?: As;\n} & Omit<AsTagAttribute<As>, keyof Props>;\n\nexport type ComponentWithAs<Props, DefaultTag extends AsTags = 'div'> = <\n  As extends AsTags = DefaultTag,\n>(\n  props: PropsWithAsAttributes<Props, As> & React.RefAttributes<Element>,\n) => React.ReactElement | null;\n\ntype ForwardRefWithAs<Props> = <As extends AsTags>(\n  props: PropsWithAsAttributes<Props, As>,\n  ref: React.Ref<HTMLElement>,\n) => React.ReactElement | null;\n\nexport function forwardRefWithAs<Props, As extends AsTags = 'div'>(\n  render: ForwardRefWithAs<Props>,\n) {\n  return React.forwardRef<HTMLElement, PropsWithAsAttributes<Props, As>>(\n    render,\n  ) as unknown as ComponentWithAs<Props, As>;\n}\n"],
  "mappings": ";;;;;;;;AAAA,mBAAkB;AAmBX,SAASA,iBACdC,GACA;AACA,SAAOC,aAAAA,QAAMC,WACXF,CADK;AAGR;",
  "names": ["forwardRefWithAs", "render", "React", "forwardRef"]
}
