{
  "version": 3,
  "sources": ["../../@consta/src/components/Select/Select.tsx", "../../@consta/src/components/SelectComponents/cnSelect.ts", "../../@consta/src/components/SelectComponents/helpers.ts", "../../@consta/src/components/SelectComponents/SelectContainer/SelectContainer.tsx", "../../@consta/src/components/SelectComponents/types.ts", "../../@consta/src/components/SelectComponents/SelectDropdown/SelectDropdown.tsx", "../../@consta/src/components/ListCanary/ListCanary.tsx", "../../@consta/src/utils/getGroups.ts", "../../@consta/src/components/ListCanary/ListItem/ListItem.tsx", "../../@consta/src/components/ListCanary/ListItemGrid/ListItemGrid.tsx", "../../@consta/src/components/ListCanary/maps.ts", "../../@consta/src/components/ListCanary/types.ts", "../../@consta/src/components/ListCanary/renderHeader.tsx", "../../@consta/src/components/ListCanary/ListDivider/ListDivider.tsx", "../../@consta/src/components/ListCanary/ListGroupLabel/ListGroupLabel.tsx", "../../@consta/src/icons/IconAdd/IconAdd_size_m.tsx", "../../@consta/src/icons/IconAdd/IconAdd_size_s.tsx", "../../@consta/src/icons/IconAdd/IconAdd_size_xs.tsx", "../../@consta/src/icons/IconAdd/props.tsx", "../../@consta/src/icons/IconAdd/svg.tsx", "../../@consta/src/icons/IconAdd/IconAdd.tsx", "../../@consta/src/components/ListCanary/ListAddItem/ListAddItem.tsx", "../../@consta/src/components/ListCanary/ListLoader/ListLoader.tsx", "../../@consta/src/components/ListCanary/ListBox/ListBox.tsx", "../../@consta/src/components/ListCanary/ListBox/cnListBox.ts", "../../@consta/src/components/ListCanary/ListBox/mapVerticalSpase.ts", "../../@consta/src/components/Popover/Popover.tsx", "../../@consta/src/hooks/useComponentSize/useComponentSize.tsx", "../../@consta/src/hooks/useResizeObserved/useResizeObserved.ts", "../../@consta/src/hooks/useComponentSize/getElementSize.ts", "../../@consta/src/utils/isRenderProp.ts", "../../@consta/src/components/Popover/helpers.ts", "../../@consta/src/components/Popover/usePopoverReposition.ts", "../../@consta/src/hooks/useDebounce/useDebounce.ts", "../../@consta/src/hooks/useVirtualScroll/useVirtualScroll.ts", "../../@consta/src/hooks/useRefs/useRefs.ts", "../../@consta/src/hooks/useVirtualScroll/hellpers.ts", "../../@consta/src/mixs/MixPopoverAnimate/MixPopoverAnimate.tsx", "../../@consta/src/utils/cnForCssTransition.ts", "../../@consta/src/utils/fabricIndex.ts", "../../@consta/src/components/SelectComponents/SelectCreateButton/SelectCreateButton.tsx", "../../@consta/src/components/SelectComponents/SelectGroupLabel/SelectGroupLabel.tsx", "../../@consta/src/components/SelectComponents/SelectItemAll/SelectItemAll.tsx", "../../@consta/src/components/SelectComponents/SelectItem/SelectItem.tsx", "../../@consta/src/components/SelectComponents/SelectLoader/SelectLoader.tsx", "../../@consta/src/components/SelectComponents/useSelect/useSelect.ts", "../../@consta/src/hooks/useKeysDepricated/useKeysDepricated.tsx", "../../@consta/src/hooks/usePrevious/usePrevious.ts", "../../@consta/src/components/SelectComponents/useSelect/helpers.ts", "../../compute-scroll-into-view/src/index.ts", "../../@consta/src/utils/scrollIntoView.ts", "../../@consta/src/components/Select/helpers.ts"],
  "sourcesContent": ["import '##/components/SelectComponents/Select.css';\n\nimport { IconSelect } from '@consta/icons/IconSelect';\nimport React, { forwardRef, useRef } from 'react';\n\nimport { usePropsHandler } from '##/components/EventInterceptor/usePropsHandler';\nimport {\n  cnSelect,\n  COMPONENT_NAME,\n} from '##/components/SelectComponents/cnSelect';\nimport { defaultLabelForEmptyItems } from '##/components/SelectComponents/helpers';\nimport { SelectContainer } from '##/components/SelectComponents/SelectContainer';\nimport { SelectDropdown } from '##/components/SelectComponents/SelectDropdown';\nimport { SelectItem } from '##/components/SelectComponents/SelectItem';\nimport {\n  defaultPropForm,\n  defaultPropSize,\n  defaultPropView,\n} from '##/components/SelectComponents/types';\nimport { useSelect } from '##/components/SelectComponents/useSelect';\nimport { useForkRef } from '##/hooks/useForkRef';\nimport { isNotNil } from '##/utils/type-guards';\n\nimport {\n  iconSizeMap,\n  PropRenderItem,\n  PropRenderValue,\n  SelectComponent,\n  SelectGroupDefault,\n  SelectItemDefault,\n  SelectProps,\n  withDefaultGetters,\n} from './helpers';\n\nconst SelectRender = <ITEM = SelectItemDefault, GROUP = SelectGroupDefault>(\n  props: SelectProps<ITEM, GROUP>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const defaultDropdownRef = useRef<HTMLDivElement>(null);\n  const controlRef = useRef<HTMLDivElement | null>(null);\n\n  const {\n    placeholder,\n    onBlur,\n    onFocus,\n    items,\n    onChange,\n    value,\n    required,\n    disabled,\n    ariaLabel,\n    id,\n    dropdownRef,\n    form = defaultPropForm,\n    view = defaultPropView,\n    size = defaultPropSize,\n    dropdownClassName,\n    name,\n    groups = [],\n    getItemLabel,\n    labelForEmptyItems = defaultLabelForEmptyItems,\n    getItemKey,\n    getItemGroupKey,\n    getItemDisabled,\n    getGroupKey,\n    getGroupLabel,\n    renderItem,\n    isLoading,\n    renderValue: renderValueProp,\n    inputRef: inputRefProp,\n    style,\n    dropdownForm = 'default',\n    onDropdownOpen,\n    onScrollToBottom,\n    virtualScroll,\n    dropdownOpen,\n    ignoreOutsideClicksRefs,\n    ...restProps\n  } = usePropsHandler(COMPONENT_NAME, withDefaultGetters(props), controlRef);\n\n  const {\n    getKeyProps,\n    getOptionProps,\n    isOpen,\n    visibleItems,\n    isFocused,\n    handleInputFocus,\n    handleInputBlur,\n    handleToggleDropdown,\n    inputRef,\n    handleInputClick,\n    notFound,\n    hasItems,\n    optionsRefs,\n  } = useSelect<ITEM, GROUP, false>({\n    items,\n    groups,\n    value,\n    onChange,\n    dropdownRef: defaultDropdownRef,\n    controlRef,\n    disabled,\n    getItemLabel,\n    getItemKey,\n    getGroupKey,\n    getItemGroupKey,\n    getItemDisabled,\n    multiple: false,\n    onBlur,\n    onFocus,\n    onDropdownOpen,\n    dropdownOpen,\n    ignoreOutsideClicksRefs,\n  });\n\n  const inputId = id ? `${id}-input` : id;\n\n  const renderItemDefault: PropRenderItem<ITEM> = (props) => {\n    const { item, active, hovered, onClick, onMouseEnter, ref } = props;\n\n    return (\n      <SelectItem\n        label={getItemLabel(item)}\n        active={active}\n        hovered={hovered}\n        multiple={false}\n        size={size}\n        indent={dropdownForm === 'round' ? 'increased' : 'normal'}\n        onClick={onClick}\n        onMouseEnter={onMouseEnter}\n        disabled={getItemDisabled(item)}\n        ref={ref}\n      />\n    );\n  };\n\n  const renderValueDefault: PropRenderValue<ITEM> = (props) => {\n    const label = getItemLabel(props.item);\n\n    return (\n      <span className={cnSelect('ControlValue')} title={label}>\n        {label}\n      </span>\n    );\n  };\n\n  const renderValue = renderValueProp || renderValueDefault;\n\n  return (\n    <>\n      <SelectContainer\n        focused={isFocused}\n        disabled={disabled}\n        size={size}\n        view={view}\n        form={form}\n        required={required}\n        ref={ref}\n        style={style}\n        id={inputId}\n        {...restProps}\n      >\n        <div\n          className={cnSelect('Control')}\n          ref={controlRef}\n          aria-expanded={isOpen}\n          aria-haspopup=\"listbox\"\n          id={id}\n        >\n          <div className={cnSelect('ControlInner')}>\n            <div className={cnSelect('ControlValueContainer')}>\n              <input\n                {...getKeyProps()}\n                className={cnSelect('FakeField')}\n                type=\"text\"\n                name={name}\n                id={inputId}\n                onFocus={handleInputFocus}\n                onBlur={handleInputBlur}\n                aria-label={ariaLabel}\n                onClick={handleInputClick}\n                ref={useForkRef([inputRef, inputRefProp])}\n                readOnly\n              />\n              {isNotNil(value) && renderValue({ item: value })}\n              {!isNotNil(value) && placeholder && (\n                <span className={cnSelect('Placeholder')} title=\"placeholder\">\n                  {placeholder}\n                </span>\n              )}\n            </div>\n          </div>\n          <span className={cnSelect('Indicators')}>\n            <button\n              type=\"button\"\n              className={cnSelect('IndicatorsDropdown')}\n              tabIndex={-1}\n              onClick={handleToggleDropdown}\n            >\n              <IconSelect\n                size={iconSizeMap[size]}\n                className={cnSelect('DropdownIndicatorIcon')}\n              />\n            </button>\n          </span>\n        </div>\n      </SelectContainer>\n      <SelectDropdown\n        isOpen={isOpen}\n        size={size}\n        controlRef={controlRef}\n        getOptionProps={getOptionProps}\n        dropdownRef={useForkRef([dropdownRef, defaultDropdownRef])}\n        form={dropdownForm}\n        className={dropdownClassName}\n        renderItem={renderItem || renderItemDefault}\n        getGroupLabel={getGroupLabel}\n        visibleItems={visibleItems}\n        notFound={notFound}\n        isLoading={isLoading}\n        labelForEmptyItems={labelForEmptyItems}\n        hasItems={hasItems}\n        itemsRefs={optionsRefs}\n        virtualScroll={virtualScroll}\n        onScrollToBottom={onScrollToBottom}\n        style={\n          typeof style?.zIndex === 'number'\n            ? { zIndex: style.zIndex + 1 }\n            : undefined\n        }\n      />\n    </>\n  );\n};\n\nexport const Select = forwardRef(SelectRender) as SelectComponent;\n\nexport * from './helpers';\n", "import './Select.css';\n\nimport { cn } from '##/utils/bem';\n\nexport const COMPONENT_NAME = 'Select' as const;\nexport const cnSelect = cn(COMPONENT_NAME);\n", "export const defaultlabelForNotFound = 'Не найдено';\nexport const defaultlabelForCreate = '';\nexport const defaultLabelForEmptyItems = 'Список пуст';\n\nexport const getInputWidth = (\n  controlInnerRef: React.RefObject<HTMLDivElement>,\n  helperInputFakeElement: React.RefObject<HTMLDivElement>,\n): number => {\n  if (!controlInnerRef.current || !helperInputFakeElement.current) {\n    return 20;\n  }\n  const fakeElWidth = helperInputFakeElement.current.offsetWidth + 20;\n  const maxWidth = controlInnerRef.current\n    ? controlInnerRef.current.offsetWidth - 15\n    : 2;\n  const width = fakeElWidth > maxWidth ? maxWidth : fakeElWidth;\n  return width;\n};\n", "import { IconComponent } from '@consta/icons/Icon';\nimport React, { forwardRef } from 'react';\n\nimport { FieldCaption } from '##/components/FieldCaption';\nimport { FieldLabel } from '##/components/FieldLabel';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport { cnSelect } from '../cnSelect';\nimport {\n  defaultPropForm,\n  defaultPropSize,\n  defaultPropView,\n  PropForm,\n  PropSize,\n  PropStatus,\n  PropView,\n} from '../types';\n\nexport type SelectContainerProps = PropsWithHTMLAttributesAndRef<\n  {\n    disabled?: boolean;\n    form?: PropForm;\n    size?: PropSize;\n    view?: PropView;\n    focused?: boolean;\n    multiple?: boolean;\n    required?: boolean;\n    status?: PropStatus;\n    label?: string;\n    labelIcon?: IconComponent;\n    type?: 'select' | 'combobox' | 'userselect';\n    labelPosition?: 'top' | 'left';\n    caption?: string;\n  },\n  HTMLDivElement\n>;\n\nexport const SelectContainer = forwardRef<HTMLDivElement, SelectContainerProps>(\n  (props, ref) => {\n    const {\n      size = defaultPropSize,\n      form = defaultPropForm,\n      view = defaultPropView,\n      className,\n      disabled,\n      required,\n      children,\n      status,\n      focused,\n      id,\n      multiple,\n      type = 'select',\n      labelPosition = 'top',\n      label,\n      labelIcon,\n      caption,\n      ...otherProps\n    } = props;\n\n    return (\n      <div\n        className={cnSelect({ labelPosition, size, view, type }, [className])}\n        {...otherProps}\n      >\n        {label && (\n          <FieldLabel\n            icon={labelIcon}\n            as=\"label\"\n            required={required}\n            htmlFor={id}\n            className={cnSelect('Label', { labelPosition })}\n            size={size}\n          >\n            {label}\n          </FieldLabel>\n        )}\n        <div className={cnSelect('Body')}>\n          <div\n            className={cnSelect('SelectContainer', {\n              view,\n              form,\n              disabled,\n              focused,\n              multiple,\n              status,\n            })}\n            ref={ref}\n          >\n            {children}\n          </div>\n          {caption && (\n            <FieldCaption className={cnSelect('Caption')} status={status}>\n              {caption}\n            </FieldCaption>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n", "import { RefObject } from 'react';\n\nexport const propSize = ['m', 'xs', 's', 'l'] as const;\nexport type PropSize = typeof propSize[number];\nexport const defaultPropSize = propSize[0];\n\nexport const propForm = [\n  'default',\n  'defaultClear',\n  'defaultBrick',\n  'brick',\n  'brickDefault',\n  'brickClear',\n  'brickRound',\n  'round',\n  'roundClear',\n  'roundBrick',\n  'clearRound',\n  'clearDefault',\n  'clearBrick',\n  'clearClear',\n] as const;\nexport type PropForm = typeof propForm[number];\nexport const defaultPropForm = propForm[0];\n\nexport const propView = ['default', 'clear'] as const;\nexport type PropView = typeof propView[number];\nexport const defaultPropView = propView[0];\n\nexport const propStatus = ['alert', 'warning', 'success'] as const;\nexport type PropStatus = typeof propStatus[number];\n\nexport type CommonSelectProps<ITEM> = {\n  options: ITEM[];\n  id: string;\n  placeholder?: string;\n  ariaLabel?: string;\n  getOptionLabel(arg: ITEM): string;\n  getOptionKey?(arg: ITEM): string | number;\n  onBlur?: (event?: React.FocusEvent<HTMLInputElement>) => void;\n  onFocus?: (event?: React.FocusEvent<HTMLInputElement>) => void;\n  children?: never;\n  dropdownClassName?: string;\n  dropdownRef?: RefObject<HTMLDivElement>;\n  name?: string;\n};\n\nexport type RenderItemProps<ITEM> = {\n  item: ITEM;\n  active: boolean;\n  hovered: boolean;\n  onClick: (e: React.SyntheticEvent) => void;\n  onMouseEnter: (e: React.SyntheticEvent) => void;\n  ref: React.Ref<HTMLDivElement>;\n};\n", "import './SelectDropdown.css';\n\nimport React, { Fragment, useEffect, useMemo, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  cnListBox,\n  ListItem,\n  ListLoader,\n  mapVerticalSpase,\n} from '##/components/ListCanary';\nimport { Popover, PopoverPropOffset } from '##/components/Popover';\nimport { useDebounce } from '##/hooks/useDebounce';\nimport { useFlag } from '##/hooks/useFlag';\nimport { forkRef, useForkRef } from '##/hooks/useForkRef';\nimport { useVirtualScroll } from '##/hooks/useVirtualScroll';\nimport {\n  animateTimeout,\n  cnMixPopoverAnimate,\n} from '##/mixs/MixPopoverAnimate/MixPopoverAnimate';\nimport { cnMixScrollBar } from '##/mixs/MixScrollBar';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\nimport { fabricIndex } from '##/utils/fabricIndex';\nimport { SelectAllItem } from '##/utils/getGroups';\nimport { PropsWithJsxAttributes } from '##/utils/types/PropsWithJsxAttributes';\n\nimport { SelectCreateButton } from '../SelectCreateButton/SelectCreateButton';\nimport { SelectGroupLabel } from '../SelectGroupLabel/SelectGroupLabel';\nimport { SelectItemAll } from '../SelectItemAll/SelectItemAll';\nimport { SelectLoader } from '../SelectLoader/SelectLoader';\nimport { PropSize, RenderItemProps } from '../types';\nimport {\n  GetOptionPropsResult,\n  isNotOptionForCreate,\n  isOptionForCreate,\n  isOptionForSelectAll,\n  OptionForCreate,\n  OptionProps,\n} from '../useSelect';\n\nexport const selectDropdownform = ['default', 'brick', 'round'] as const;\nexport type SelectDropdownPropForm = typeof selectDropdownform[number];\nexport const defaultSelectDropdownPropForm = selectDropdownform[0];\n\ntype Props<ITEM, GROUP> = PropsWithJsxAttributes<{\n  size: PropSize;\n  controlRef: React.MutableRefObject<HTMLDivElement | null>;\n  dropdownRef: React.Ref<HTMLDivElement>;\n  getOptionProps(props: OptionProps<ITEM>): GetOptionPropsResult;\n  form: SelectDropdownPropForm;\n  isOpen: boolean;\n  offset?: PopoverPropOffset | 'none';\n  isLoading?: boolean;\n  renderItem: (props: RenderItemProps<ITEM>) => JSX.Element | null;\n  visibleItems: (\n    | OptionForCreate\n    | {\n        items: Array<SelectAllItem | ITEM>;\n        key: string | number;\n        group?: GROUP;\n        groupIndex: number;\n        checkedCount?: number;\n        totalCount?: number;\n      }\n  )[];\n  getGroupLabel?: (group: GROUP) => string;\n  labelForCreate?: string;\n  labelForNotFound?: string;\n  labelForEmptyItems?: string;\n  notFound?: boolean;\n  hasItems?: boolean;\n  itemsRefs: React.RefObject<HTMLDivElement>[];\n  virtualScroll?: boolean;\n  onScrollToBottom?: (lenght: number) => void;\n}>;\n\ntype SelectDropdown = <ITEM, GROUP>(\n  props: Props<ITEM, GROUP>,\n) => React.ReactElement | null;\n\nconst cnSelectDropdown = cn('SelectDropdown');\n\nconst getLenghtElements = <ITEM, GROUP>(\n  elements: (\n    | OptionForCreate\n    | {\n        items: Array<SelectAllItem | ITEM>;\n        key: string | number;\n        group?: GROUP;\n        groupIndex: number;\n        checkedCount?: number;\n        totalCount?: number;\n      }\n  )[],\n) => {\n  let lenght = elements.length <= 1 ? 0 : elements.length;\n\n  for (let index = 0; index < elements.length; index++) {\n    const element = elements[index];\n\n    if (isNotOptionForCreate(element) && element.items.length) {\n      lenght += element.items.length;\n    }\n  }\n\n  return lenght;\n};\n\nconst isVisible = (slise: [number, number], index: number) => {\n  return index >= slise[0] && index < slise[1];\n};\n\nexport const SelectDropdown: SelectDropdown = (props) => {\n  const {\n    controlRef,\n    size,\n    getOptionProps,\n    dropdownRef: dropdownRefProp,\n    labelForCreate,\n    className,\n    labelForNotFound,\n    labelForEmptyItems,\n    hasItems = true,\n    form,\n    isOpen,\n    offset: offsetProp = 'none',\n    renderItem,\n    visibleItems,\n    isLoading,\n    getGroupLabel,\n    notFound,\n    itemsRefs,\n    virtualScroll,\n    onScrollToBottom,\n    ...otherProps\n  } = props;\n\n  const indent = form === 'round' ? 'increased' : 'normal';\n\n  const isListShowed = useMemo(() => {\n    return (\n      visibleItems.filter(\n        (group) =>\n          isOptionForCreate(group) ||\n          (Array.isArray(group.items) && group.items.length > 0),\n      ).length > 0\n    );\n  }, [visibleItems]);\n\n  const offset = offsetProp === 'none' ? undefined : offsetProp;\n\n  const lengthForVirtualScroll = useMemo(\n    () => getLenghtElements(visibleItems),\n    [visibleItems],\n  );\n\n  const {\n    spaceTop,\n    slice: sliceHookProp,\n    listRefs,\n    scrollElementRef,\n  } = useVirtualScroll({\n    length: lengthForVirtualScroll,\n    isActive: virtualScroll && isOpen,\n    onScrollToBottom,\n  });\n\n  const slice: [number, number] =\n    sliceHookProp[0] === 0 && virtualScroll ? [0, 50] : sliceHookProp;\n\n  const popoverRef = useRef<HTMLDivElement>(null);\n  const dropdownRef = useForkRef([scrollElementRef, dropdownRefProp]);\n  const [scrolled, setScroled] = useFlag();\n  const setScroledOffDebouns = useDebounce(setScroled.off, 100);\n\n  useEffect(() => {\n    const fn = () => {\n      setScroled.on();\n      setScroledOffDebouns();\n    };\n\n    scrollElementRef.current?.addEventListener('scroll', fn);\n\n    return () => {\n      scrollElementRef.current?.removeEventListener('scroll', fn);\n    };\n  }, [scrollElementRef.current]);\n\n  return (\n    <Transition\n      in={isOpen}\n      unmountOnExit\n      nodeRef={popoverRef}\n      timeout={animateTimeout}\n    >\n      {(animate) => {\n        const getIndex = fabricIndex();\n        const getVirtualIndex = fabricIndex();\n\n        return (\n          <Popover\n            {...otherProps}\n            anchorRef={controlRef}\n            direction=\"downStartLeft\"\n            possibleDirections={[\n              'downStartLeft',\n              'upStartLeft',\n              'downStartRight',\n              'upStartRight',\n            ]}\n            offset={offset}\n            ref={popoverRef}\n            role=\"listbox\"\n            className={cnSelectDropdown(null, [\n              cnListBox({ size, form, border: true, shadow: true }),\n              cnMixPopoverAnimate({ animate }),\n              className,\n            ])}\n            equalAnchorWidth\n          >\n            <div\n              className={cnSelectDropdown('ScrollContainer', [\n                cnMixSpace({\n                  pV: mapVerticalSpase[size],\n                }),\n                cnMixScrollBar(),\n              ])}\n              ref={dropdownRef}\n            >\n              {isLoading && !isListShowed && <SelectLoader />}\n              <div\n                className={cnSelectDropdown('List', { scrolled })}\n                style={{ marginTop: spaceTop }}\n              >\n                {visibleItems.map((group, groupIndex) => {\n                  if (isOptionForCreate(group)) {\n                    const index = getIndex();\n                    return (\n                      <SelectCreateButton\n                        size={size}\n                        labelForCreate={labelForCreate}\n                        inputValue={group.label}\n                        indent={indent}\n                        ref={itemsRefs[index]}\n                        {...getOptionProps({\n                          index,\n                          item: group,\n                          keyPrefix: groupIndex,\n                        })}\n                      />\n                    );\n                  }\n\n                  const virtualIndex =\n                    visibleItems.length > 1 ? getVirtualIndex() : 0;\n\n                  return (\n                    <Fragment key={group.key}>\n                      {group.group &&\n                        getGroupLabel &&\n                        isVisible(slice, virtualIndex) && (\n                          <SelectGroupLabel\n                            label={getGroupLabel(group.group)}\n                            size={size}\n                            indent={indent}\n                            ref={listRefs[virtualIndex]}\n                            key={`group-${group.key}`}\n                          />\n                        )}\n                      {group.items.map((item, i) => {\n                        if (isOptionForSelectAll(item)) {\n                          const virtualIndex = getVirtualIndex();\n                          const index = getIndex();\n\n                          if (isVisible(slice, virtualIndex)) {\n                            return (\n                              <SelectItemAll\n                                ref={forkRef([\n                                  listRefs[virtualIndex],\n                                  itemsRefs[index],\n                                ])}\n                                indent={indent}\n                                size={size}\n                                {...getOptionProps({\n                                  index,\n                                  item,\n                                  keyPrefix: i,\n                                })}\n                                intermediate={\n                                  item.checkedCount && item.totalCount\n                                    ? item.checkedCount !== item.totalCount\n                                    : false\n                                }\n                                checked={item.checkedCount === item.totalCount}\n                                countItems={item.checkedCount}\n                                total={item.totalCount}\n                              />\n                            );\n                          }\n                        } else {\n                          const virtualIndex = getVirtualIndex();\n                          const index = getIndex();\n                          if (isVisible(slice, virtualIndex)) {\n                            return (\n                              <Fragment key={`${group.key}-${i}`}>\n                                {renderItem({\n                                  ref: forkRef([\n                                    listRefs[virtualIndex],\n                                    itemsRefs[index],\n                                  ]),\n                                  item,\n                                  ...getOptionProps({\n                                    index,\n                                    item,\n                                    keyPrefix: i,\n                                  }),\n                                })}\n                              </Fragment>\n                            );\n                          }\n                        }\n                      })}\n                    </Fragment>\n                  );\n                })}\n                {isLoading && isListShowed && (\n                  <ListLoader size={size} innerOffset={indent} />\n                )}\n              </div>\n              {!isLoading && hasItems && notFound && labelForNotFound && (\n                <ListItem\n                  size={size}\n                  label={labelForNotFound}\n                  innerOffset={indent}\n                >\n                  {labelForNotFound}\n                </ListItem>\n              )}\n              {!isLoading && !hasItems && labelForEmptyItems && (\n                <ListItem\n                  size={size}\n                  label={labelForEmptyItems}\n                  innerOffset={indent}\n                >\n                  {labelForEmptyItems}\n                </ListItem>\n              )}\n            </div>\n          </Popover>\n        );\n      }}\n    </Transition>\n  );\n};\n", "import React, { useMemo } from 'react';\n\nimport { cn } from '##/utils/bem';\nimport { getGroups } from '##/utils/getGroups';\n\nimport { withDefaultGetters } from './helper';\nimport { ListItem } from './ListItem';\nimport { renderHeader } from './renderHeader';\nimport {\n  defaultListPropInnerOffset,\n  defaultListPropSize,\n  ListComponent,\n  ListPropRenderItem,\n} from './types';\n\nexport const cnList = cn('List');\n\nexport const List: ListComponent = (props) => {\n  const {\n    items,\n    onItemClick,\n    groups: groupsProp,\n    disabled: disabledProp,\n    itemSpase,\n    groupLabelSpase,\n    dividerSpase,\n    getItemLabel,\n    getItemLeftIcon,\n    getItemLeftSide,\n    getItemRightIcon,\n    getItemRightSide,\n    getItemAs,\n    getItemAttributes,\n    getItemGroupKey,\n    getItemDisabled,\n    getItemActive,\n    getItemChecked,\n    getItemOnClick,\n    getItemRef,\n    getItemStatus,\n    getItemAdditionalClassName,\n    getGroupKey,\n    getGroupLabel,\n    getGroupRightSide,\n    getGroupAdditionalClassName,\n    renderItem,\n    innerOffset = defaultListPropInnerOffset,\n    size = defaultListPropSize,\n    sortGroup,\n  } = withDefaultGetters(props);\n\n  const groups = useMemo(\n    () => getGroups(items, getItemGroupKey, groupsProp, getGroupKey, sortGroup),\n    [groupsProp, items],\n  );\n\n  type ITEM = typeof items[number];\n\n  const renderItemDefault: ListPropRenderItem<ITEM> = (item) => {\n    const onClick = getItemOnClick(item);\n    const disabled = getItemDisabled(item) ?? disabledProp;\n\n    const handleClick: React.MouseEventHandler<HTMLElement> | undefined =\n      !disabled && (onClick || onItemClick)\n        ? (e) => {\n            onClick?.(e);\n            onItemClick?.(item, { e, item });\n          }\n        : undefined;\n\n    const params = {\n      ...(getItemAttributes?.(item) ?? {}),\n      label: getItemLabel(item),\n      disabled,\n      leftSide: getItemLeftSide(item),\n      leftIcon: getItemLeftIcon(item),\n      rightSide: getItemRightSide(item),\n      rightIcon: getItemRightIcon(item),\n      active: getItemActive(item),\n      checked: getItemChecked(item),\n      status: getItemStatus(item),\n      as: getItemAs?.(item),\n      size,\n      onClick: handleClick,\n      innerOffset,\n      ref: (getItemRef?.(item) as React.RefObject<HTMLDivElement>) || undefined,\n      space: itemSpase,\n      className: getItemAdditionalClassName?.(item),\n    };\n\n    return <ListItem {...params} />;\n  };\n\n  return (\n    <>\n      {groups.map((group, groupIndex) => {\n        return (\n          <React.Fragment key={group.key}>\n            {renderHeader(\n              group.group && getGroupLabel(group.group),\n              groupIndex === 0,\n              size,\n              group.group && getGroupRightSide(group.group),\n              groupLabelSpase,\n              dividerSpase,\n              getGroupAdditionalClassName &&\n                group.group &&\n                getGroupAdditionalClassName(group.group),\n            )}\n            {group.items.map((item, index) => {\n              return (\n                <React.Fragment key={`${group.key}-${index}`}>\n                  {(renderItem ?? renderItemDefault)(item)}\n                </React.Fragment>\n              );\n            })}\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n", "export type Group<ITEM, GROUP> = {\n  items: ITEM[];\n  key: string | number;\n  group?: GROUP;\n  groupIndex: number;\n};\n\nexport type SelectAllItem = {\n  checkedCount: number;\n  totalCount: number;\n  groupKey: string | number;\n  __optionSelctAll: true;\n};\n\nexport type CountedGroup<ITEM, GROUP> = Omit<Group<ITEM, GROUP>, 'items'> & {\n  items: Array<SelectAllItem | ITEM>;\n};\n\ntype GetItemGroupKey<ITEM> = (item: ITEM) => string | number | undefined;\ntype GetItemKey<ITEM> = (item: ITEM) => string | number | undefined;\ntype GetItemDisabled<ITEM> = (item: ITEM) => boolean | undefined;\ntype GetGroupKey<GROUP> = (item: GROUP) => string | number | undefined;\ntype SortGroups<ITEM, GROUP> = (\n  a: Group<ITEM, GROUP>,\n  b: Group<ITEM, GROUP>,\n) => number;\ntype GetGroupsResult<ITEM, GROUP> = Group<ITEM, GROUP>[];\n\nexport const defaultGroupKey = 'no-group';\n\nconst getItemGroupKeyGuard = <ITEM>(\n  getter: GetGroupKey<ITEM>,\n  item: ITEM,\n  noGroupKey: string,\n) => {\n  const key = getter(item);\n\n  return typeof key === 'undefined' ? noGroupKey : key;\n};\n\n/**\n * @param items список который нужно групировать\n * @param getItemGroupKey признак принадлежности к группе\n * @param groups список групп\n * @param getGroupKey результат функции должен вернуть уникальный ключ группы\n * @param sortGroups сортировка групп\n * @param noGroupKey ключ группы которая создаться если item небудет принадлежать ни к одной из групп\n */\n\nexport function getGroups<ITEM, GROUP>(\n  items: ITEM[],\n  getItemGroupKey: GetItemGroupKey<ITEM> | undefined,\n  groups: GROUP[] | undefined,\n  getGroupKey: GetGroupKey<GROUP> | undefined,\n  sortGroups: SortGroups<ITEM, GROUP> | undefined,\n  noGroupKey = defaultGroupKey,\n): GetGroupsResult<ITEM, GROUP> {\n  if (typeof getItemGroupKey !== 'function') {\n    return [{ items, key: noGroupKey, groupIndex: -1 }];\n  }\n\n  const resultGroups: GetGroupsResult<ITEM, GROUP> = [];\n  for (const item of items) {\n    const itemGroupKey = getItemGroupKeyGuard(\n      getItemGroupKey,\n      item,\n      noGroupKey,\n    );\n    const resultGroupIndex = resultGroups.findIndex(\n      (group) => group.key === itemGroupKey,\n    );\n\n    if (resultGroupIndex >= 0) {\n      resultGroups[resultGroupIndex].items.push(item);\n    } else {\n      const groupIndex =\n        getGroupKey && groups\n          ? groups.findIndex((g) => getGroupKey(g) === itemGroupKey)\n          : -1;\n\n      const resultGroup: Group<ITEM, GROUP> = {\n        key: itemGroupKey,\n        items: [item],\n        groupIndex,\n        group: groups ? groups[groupIndex] : undefined,\n      };\n\n      resultGroups.push(resultGroup);\n    }\n  }\n\n  if (typeof sortGroups === 'function') {\n    resultGroups.sort(sortGroups);\n  } else if (groups && getGroupKey) {\n    resultGroups.sort((a, b) => {\n      if (a.groupIndex > b.groupIndex) return 1;\n      if (a.groupIndex < b.groupIndex) return -1;\n      return 0;\n    });\n  }\n\n  return resultGroups;\n}\n\nexport function getCountedGroups<ITEM, GROUP>(\n  groups: GetGroupsResult<ITEM, GROUP>,\n  values: ITEM[] | undefined | null,\n  selectAll: boolean,\n  getItemKey: GetItemKey<ITEM>,\n  getItemDisabled?: GetItemDisabled<ITEM>,\n): CountedGroup<ITEM, GROUP>[] {\n  const copyGroups: CountedGroup<ITEM, GROUP>[] = [...groups];\n  if (selectAll) {\n    groups.forEach((group, index) => {\n      let totalCount = 0;\n      let checkedCount = 0;\n      group.items.forEach((item) => {\n        if (!(getItemDisabled && getItemDisabled?.(item))) {\n          totalCount += 1;\n        }\n        if (values?.find((el) => getItemKey(item) === getItemKey(el))) {\n          checkedCount += 1;\n        }\n      });\n      copyGroups[index].items = [\n        {\n          __optionSelctAll: true,\n          totalCount,\n          groupKey: group.key,\n          checkedCount,\n        },\n        ...copyGroups[index].items,\n      ];\n    });\n  }\n  return copyGroups;\n}\n", "import './ListItem.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { cnText, textPropViewDefault } from '##/components/Text';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\n\nimport { cnListItemGrid, renderSlot } from '../ListItemGrid';\nimport {\n  mapHorisontalSpase,\n  mapHorisontalSpaseIncreased,\n  mapItemVerticalPadding,\n} from '../maps';\nimport {\n  defaultListPropSize,\n  ListItemComponent,\n  ListItemProps,\n} from '../types';\n\nexport const cnListItem = cn('ListItem');\n\nconst ListItemRender = (\n  props: ListItemProps,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const {\n    size = defaultListPropSize,\n    active,\n    label,\n    innerOffset,\n    disabled,\n    className,\n    leftSide,\n    rightSide,\n    rightIcon,\n    leftIcon,\n    as: Tag = 'div',\n    checked,\n    onClick,\n    status = textPropViewDefault,\n    space,\n    iconSize,\n    ...otherProps\n  } = props;\n\n  const handleClick: React.MouseEventHandler<HTMLDivElement> | undefined =\n    onClick && !disabled ? onClick : undefined;\n\n  return (\n    <Tag\n      {...otherProps}\n      className={cnListItem(\n        { active, disabled, checked, interactive: !!handleClick },\n        [\n          cnText({\n            lineHeight: 'xs',\n            size,\n            view: status,\n          }),\n          cnMixSpace(\n            space || {\n              pH:\n                innerOffset === 'increased'\n                  ? mapHorisontalSpaseIncreased[size]\n                  : mapHorisontalSpase[size],\n              pV: mapItemVerticalPadding[size],\n            },\n          ),\n          cnListItemGrid(),\n          className,\n        ],\n      )}\n      onClick={handleClick}\n      ref={ref}\n    >\n      {renderSlot(leftSide, 'left', size, leftIcon, iconSize)}\n      {!rightIcon && !rightSide && !leftSide && !leftIcon\n        ? label\n        : label && (\n            <span className={cnListItemGrid('Slot', { position: 'center' })}>\n              {label}\n            </span>\n          )}\n      {renderSlot(rightSide, 'right', size, rightIcon, iconSize)}\n    </Tag>\n  );\n};\n\nexport const ListItem = forwardRef(ListItemRender) as ListItemComponent;\n", "import './ListItemGrid.css';\n\nimport { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { cn } from '##/utils/bem';\nimport { getByMap } from '##/utils/getByMap';\nimport { isNotNil } from '##/utils/type-guards';\n\nimport { mapIconSize } from '../maps';\nimport { ListPropSize } from '../types';\n\nexport const cnListItemGrid = cn('ListItemGrid');\n\nexport const renderSlot = (\n  side: React.ReactNode,\n  position: 'left' | 'right',\n  size: ListPropSize,\n  Icon?: IconComponent,\n  iconSize?: IconPropSize,\n): React.ReactNode[] => {\n  const sides: React.ReactNode[] = side\n    ? [...(Array.isArray(side) ? side : [side])]\n    : [];\n  if (Icon) {\n    const render = <Icon size={getByMap(mapIconSize, size, iconSize)} />;\n    if (position === 'left') {\n      sides.push(render);\n    }\n    if (position === 'right') {\n      sides.unshift(render);\n    }\n  }\n  return sides.map((item, index) => {\n    if (isNotNil(item)) {\n      return (\n        <div\n          className={cnListItemGrid('Slot', {\n            position,\n          })}\n          key={cnListItemGrid('Slot', {\n            position,\n            index,\n          })}\n        >\n          {item}\n        </div>\n      );\n    }\n  });\n};\n", "import { IconPropSize } from '@consta/icons/Icon';\n\nimport { Space } from '##/mixs/MixSpace';\n\nimport { ListPropSize } from './types';\n\nexport const mapHorisontalSpase: Record<ListPropSize, Space> = {\n  xs: 'xs',\n  s: 'xs',\n  m: 's',\n  l: 's',\n};\n\nexport const mapHorisontalSpaseIncreased: Record<ListPropSize, Space> = {\n  xs: 's',\n  s: 's',\n  m: 'm',\n  l: 'l',\n};\n\nexport const mapGroupVerticalSpaseTop: Record<ListPropSize, Space> = {\n  xs: 's',\n  s: 'm',\n  m: 'm',\n  l: 'l',\n};\n\nexport const mapGroupVerticalSpaseBottom: Record<ListPropSize, Space> = {\n  xs: '2xs',\n  s: '2xs',\n  m: 'xs',\n  l: 's',\n};\n\nexport const mapItemVerticalPadding: Record<ListPropSize, Space> = {\n  xs: '2xs',\n  s: '2xs',\n  m: 'xs',\n  l: 'xs',\n};\n\nexport const mapIconSize: Record<ListPropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 'xs',\n  m: 's',\n  l: 's',\n};\n\nexport const mapDividerVerticalSpace: Record<ListPropSize, Space> = {\n  l: 'm',\n  m: 's',\n  s: 'xs',\n  xs: '2xs',\n};\n", "import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { MixSpaceProps } from '##/mixs/MixSpace';\nimport { Group } from '##/utils/getGroups';\nimport { AsAttributes, AsTags } from '##/utils/types/AsTags';\nimport { PropsWithAsAttributes } from '##/utils/types/PropsWithAsAttributes';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport const listPropSize = ['m', 'xs', 's', 'l'] as const;\nexport type ListPropSize = typeof listPropSize[number];\nexport const defaultListPropSize = listPropSize[0];\n\nexport const listPropInnerOffset = ['normal', 'increased'] as const;\nexport type ListPropInnerOffset = typeof listPropInnerOffset[number];\nexport const defaultListPropInnerOffset = listPropInnerOffset[0];\n\nexport const listPropStatus = ['alert', 'success', 'warning'] as const;\nexport type ListPropStatus = typeof listPropStatus[number];\n\nexport const listPropForm = ['default', 'brick', 'round'] as const;\nexport type ListPropForm = typeof listPropForm[number];\nexport const defaultListPropForm = listPropForm[0];\n\nexport type DefaultListGroup = {\n  id: string | number;\n  label?: string;\n  rightSide?: React.ReactNode;\n};\n\nexport type DefaultListItem = {\n  label: React.ReactNode;\n  disabled?: boolean;\n  active?: boolean;\n  checked?: boolean;\n  status?: ListPropStatus;\n  groupId?: string | number;\n  leftSide?: React.ReactNode;\n  leftIcon?: IconComponent;\n  rightSide?: React.ReactNode;\n  rightIcon?: IconComponent;\n  onClick?: React.MouseEventHandler;\n};\n\nexport type ListPropOnItemClick<ITEM> = (\n  item: ITEM,\n  params: {\n    e: React.MouseEvent;\n    item: ITEM;\n  },\n) => void;\n\nexport type ListPropRenderItem<ITEM> = (\n  item: ITEM,\n) => React.ReactElement | null;\n\n// ITEMS\n\nexport type ListPropGetItemLabel<ITEM> = (item: ITEM) => React.ReactNode;\n\nexport type ListPropGetItemAdditionalClassName<ITEM> = (item: ITEM) => string;\n\nexport type ListPropGetItemDisabled<ITEM> = (item: ITEM) => boolean | undefined;\n\nexport type ListPropGetItemActive<ITEM> = (item: ITEM) => boolean | undefined;\n\nexport type ListPropGetItemChecked<ITEM> = (item: ITEM) => boolean | undefined;\n\nexport type ListPropGetItemStatus<ITEM> = (\n  item: ITEM,\n) => ListPropStatus | undefined;\n\nexport type ListPropGetItemGroupId<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\n\nexport type ListPropGetItemLeftSide<ITEM> = (\n  item: ITEM,\n) => React.ReactNode | undefined;\n\nexport type ListPropGetItemLeftIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\n\nexport type ListPropGetItemRightSide<ITEM> = (\n  item: ITEM,\n) => React.ReactNode | undefined;\n\nexport type ListPropGetItemRightIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\n\nexport type ListPropGetItemAs<ITEM> = (item: ITEM) => AsTags | undefined;\n\nexport type ListPropGetItemAttributes<ITEM> = (\n  item: ITEM,\n) => AsAttributes | undefined;\n\nexport type ListPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => React.MouseEventHandler | undefined;\n\nexport type ListPropSortGroup<ITEM, GROUP> = (\n  a: Group<ITEM, GROUP>,\n  b: Group<ITEM, GROUP>,\n) => number;\n\n// GROUPS\nexport type ListPropGetGroupKey<GROUP> = (item: GROUP) => string | number;\nexport type ListPropGetGroupAdditionalClassName<GROUP> = (\n  item: GROUP,\n) => string;\n\nexport type ListPropGetGroupLabel<GROUP> = (item: GROUP) => string | undefined;\nexport type ListPropGetGroupRightSide<GROUP> = (\n  item: GROUP,\n) => React.ReactNode | undefined;\n\nexport type ListPropGetItemRef<ITEM> = (\n  item: ITEM,\n) => React.RefObject<HTMLElement> | undefined;\n\nexport type ListProps<ITEM = DefaultListItem, GROUP = DefaultListGroup> = {\n  size?: ListPropSize;\n  items: ITEM[];\n  innerOffset?: ListPropInnerOffset;\n  itemSpase?: MixSpaceProps;\n  groupLabelSpase?: MixSpaceProps;\n  dividerSpase?: MixSpaceProps;\n  onItemClick?: ListPropOnItemClick<ITEM>;\n  getItemLabel?: ListPropGetItemLabel<ITEM>;\n  getItemDisabled?: ListPropGetItemDisabled<ITEM>;\n  getItemActive?: ListPropGetItemActive<ITEM>;\n  getItemChecked?: ListPropGetItemActive<ITEM>;\n  getItemLeftSide?: ListPropGetItemLeftSide<ITEM>;\n  getItemLeftIcon?: ListPropGetItemLeftIcon<ITEM>;\n  getItemRightSide?: ListPropGetItemRightSide<ITEM>;\n  getItemRightIcon?: ListPropGetItemRightIcon<ITEM>;\n  getItemGroupKey?: ListPropGetItemGroupId<ITEM>;\n  getItemOnClick?: ListPropGetItemOnClick<ITEM>;\n  getItemStatus?: ListPropGetItemStatus<ITEM>;\n  getItemAs?: ListPropGetItemAs<ITEM>;\n  getItemAttributes?: ListPropGetItemAttributes<ITEM>;\n  getItemRef?: ListPropGetItemRef<ITEM>;\n  getItemAdditionalClassName?: ListPropGetItemAdditionalClassName<ITEM>;\n  renderItem?: ListPropRenderItem<ITEM>;\n  groups?: GROUP[];\n  getGroupKey?: ListPropGetGroupKey<GROUP>;\n  getGroupLabel?: ListPropGetGroupLabel<GROUP>;\n  getGroupRightSide?: ListPropGetGroupRightSide<GROUP>;\n  sortGroup?: ListPropSortGroup<ITEM, GROUP>;\n  getGroupAdditionalClassName?: ListPropGetGroupAdditionalClassName<GROUP>;\n  disabled?: boolean;\n} & (ITEM extends { label: DefaultListItem['label'] }\n  ? {}\n  : { getItemLabel: ListPropGetItemLabel<ITEM> }) &\n  (GROUP extends { id: DefaultListGroup['id'] }\n    ? {}\n    : { getGroupKey: ListPropGetGroupKey<GROUP> });\n\nexport type ListComponent = <ITEM = DefaultListItem, GROUP = DefaultListGroup>(\n  props: ListProps<ITEM, GROUP>,\n) => React.ReactElement | null;\n\nexport type ListItemProps<AS extends AsTags = 'div'> = PropsWithAsAttributes<\n  Omit<DefaultListItem, 'id' | 'groupId' | 'attributes' | 'onClick'> & {\n    size?: ListPropSize;\n    innerOffset?: 'normal' | 'increased';\n    space?: MixSpaceProps;\n    iconSize?: IconPropSize;\n  },\n  AS\n>;\n\nexport type ListItemComponent = <AS extends AsTags = 'div'>(\n  props: ListItemProps<AS>,\n) => React.ReactElement | null;\n\nexport type ListGroupLabelProps = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ListPropSize;\n    label: string;\n    innerOffset?: ListPropInnerOffset;\n    rightSide?: React.ReactNode;\n    space?: MixSpaceProps;\n  },\n  HTMLDivElement\n>;\n\nexport type ListDividerProps = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ListPropSize;\n    innerOffset?: ListPropInnerOffset;\n    space?: MixSpaceProps;\n  },\n  HTMLDivElement\n>;\n\nexport type ListBoxProps = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ListPropSize;\n    form?: ListPropForm;\n    border?: boolean;\n    shadow?: boolean;\n  },\n  HTMLDivElement\n>;\n\nexport type ListAddItemProps = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ListPropSize;\n    label: React.ReactNode;\n    innerOffset?: ListPropInnerOffset;\n    active?: boolean;\n    underLine?: boolean;\n  },\n  HTMLDivElement\n>;\n", "import React from 'react';\n\nimport { MixSpaceProps } from '##/mixs/MixSpace';\n\nimport { ListDivider } from './ListDivider';\nimport { ListGroupLabel } from './ListGroupLabel';\nimport { ListPropSize } from './types';\n\nexport const renderHeader = (\n  label: string | undefined,\n  first: boolean,\n  size: ListPropSize,\n  rightSide: React.ReactNode,\n  labelSpace: MixSpaceProps | undefined,\n  dividerSpase: MixSpaceProps | undefined,\n  className: string | undefined,\n): React.ReactNode | null => {\n  if (label) {\n    return (\n      <ListGroupLabel\n        size={size}\n        label={label}\n        rightSide={rightSide}\n        space={labelSpace}\n        className={className}\n      />\n    );\n  }\n\n  if (!label && !first) {\n    return (\n      <ListDivider size={size} space={dividerSpase} className={className} />\n    );\n  }\n\n  return null;\n};\n", "import './ListDivider.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\n\nimport {\n  mapDividerVerticalSpace,\n  mapHorisontalSpase,\n  mapHorisontalSpaseIncreased,\n} from '../maps';\nimport { defaultListPropSize, ListDividerProps } from '../types';\n\nexport const cnListDivider = cn('ListDivider');\n\nexport const ListDivider = forwardRef<HTMLDivElement, ListDividerProps>(\n  (props, ref) => {\n    const {\n      size = defaultListPropSize,\n      innerOffset,\n      className,\n      space,\n      ...otherProps\n    } = props;\n\n    return (\n      <div\n        {...otherProps}\n        ref={ref}\n        className={cnListDivider(null, [\n          cnMixSpace(\n            space || {\n              mH:\n                innerOffset === 'increased'\n                  ? mapHorisontalSpaseIncreased[size]\n                  : mapHorisontalSpase[size],\n              mV: mapDividerVerticalSpace[size],\n            },\n          ),\n          className,\n        ])}\n      />\n    );\n  },\n);\n", "import './ListGroupLabel.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { Text, TextPropSize } from '##/components/Text';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\n\nimport { cnListItemGrid, renderSlot } from '../ListItemGrid';\nimport {\n  mapGroupVerticalSpaseBottom,\n  mapGroupVerticalSpaseTop,\n  mapHorisontalSpase,\n  mapHorisontalSpaseIncreased,\n} from '../maps';\nimport {\n  defaultListPropSize,\n  ListGroupLabelProps,\n  ListPropSize,\n} from '../types';\n\nexport const cnListGroupLabel = cn('ListGroupLabel');\n\nconst mapFontSize: Record<ListPropSize, TextPropSize> = {\n  xs: '2xs',\n  s: '2xs',\n  m: 'xs',\n  l: 's',\n};\n\nexport const ListGroupLabel = forwardRef<HTMLDivElement, ListGroupLabelProps>(\n  (props, ref) => {\n    const {\n      rightSide,\n      size = defaultListPropSize,\n      label,\n      innerOffset,\n      className,\n      space,\n      ...otherProps\n    } = props;\n\n    return (\n      <Text\n        {...otherProps}\n        ref={ref}\n        className={cnListGroupLabel(null, [\n          cnListItemGrid(),\n          cnMixSpace(\n            space || {\n              mH:\n                innerOffset === 'increased'\n                  ? mapHorisontalSpaseIncreased[size]\n                  : mapHorisontalSpase[size],\n              pT: mapGroupVerticalSpaseTop[size],\n              pB: mapGroupVerticalSpaseBottom[size],\n            },\n          ),\n          className,\n        ])}\n        size={mapFontSize[size]}\n        view=\"secondary\"\n        lineHeight=\"xs\"\n        spacing=\"xs\"\n        transform=\"uppercase\"\n      >\n        {!rightSide ? (\n          label\n        ) : (\n          <span className={cnListItemGrid('Slot', { position: 'center' })}>\n            {label}\n          </span>\n        )}\n        {renderSlot(rightSide, 'right', size, undefined)}\n      </Text>\n    );\n  },\n);\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconAddSizeM = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M13 2h-2v9H2v2h9v9h2v-9h9v-2h-9V2z\" />\n  </svg>\n);\nexport default IconAddSizeM;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconAddSizeS = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M9 2H7v5H2v2h5v5h2V9h5V7H9V2z\" />\n  </svg>\n);\nexport default IconAddSizeS;\n", "import * as React from 'react';\nimport { SVGProps } from 'react';\n\nconst IconAddSizeXs = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M6.5 2.5h-1v3h-3v1h3v3h1v-3h3v-1h-3v-3z\" />\n  </svg>\n);\nexport default IconAddSizeXs;\n", "import { CreateIconArguments } from '##/icons/Icon/helpers';\n\nimport IconAddSizeM from './IconAdd_size_m';\nimport IconAddSizeS from './IconAdd_size_s';\nimport IconAddSizeXs from './IconAdd_size_xs';\n\nconst props: CreateIconArguments = {\n  l: IconAddSizeM,\n  m: IconAddSizeM,\n  s: IconAddSizeS,\n  xs: IconAddSizeXs,\n  name: 'IconAdd',\n  renderType: { l: 'use', m: 'use', s: 'use', xs: 'use' },\n  color: 'mono',\n};\n\nexport default props;\n", "import { createSvg } from '##/icons/Icon/createSvg';\n\nimport props from './props';\n\nexport default createSvg(props);\n", "import { createIconInner } from '##/icons/Icon/createIconInner';\n\nimport props from './props';\nimport svg from './svg';\n\nexport const IconAdd = createIconInner(props, svg);\n", "import { IconAdd } from '@consta/icons/IconAdd';\nimport React, { forwardRef } from 'react';\n\nimport { ListDivider, ListItem } from '..';\nimport {\n  mapGroupVerticalSpaseBottom,\n  mapHorisontalSpase,\n  mapHorisontalSpaseIncreased,\n} from '../maps';\nimport { defaultListPropSize, ListAddItemProps } from '../types';\n\nexport const ListAddItem = forwardRef<HTMLDivElement, ListAddItemProps>(\n  (props, ref) => {\n    const {\n      size = defaultListPropSize,\n      innerOffset,\n      underLine,\n      ...otherProps\n    } = props;\n\n    const horisontalSpase =\n      innerOffset === 'increased'\n        ? mapHorisontalSpaseIncreased[size]\n        : mapHorisontalSpase[size];\n\n    return (\n      <>\n        <ListItem\n          {...otherProps}\n          size={size}\n          ref={ref}\n          leftIcon={IconAdd}\n          space={{\n            pH: horisontalSpase,\n            pV: mapGroupVerticalSpaseBottom[size],\n          }}\n        />\n        {underLine && (\n          <ListDivider size={size} space={{ mH: horisontalSpase }} />\n        )}\n      </>\n    );\n  },\n);\n", "import './ListLoader.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { Loader } from '##/components/LoaderDeprecated';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport { mapHorisontalSpase, mapHorisontalSpaseIncreased } from '../maps';\nimport {\n  defaultListPropInnerOffset,\n  defaultListPropSize,\n  ListPropInnerOffset,\n  ListPropSize,\n} from '../types';\n\nconst cnListLoader = cn('ListLoader');\n\ntype Props = PropsWithHTMLAttributesAndRef<\n  { size?: ListPropSize; innerOffset?: ListPropInnerOffset },\n  HTMLDivElement\n>;\n\nexport const ListLoader = forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      size = defaultListPropSize,\n      innerOffset = defaultListPropInnerOffset,\n      className,\n    },\n    ref,\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={cnListLoader({ size }, [\n          cnMixSpace({\n            pH:\n              innerOffset === 'increased'\n                ? mapHorisontalSpaseIncreased[size]\n                : mapHorisontalSpase[size],\n          }),\n          className,\n        ])}\n      >\n        <div className={cnListLoader('Container')}>\n          <Loader size=\"s\" className={cnListLoader('Loader')} />\n        </div>\n      </div>\n    );\n  },\n);\n", "import React, { forwardRef } from 'react';\n\nimport { cnMixScrollBar } from '##/mixs/MixScrollBar';\nimport { cnMixSpace } from '##/mixs/MixSpace';\n\nimport { defaultListPropSize, ListBoxProps } from '../types';\nimport { cnListBox } from './cnListBox';\nimport { mapVerticalSpase } from './mapVerticalSpase';\n\nexport const ListBox = forwardRef<HTMLDivElement, ListBoxProps>(\n  (props, ref) => {\n    const {\n      size = defaultListPropSize,\n      form,\n      border,\n      shadow,\n      className,\n      ...otherProps\n    } = props;\n\n    return (\n      <div\n        {...otherProps}\n        ref={ref}\n        className={cnListBox({ size, form, border, shadow }, [\n          cnMixSpace({\n            pV: mapVerticalSpase[size],\n          }),\n          cnMixScrollBar(),\n          className,\n        ])}\n      />\n    );\n  },\n);\n", "import './ListBox.css';\n\nimport { cn } from '##/utils/bem';\n\nexport const cnListBox = cn('ListBox');\n", "import { Space } from '##/mixs/MixSpace';\n\nimport { ListPropSize } from '../types';\n\nexport const mapVerticalSpase: Record<ListPropSize, Space> = {\n  xs: '2xs',\n  s: '2xs',\n  m: 'xs',\n  l: 'xs',\n};\n", "import './Popover.css';\n\nimport React, { forwardRef, useEffect, useLayoutEffect, useMemo } from 'react';\n\nimport {\n  PortalWithTheme,\n  usePortalContext,\n} from '##/components/PortalWithTheme';\nimport { useTheme } from '##/components/Theme/Theme';\nimport { ClickOutsideHandler, useClickOutside } from '##/hooks/useClickOutside';\nimport { useComponentSize } from '##/hooks/useComponentSize';\nimport { useForkRef } from '##/hooks/useForkRef';\nimport { cn } from '##/utils/bem';\nimport { isRenderProp } from '##/utils/isRenderProp';\nimport { isNumber, isString } from '##/utils/type-guards';\nimport { PropsWithJsxAttributes } from '##/utils/types/PropsWithJsxAttributes';\n\nimport { getComputedPositionAndDirection } from './helpers';\nimport { usePopoverReposition } from './usePopoverReposition';\n\n/**\n * Стороны упорядочены по приоритету:\n * Используется первая сторона, в которую смог вписаться поповер.\n */\nexport const directionsStartCenter = [\n  'downCenter',\n  'upCenter',\n\n  'downRight',\n  'downLeft',\n  'upRight',\n  'upLeft',\n\n  'leftUp',\n  'leftCenter',\n  'leftDown',\n\n  'rightUp',\n  'rightCenter',\n  'rightDown',\n] as const;\n\nexport const directionsStartEdge = [\n  'downStartLeft',\n  'upStartLeft',\n\n  'downStartRight',\n  'upStartRight',\n\n  'leftStartUp',\n  'leftStartDown',\n\n  'rightStartUp',\n  'rightStartDown',\n] as const;\n\nexport const popoverPropOffset = [\n  '3xs',\n  '2xs',\n  'xs',\n  's',\n  'm',\n  'l',\n  'xl',\n  '2xl',\n  '3xl',\n  '4xl',\n  '5xl',\n  '6xl',\n] as const;\nexport type PopoverPropOffset = typeof popoverPropOffset[number] | number;\n\nexport const directions = [...directionsStartCenter, ...directionsStartEdge];\n\nexport type Direction = typeof directions[number];\n\nexport type Position = { x: number; y: number } | undefined;\n\nexport type PositioningProps =\n  | {\n      anchorRef: React.RefObject<HTMLElement>;\n      equalAnchorWidth?: boolean;\n      position?: never;\n    }\n  | {\n      anchorRef?: never;\n      equalAnchorWidth?: never;\n      position: Position;\n    };\n\ntype ChildrenRenderProp = (direction: Direction) => React.ReactNode;\n\nexport type Props = PropsWithJsxAttributes<\n  {\n    direction?: Direction;\n    spareDirection?: Direction;\n    offset?: PopoverPropOffset;\n    arrowOffset?: number;\n    possibleDirections?: readonly Direction[];\n    isInteractive?: boolean;\n    children: React.ReactNode | ChildrenRenderProp;\n    onClickOutside?: ClickOutsideHandler;\n    onSetDirection?: (direction: Direction) => void;\n  } & PositioningProps\n>;\n\nconst getOffset = (\n  ref: React.RefObject<HTMLDivElement>,\n  propOffset: PopoverPropOffset,\n) => {\n  if (isNumber(propOffset)) {\n    return propOffset;\n  }\n\n  if (isString(propOffset) && ref.current) {\n    const cssVar = getComputedStyle(ref.current).getPropertyValue(\n      `--space-${propOffset}`,\n    );\n\n    if (cssVar && /px$/.test(cssVar)) {\n      return Number(cssVar.slice(0, cssVar.length - 2));\n    }\n\n    if (cssVar && /rem$/.test(cssVar)) {\n      const fontSize = parseFloat(\n        getComputedStyle(document.documentElement).fontSize,\n      );\n      const rem = Number(cssVar.slice(0, cssVar.length - 3));\n\n      return fontSize * rem;\n    }\n\n    if (cssVar && /em$/.test(cssVar)) {\n      const fontSize = parseFloat(getComputedStyle(ref.current).fontSize);\n      const em = Number(cssVar.slice(0, cssVar.length - 2));\n\n      return fontSize * em;\n    }\n\n    return 0;\n  }\n\n  return 0;\n};\n\n/**\n * Подписчик на PortalWithThemeProvider\n * получает рефы всех вложенных порталов в модалку\n * для дальнейшего исключения их из useClickOutside\n */\nconst ContextConsumer: React.FC<{\n  onClickOutside?: (event: MouseEvent) => void;\n  ignoreClicksInsideRefs?: ReadonlyArray<React.RefObject<HTMLElement>>;\n  children: React.ReactNode;\n}> = ({ onClickOutside, children, ignoreClicksInsideRefs }) => {\n  const { refs } = usePortalContext();\n\n  useClickOutside({\n    isActive: !!onClickOutside,\n    ignoreClicksInsideRefs: [\n      ...(ignoreClicksInsideRefs || []),\n      ...(refs || []),\n    ],\n    handler: onClickOutside,\n  });\n\n  return children as React.ReactElement;\n};\n\nconst cnPopover = cn('Popover');\n\nexport const Popover = forwardRef<HTMLDivElement, Props>(\n  (props, componentRef) => {\n    const {\n      children,\n      direction: passedDirection = 'upCenter',\n      offset: propOffset = 0,\n      arrowOffset,\n      possibleDirections = directions,\n      isInteractive = true,\n      onClickOutside,\n      spareDirection = 'downStartLeft',\n      style,\n      className,\n      position: passedPosition,\n      anchorRef,\n      equalAnchorWidth,\n      onSetDirection,\n      ...otherProps\n    } = props;\n\n    const ref = React.useRef<HTMLDivElement>(null);\n    const { theme } = useTheme();\n\n    const [anchorClientRect, setAnchorClientRect] = React.useState<\n      DOMRect | undefined\n    >();\n    const { width, height } = useComponentSize(ref);\n    const anchorSize = useComponentSize(anchorRef || { current: null });\n    const previousDirectionRef = React.useRef<Direction | null>(null);\n    const [bannedDirections, setBannedDirections] = React.useState<\n      readonly Direction[]\n    >([]);\n\n    const resetBannedDirections = () => {\n      setBannedDirections((state) => (state.length ? [] : state));\n      previousDirectionRef.current = null;\n    };\n\n    const updateAnchorClientRect = () =>\n      setAnchorClientRect(anchorRef?.current?.getBoundingClientRect());\n\n    const offset = useMemo(\n      () => getOffset(ref, propOffset),\n      [propOffset, Boolean(ref.current)],\n    );\n\n    const { position, direction } = getComputedPositionAndDirection({\n      contentSize: { width, height },\n      viewportSize: {\n        // Размер вьюпорта без скроллбаров\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight,\n      },\n      arrowOffset,\n      offset,\n      direction: passedDirection,\n      possibleDirections,\n      bannedDirections,\n      position: anchorClientRect\n        ? { x: anchorClientRect.left, y: anchorClientRect.top }\n        : passedPosition,\n      anchorSize,\n      spareDirection,\n    });\n\n    useEffect(() => onSetDirection?.(direction), [direction]);\n\n    useEffect(updateAnchorClientRect, [anchorSize]);\n\n    usePopoverReposition({\n      isActive: true,\n      scrollAnchorRef: anchorRef || { current: null },\n      onRequestReposition: () => {\n        resetBannedDirections();\n        updateAnchorClientRect();\n      },\n    });\n\n    /**\n     * Может возникнуть ситуация, когда перерасчет поповера всегда будет выдавать 2 направления\n     * и бесконечно зацикливать себя. Для избежания таких кейсов мы запоминаем стороны,\n     * которые не подошли, чтобы не возвращаться к ним и предотвратить бесконечный ререндер.\n     * См. PopoverBannedPositionsStory\n     */\n\n    useLayoutEffect(() => {\n      if (previousDirectionRef.current !== direction) {\n        if (\n          previousDirectionRef.current &&\n          !bannedDirections.includes(previousDirectionRef.current) &&\n          !bannedDirections.includes(direction) &&\n          direction !== spareDirection\n        ) {\n          setBannedDirections((state) =>\n            previousDirectionRef.current\n              ? [...state, previousDirectionRef.current]\n              : state,\n          );\n        }\n        previousDirectionRef.current = direction;\n      }\n    }, [direction]);\n\n    // Сбрасываем при любом изменении пропсов, чтобы заново начать перебор направлений\n    // Главное не сбрасывать при изменении размеров поповера, т.к. именно оно может вызвать бесконечный перебор\n\n    useLayoutEffect(resetBannedDirections, [props]);\n\n    const notVisible = !position || !height || !width;\n\n    return (\n      <PortalWithTheme\n        {...otherProps}\n        preset={theme}\n        className={cnPopover({ direction, notVisible }, [className])}\n        container={window.document.body}\n        ref={useForkRef([ref, componentRef])}\n        style={{\n          ...style,\n          ...(notVisible\n            ? {}\n            : {\n                ['--popover-top' as string]: `${\n                  (position?.y || 0) + window.scrollY\n                }px`,\n                ['--popover-left' as string]: `${\n                  (position?.x || 0) + window.scrollX\n                }px`,\n                [`--popover-width` as string]: equalAnchorWidth\n                  ? `${anchorSize.width}px`\n                  : undefined,\n                [`--popover-pointer-events` as string]: isInteractive\n                  ? undefined\n                  : 'none',\n                [`--popover-visibility` as string]: position\n                  ? undefined\n                  : 'hidden',\n              }),\n        }}\n      >\n        <ContextConsumer\n          onClickOutside={onClickOutside}\n          ignoreClicksInsideRefs={[ref, anchorRef || { current: null }]}\n        >\n          {isRenderProp(children) ? children(direction) : children}\n        </ContextConsumer>\n      </PortalWithTheme>\n    );\n  },\n);\n", "import { useMemo } from 'react';\n\nimport { useResizeObserved } from '##/hooks/useResizeObserved';\n\nimport { getElementSize } from './getElementSize';\nimport { ComponentSize } from './types';\n\nexport function useComponentSize(\n  ref: React.RefObject<HTMLElement | SVGGraphicsElement>,\n): ComponentSize {\n  const refs = useMemo(\n    () => [ref],\n    // Если реф начал указывать на другой элемент, нужно обновить подписки\n    [ref.current],\n  );\n  return useResizeObserved(refs, getElementSize)[0];\n}\n", "import React, { RefObject, useLayoutEffect } from 'react';\n\nexport const useResizeObserved = <\n  ELEMENT extends HTMLElement | SVGGraphicsElement,\n  RETURN_TYPE,\n>(\n  refs: Array<RefObject<ELEMENT>>,\n  mapper: (el: ELEMENT | null) => RETURN_TYPE,\n): RETURN_TYPE[] => {\n  const [dimensions, setDimensions] = React.useState<RETURN_TYPE[]>(() =>\n    refs.map((ref) => mapper(ref.current)),\n  );\n\n  // Храним маппер в рефке, чтобы если его передадут инлайн-функцией, это не вызвало бесконечные перерендеры\n  const mapperRef = React.useRef(mapper);\n  useLayoutEffect(() => {\n    mapperRef.current = mapper;\n  }, [mapper]);\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      setDimensions(refs.map((ref) => mapperRef.current(ref.current)));\n    });\n\n    for (const ref of refs) {\n      ref.current && resizeObserver.observe(ref.current);\n    }\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [refs]);\n\n  return dimensions;\n};\n", "import { ComponentSize } from './types';\n\nconst defaultSize: ComponentSize = { width: 0, height: 0 };\n\nexport const getElementSize = (\n  el: HTMLElement | SVGGraphicsElement | null,\n): ComponentSize => {\n  if (!el) {\n    return defaultSize;\n  }\n\n  const { width, height } = el.getBoundingClientRect();\n\n  return {\n    width,\n    height,\n  };\n};\n", "export const isRenderProp = <PROPS>(\n  children: React.ReactNode | PROPS,\n): children is PROPS => typeof children === 'function';\n", "import { Direction, Position } from './Popover';\n\ntype Size = Pick<DOMRect, 'width' | 'height'>;\n\ntype PositionsByDirection = Record<Direction, NonNullable<Position>>;\n\nconst getPosition = (x: number, y: number): NonNullable<Position> => ({\n  x: Math.round(x),\n  y: Math.round(y),\n});\n\nexport const getPositionsByDirection = ({\n  contentSize,\n  anchorSize,\n  position: { x, y },\n  arrowOffset = 0,\n  offset = 0,\n}: {\n  contentSize: Size;\n  anchorSize: Size;\n  position: NonNullable<Position>;\n  arrowOffset?: number;\n  offset?: number;\n}): PositionsByDirection => {\n  const { width: contentWidth, height: contentHeight } = contentSize;\n  const { width: anchorWidth, height: anchorHeight } = anchorSize;\n  const anchorCenter = {\n    x: x + anchorWidth / 2,\n    y: y + anchorHeight / 2,\n  };\n\n  const xForRightDirections = x + anchorWidth + offset;\n  const xForLeftDirections = x - contentWidth - offset;\n  const xForVerticalDirections = {\n    right: anchorCenter.x - arrowOffset,\n    center: anchorCenter.x - contentWidth / 2,\n    left: anchorCenter.x - contentWidth + arrowOffset,\n  };\n\n  const yForDownDirections = y + anchorHeight + offset;\n  const yForUpDirections = y - contentHeight - offset;\n  const yForHorizontalDirections = {\n    up: anchorCenter.y - contentHeight + arrowOffset,\n    center: anchorCenter.y - contentHeight / 2,\n    down: anchorCenter.y - arrowOffset,\n  };\n\n  const xForStartLeftDirections = x;\n  const xForStartRightDirections = x - contentWidth + anchorWidth;\n\n  const yForStartUpDirections = y;\n  const yForStartDownDirections = y - contentHeight + anchorHeight;\n\n  return {\n    upLeft: getPosition(xForVerticalDirections.left, yForUpDirections),\n    upCenter: getPosition(xForVerticalDirections.center, yForUpDirections),\n    upRight: getPosition(xForVerticalDirections.right, yForUpDirections),\n\n    downLeft: getPosition(xForVerticalDirections.left, yForDownDirections),\n    downCenter: getPosition(xForVerticalDirections.center, yForDownDirections),\n    downRight: getPosition(xForVerticalDirections.right, yForDownDirections),\n\n    rightUp: getPosition(xForRightDirections, yForHorizontalDirections.up),\n    rightCenter: getPosition(\n      xForRightDirections,\n      yForHorizontalDirections.center,\n    ),\n    rightDown: getPosition(xForRightDirections, yForHorizontalDirections.down),\n\n    leftUp: getPosition(xForLeftDirections, yForHorizontalDirections.up),\n    leftCenter: getPosition(\n      xForLeftDirections,\n      yForHorizontalDirections.center,\n    ),\n    leftDown: getPosition(xForLeftDirections, yForHorizontalDirections.down),\n\n    downStartLeft: getPosition(xForStartLeftDirections, yForDownDirections),\n    downStartRight: getPosition(xForStartRightDirections, yForDownDirections),\n\n    upStartLeft: getPosition(xForStartLeftDirections, yForUpDirections),\n    upStartRight: getPosition(xForStartRightDirections, yForUpDirections),\n\n    leftStartUp: getPosition(xForLeftDirections, yForStartUpDirections),\n    leftStartDown: getPosition(xForLeftDirections, yForStartDownDirections),\n\n    rightStartUp: getPosition(xForRightDirections, yForStartUpDirections),\n    rightStartDown: getPosition(xForRightDirections, yForStartDownDirections),\n  };\n};\n\ntype ComputedPositionAndDirectionParams = {\n  // Координата точки, к которой крепится поповер. Для якоря — координата левой верхней точки якоря\n  position: Position;\n  contentSize: Size;\n  viewportSize: Size;\n  anchorSize?: Size;\n  offset?: number;\n  arrowOffset?: number;\n  direction: Direction;\n  spareDirection: Direction;\n  possibleDirections: readonly Direction[];\n  bannedDirections: readonly Direction[];\n};\n\nexport const getComputedPositionAndDirection = ({\n  position: initialPosition,\n  contentSize,\n  viewportSize,\n  anchorSize = { width: 0, height: 0 },\n  arrowOffset,\n  direction: initialDirection,\n  possibleDirections,\n  bannedDirections,\n  spareDirection,\n  offset = 0,\n}: ComputedPositionAndDirectionParams): {\n  direction: Direction;\n  position: Position;\n} => {\n  if (!initialPosition) {\n    return { position: initialPosition, direction: initialDirection };\n  }\n\n  const positionsByDirection = getPositionsByDirection({\n    contentSize,\n    anchorSize,\n    position: initialPosition,\n    arrowOffset,\n    offset,\n  });\n\n  const direction =\n    [initialDirection, ...possibleDirections]\n      .filter((dir) => !bannedDirections.includes(dir))\n      .find((dir) => {\n        const pos = positionsByDirection[dir];\n        const { width, height } = contentSize;\n\n        const isFittingDown = pos.y + height <= viewportSize.height;\n        const isFittingUp = pos.y >= 0;\n\n        const isFittingLeft = pos.x >= 0;\n        const isFittingRight = pos.x + width <= viewportSize.width;\n\n        return isFittingUp && isFittingDown && isFittingLeft && isFittingRight;\n      }) || spareDirection;\n\n  return {\n    direction,\n    position: positionsByDirection[direction],\n  };\n};\n", "import React, { useEffect } from 'react';\n\nimport { useMutableRef } from '../../hooks/useMutableRef/useMutableRef';\n\nconst getAllParents = (element: HTMLElement): readonly Node[] => {\n  const mutableParents: Node[] = [];\n  let currentNode: Node | null = element;\n\n  while (currentNode) {\n    currentNode !== element && mutableParents.push(currentNode);\n    currentNode = currentNode.parentNode;\n  }\n\n  return mutableParents;\n};\n\n/** Запрос репозиции поповера при ресайзе окна и скролле */\nexport const usePopoverReposition = ({\n  isActive,\n  scrollAnchorRef,\n  onRequestReposition,\n}: {\n  isActive: boolean;\n  /** При скролле родителей этого элемента будет запрашиваться репозиция поповера */\n  scrollAnchorRef: React.RefObject<HTMLElement | null>;\n  onRequestReposition: () => void;\n}) => {\n  const onRequestRepositionRef = useMutableRef(onRequestReposition);\n\n  useEffect(() => {\n    const fn = () => onRequestRepositionRef.current();\n    if (isActive) {\n      window.addEventListener('resize', fn);\n\n      const allParents = scrollAnchorRef?.current\n        ? getAllParents(scrollAnchorRef.current)\n        : [];\n      allParents.forEach((parentEl) => parentEl.addEventListener('scroll', fn));\n\n      return () => {\n        window.removeEventListener('resize', fn);\n\n        allParents.forEach((parentEl) =>\n          parentEl.removeEventListener('scroll', fn),\n        );\n      };\n    }\n    return undefined;\n  }, [scrollAnchorRef]);\n};\n", "import { useCallback, useEffect, useRef } from 'react';\n\nimport { useMutableRef } from '##/hooks/useMutableRef';\n\nexport const useDebounce = <T extends (...args: any) => void>(\n  fn: T,\n  time: number,\n) => {\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n  const fnRef = useMutableRef(fn);\n\n  useEffect(() => {\n    return (): void => {\n      timeoutRef.current && clearTimeout(timeoutRef.current);\n    };\n  }, [time]);\n\n  return useCallback<T>(\n    ((...args) => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null;\n        if (typeof fnRef.current === 'function') {\n          fnRef.current(...args);\n        }\n      }, time);\n    }) as T,\n    [time],\n  );\n};\n", "import { useEffect, useMemo, useRef, useState } from 'react';\n\nimport { useMutableRef } from '##/hooks/useMutableRef';\nimport { useRefs } from '##/hooks/useRefs';\nimport { useResizeObserved } from '##/hooks/useResizeObserved';\n\nimport {\n  arraysIsEq,\n  Bounds,\n  calculateBounds,\n  calculateSavedSizes,\n  defaultItemsCalculationCount,\n  getElementHeight,\n  useCalculateVisiblePosition,\n  useScroll,\n  UseVirtualScrollProps,\n  UseVirtualScrollReturn,\n} from './hellpers';\n\nexport const useVirtualScroll = <\n  ITEM_ELEMENT extends HTMLElement = HTMLDivElement,\n  SCROLL_ELEMENT extends HTMLElement = HTMLDivElement,\n>({\n  length,\n  onScrollToBottom,\n  isActive = false,\n}: UseVirtualScrollProps): UseVirtualScrollReturn<\n  ITEM_ELEMENT,\n  SCROLL_ELEMENT\n> => {\n  const [visiblePosition, setVisiblePosition] = useState<[number, number]>([\n    0, 0,\n  ]);\n  const [bounds, setBounds] = useState<Bounds>([\n    [0, 0],\n    [0, isActive ? defaultItemsCalculationCount : length],\n  ]);\n  const listRefs = useRefs<ITEM_ELEMENT>(length, visiblePosition);\n  const scrollElementRef = useRef<SCROLL_ELEMENT>(null);\n  const sizes = useResizeObserved(listRefs, getElementHeight);\n  const savedSizesRef = useRef(calculateSavedSizes([], sizes));\n  const onScrollToBottomRef = useMutableRef(onScrollToBottom);\n  const [scrollElementRefHeight] = useResizeObserved(\n    useMemo(() => {\n      return [scrollElementRef];\n    }, [scrollElementRef]),\n    getElementHeight,\n  );\n  const calculateVisiblePosition = useCalculateVisiblePosition(\n    scrollElementRef.current,\n    setVisiblePosition,\n    sizes,\n  );\n\n  useScroll(scrollElementRef, calculateVisiblePosition, isActive);\n\n  useEffect(() => {\n    if (isActive) {\n      calculateVisiblePosition();\n    }\n  }, [scrollElementRefHeight, isActive]);\n\n  useEffect(() => {\n    if (isActive) {\n      savedSizesRef.current = calculateSavedSizes(savedSizesRef.current, sizes);\n      setBounds(\n        calculateBounds(savedSizesRef.current, sizes, visiblePosition, length),\n      );\n    } else {\n      setBounds([\n        [0, 0],\n        [0, length],\n      ]);\n    }\n  }, [...visiblePosition, sizes, length, isActive]);\n\n  useEffect(() => {\n    if (isActive && onScrollToBottomRef.current && bounds[1][1] + 1 >= length) {\n      onScrollToBottomRef.current(length);\n    }\n  }, [bounds[1][1], isActive]);\n\n  useEffect(() => {\n    const resetVisiblePosition: [number, number] = [0, 0];\n    const resetBounds: Bounds = [\n      [0, 0],\n      [0, isActive ? defaultItemsCalculationCount : length],\n    ];\n\n    setBounds((state) =>\n      arraysIsEq(state[0], resetBounds[0]) &&\n      arraysIsEq(state[1], resetBounds[1])\n        ? state\n        : resetBounds,\n    );\n\n    setVisiblePosition((state) =>\n      arraysIsEq(state, resetVisiblePosition) ? state : resetVisiblePosition,\n    );\n  }, [isActive]);\n\n  return {\n    listRefs,\n    scrollElementRef,\n    slice: bounds[1],\n    spaceTop: bounds[0][0],\n  };\n};\n", "import { createRef, useMemo } from 'react';\n\nconst isNotNumber = <T>(value: T): value is Exclude<T, number> =>\n  typeof value !== 'number';\n\ntype Return<\n  T,\n  E extends number | string[] | readonly string[],\n> = E extends string[]\n  ? Record<E[number], React.RefObject<T>>\n  : E extends readonly string[]\n  ? Record<E[number], React.RefObject<T>>\n  : Array<React.RefObject<T>>;\n\nexport const useRefs = <\n  T,\n  E extends number | string[] | readonly string[] = number,\n>(\n  elements: E,\n  deps: unknown[] = [],\n): Return<T, E> =>\n  useMemo(() => {\n    if (isNotNumber(elements)) {\n      const obj: Record<string, React.RefObject<T>> = {};\n      for (let index = 0; index < elements.length; index++) {\n        obj[elements[index]] = createRef<T>();\n      }\n\n      return obj as Return<T, E>;\n    }\n\n    return new Array(elements as number)\n      .fill(null)\n      .map(() => createRef<T>()) as unknown as Return<T, E>;\n  }, [typeof elements === 'number' ? elements : elements.join('-'), ...deps]);\n", "import { RefObject, useCallback, useEffect } from 'react';\n\nimport { getElementSize } from '##/hooks/useComponentSize';\nimport { useMutableRef } from '##/hooks/useMutableRef';\n\nexport type UseVirtualScrollProps = {\n  length: number;\n  isActive?: boolean;\n  onScrollToBottom?: (index: number) => void;\n};\n\nexport type UseVirtualScrollReturn<ITEM_ELEMENT, SCROLL_ELEMENT> = {\n  listRefs: React.RefObject<ITEM_ELEMENT>[];\n  scrollElementRef: React.RefObject<SCROLL_ELEMENT>;\n  slice: [number, number];\n  spaceTop: number;\n};\n\nexport type Bounds = [[number, number], [number, number]];\n\nexport const defaultItemsCalculationCount = 5;\n\nexport const arraysIsEq = (arr1: number[], arr2: number[]) =>\n  arr1.join('-') === arr2.join('-');\n\nexport const useScroll = (\n  ref: RefObject<HTMLElement>,\n  fn: () => void,\n  isActive: boolean,\n) => {\n  useEffect(() => {\n    if (isActive) {\n      ref.current?.addEventListener('scroll', fn);\n    }\n\n    return () => {\n      ref.current?.removeEventListener('scroll', fn);\n    };\n  }, [ref.current, fn, isActive]);\n};\n\nexport const getElementHeight = (el: HTMLElement | SVGGraphicsElement | null) =>\n  getElementSize(el).height;\n\nconst roundPositionByGap = (position: number, gap: number) => {\n  if (position <= 0) {\n    return 0;\n  }\n  return Math.ceil(position / gap) * gap;\n};\n\nexport const getVisiblePosition = (\n  top: number,\n  height: number,\n  elementMaxSize: number,\n): [number, number] => {\n  const gap =\n    height > elementMaxSize * defaultItemsCalculationCount\n      ? height * 1.5\n      : elementMaxSize * defaultItemsCalculationCount;\n\n  const visiblePosition: [number, number] = [\n    Math.ceil(roundPositionByGap(top - gap, height)),\n    Math.ceil(roundPositionByGap(top === 0 ? gap : top + gap, height)),\n  ];\n\n  return visiblePosition;\n};\n\nexport const calculateSavedSizes = (savedSizes: number[], sizes: number[]) => {\n  const newSavedSizes = [...savedSizes];\n  for (let index = 0; index < sizes.length; index++) {\n    const element = sizes[index];\n    if (element > 0) {\n      newSavedSizes[index] = element;\n    }\n  }\n  return newSavedSizes;\n};\n\nexport const useCalculateVisiblePosition = (\n  scrollElement: HTMLElement | null,\n  set: (value: React.SetStateAction<[number, number]>) => void,\n  elementsSizes: number[],\n) => {\n  const elementMaxSizeRef = useMutableRef(Math.max.apply(null, elementsSizes));\n\n  return useCallback(() => {\n    if (!scrollElement) {\n      return;\n    }\n\n    const visiblePosition = getVisiblePosition(\n      scrollElement.scrollTop,\n      getElementHeight(scrollElement),\n      elementMaxSizeRef.current,\n    );\n\n    set((state) => {\n      if (visiblePosition[0] !== state[0] || visiblePosition[1] !== state[1]) {\n        return visiblePosition;\n      }\n\n      return state;\n    });\n  }, [scrollElement, set]);\n};\n\nconst addCount = (\n  pxs: [number, number],\n  visiblePosition: [number, number],\n  savedSize: number[],\n) => {\n  const lastSavedSize = savedSize.slice(-50);\n  const average =\n    lastSavedSize.reduce((a, b) => a + b, 0) / lastSavedSize.length;\n\n  let add = defaultItemsCalculationCount;\n\n  while (visiblePosition[1] >= pxs[1] + add * average) {\n    add += defaultItemsCalculationCount;\n  }\n\n  return add;\n};\n\nexport const calculateBounds = (\n  savedSizes: number[],\n  sizes: number[],\n  visiblePosition: [number, number],\n  length: number,\n): Bounds => {\n  const pxs: [number, number] = [0, 0];\n  const indexs: [number, number] = [0, 0];\n\n  for (let index = 0; index < savedSizes.length; index++) {\n    if (visiblePosition[0] > pxs[0]) {\n      pxs[0] += savedSizes[index];\n      indexs[0] = index + 1;\n    }\n\n    if (visiblePosition[1] > pxs[1]) {\n      pxs[1] += savedSizes[index];\n      indexs[1] = index + 1;\n    }\n  }\n\n  if (indexs[0] === 0 && indexs[1] === 0) {\n    indexs[1] = defaultItemsCalculationCount;\n  }\n\n  if (sizes.length !== savedSizes.length) {\n    indexs[1] += addCount(pxs, visiblePosition, savedSizes);\n  }\n\n  if (indexs[1] > length) {\n    indexs[1] = length;\n  }\n\n  return [pxs, indexs];\n};\n", "import './MixPopoverAnimate.css';\n\nimport { Direction } from '../../components/Popover/Popover';\nimport { cn } from '../../utils/bem';\nimport { cnForCssTransition } from '../../utils/cnForCssTransition';\n\nexport type Animate =\n  | 'entered'\n  | 'entering'\n  | 'exiting'\n  | 'exited'\n  | 'unmounted'\n  | 'enter'\n  | 'enterActive'\n  | 'enterDone'\n  | 'exit'\n  | 'exitActive'\n  | 'exitDone';\n\ntype Mods = {\n  animate?: Animate;\n  direction?: Direction;\n};\n\ntype CnMixPopoverAnimate = (\n  mods?: Mods | null,\n  mix?: Array<string | undefined>,\n) => string;\n\nconst cnFn = cn('MixPopoverAnimate');\n\nexport const cnMixPopoverAnimate: CnMixPopoverAnimate = cnFn;\nexport const cnMixPopoverAnimateForCssTransition = cnForCssTransition(cnFn);\n\nexport const animateTimeout = 200;\n", "import { ClassNameFormatter } from '@bem-react/classname';\n\nexport type CSSTransitionClassNames = {\n  appear: string;\n  appearActive: string;\n  appearDone: string;\n  enter: string;\n  enterActive: string;\n  enterDone: string;\n  exit: string;\n  exitActive: string;\n  exitDone: string;\n};\n\nfunction cnFunctionHelper(\n  cnFunction: ClassNameFormatter,\n  animateName: string,\n  animate: string,\n  element?: string,\n) {\n  return element\n    ? cnFunction(element, { [animateName]: animate })\n    : cnFunction({ [animateName]: animate });\n}\n\nexport function cnForCssTransition(\n  cnFunction: ClassNameFormatter,\n  element?: string,\n  animateName = 'animate',\n): CSSTransitionClassNames {\n  return {\n    appear: cnFunctionHelper(cnFunction, animateName, 'appear', element),\n    appearActive: cnFunctionHelper(\n      cnFunction,\n      animateName,\n      'appearActive',\n      element,\n    ),\n    appearDone: cnFunctionHelper(\n      cnFunction,\n      animateName,\n      'appearDone',\n      element,\n    ),\n    enter: cnFunctionHelper(cnFunction, animateName, 'enter', element),\n    enterActive: cnFunctionHelper(\n      cnFunction,\n      animateName,\n      'enterActive',\n      element,\n    ),\n    enterDone: cnFunctionHelper(cnFunction, animateName, 'enterDone', element),\n    exit: cnFunctionHelper(cnFunction, animateName, 'exit', element),\n    exitActive: cnFunctionHelper(\n      cnFunction,\n      animateName,\n      'exitActive',\n      element,\n    ),\n    exitDone: cnFunctionHelper(cnFunction, animateName, 'exitDone', element),\n  };\n}\n", "export const fabricIndex = (start = -1) => {\n  let index: number = start;\n\n  return () => {\n    index += 1;\n\n    return index;\n  };\n};\n", "import './SelectCreateButton.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { ListAddItem } from '##/components/ListCanary';\nimport { cn } from '##/utils/bem';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport { PropSize } from '../types';\n\ntype SelectCreateButtonProps = PropsWithHTMLAttributesAndRef<\n  {\n    labelForCreate?: string;\n    inputValue?: string;\n    active: boolean;\n    hovered: boolean;\n    size: PropSize;\n    indent: 'normal' | 'increased';\n  },\n  HTMLDivElement\n>;\n\nexport const cnSelectCreateButton = cn('SelectCreateButton');\n\nexport const SelectCreateButton: React.FC<SelectCreateButtonProps> = forwardRef(\n  (props, ref) => {\n    const {\n      className,\n      labelForCreate,\n      inputValue,\n      active,\n      hovered,\n      size,\n      indent,\n      ...otherProps\n    } = props;\n\n    return (\n      <ListAddItem\n        {...otherProps}\n        ref={ref}\n        className={cnSelectCreateButton(null, [className])}\n        aria-selected={active}\n        role=\"option\"\n        active={hovered}\n        size={size}\n        innerOffset={indent}\n        label={\n          <>\n            {labelForCreate} «<b>{inputValue}</b>»\n          </>\n        }\n      />\n    );\n  },\n);\n", "import React, { forwardRef } from 'react';\n\nimport { ListGroupLabel } from '##/components/ListCanary';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport { PropSize } from '../types';\n\ntype SelectGroupLabelProps = PropsWithHTMLAttributesAndRef<\n  {\n    label: string;\n    size: PropSize;\n    indent: 'normal' | 'increased';\n  },\n  HTMLDivElement\n>;\n\nexport const SelectGroupLabel: React.FC<SelectGroupLabelProps> = forwardRef(\n  ({ indent, ...otherProps }, ref) => (\n    <ListGroupLabel {...otherProps} ref={ref} innerOffset={indent} />\n  ),\n);\n", "import React, { forwardRef } from 'react';\n\nimport { ListItem } from '##/components/ListCanary';\nimport { Text, TextPropSize } from '##/components/Text';\nimport { cn } from '##/utils/bem';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport { Checkbox } from '../../Checkbox/Checkbox';\nimport { sizeCheckboxMap } from '../SelectItem/SelectItem';\nimport { PropSize } from '../types';\n\nexport type SelectItemAllProps = PropsWithHTMLAttributesAndRef<\n  {\n    checked: boolean;\n    intermediate?: boolean;\n    size: PropSize;\n    hovered?: boolean;\n    indent?: 'normal' | 'increased';\n    countItems?: number;\n    total?: number;\n  },\n  HTMLDivElement\n>;\n\nexport const cnSelectItemAll = cn('SelectItemAll');\n\nconst textSizeMap: Record<PropSize, TextPropSize> = {\n  xs: 's',\n  s: 's',\n  m: 'm',\n  l: 'l',\n};\n\nexport const SelectItemAll: React.FC<SelectItemAllProps> = forwardRef(\n  (props, ref) => {\n    const {\n      checked,\n      intermediate,\n      size,\n      indent,\n      hovered,\n      countItems = 0,\n      className,\n      total = 0,\n      ...otherProps\n    } = props;\n\n    return (\n      <ListItem\n        {...otherProps}\n        ref={ref}\n        className={cnSelectItemAll(null, [className])}\n        aria-selected={checked}\n        role=\"option\"\n        label=\"Выбрать все\"\n        innerOffset={indent}\n        size={size}\n        active={hovered}\n        rightSide={\n          <Text\n            size={textSizeMap[size]}\n            lineHeight=\"xs\"\n            view=\"ghost\"\n          >{`${countItems} из ${total}`}</Text>\n        }\n        leftSide={\n          <Checkbox\n            checked={checked}\n            intermediate={intermediate}\n            size={sizeCheckboxMap[size]}\n          />\n        }\n      >\n        Выбрать все\n      </ListItem>\n    );\n  },\n);\n", "import './SelectItem.css';\n\nimport React, { forwardRef } from 'react';\n\nimport { Checkbox, CheckboxPropSize } from '##/components/Checkbox';\nimport { ListItem } from '##/components/ListCanary';\nimport { cn } from '##/utils/bem';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport { PropSize } from '../types';\n\nexport type SelectItemProps = PropsWithHTMLAttributesAndRef<\n  {\n    label: string;\n    active: boolean;\n    hovered: boolean;\n    multiple: boolean;\n    size: PropSize;\n    indent: 'normal' | 'increased';\n    disabled: boolean | undefined;\n  },\n  HTMLDivElement\n>;\n\nexport const sizeCheckboxMap: Record<PropSize, CheckboxPropSize> = {\n  xs: 'm',\n  s: 'm',\n  m: 'l',\n  l: 'l',\n};\n\nexport const cnSelectItem = cn('SelectItem');\n\nexport const SelectItem: React.FC<SelectItemProps> = forwardRef(\n  (props, ref) => {\n    const {\n      className,\n      label,\n      active,\n      hovered,\n      multiple,\n      size,\n      indent,\n      disabled,\n      onClick,\n      ...otherProps\n    } = props;\n\n    return (\n      <ListItem\n        {...otherProps}\n        ref={ref}\n        className={cnSelectItem(null, [className])}\n        aria-selected={active}\n        aria-disabled={disabled}\n        role=\"option\"\n        label={label}\n        innerOffset={indent}\n        size={size}\n        active={hovered}\n        checked={!multiple && active}\n        disabled={disabled}\n        onClick={onClick}\n        leftSide={\n          multiple && (\n            <Checkbox\n              checked={active}\n              disabled={disabled}\n              size={sizeCheckboxMap[size]}\n            />\n          )\n        }\n      >\n        {label}\n      </ListItem>\n    );\n  },\n);\n", "import './SelectLoader.css';\n\nimport React from 'react';\n\nimport { Loader } from '##/components/LoaderDeprecated';\nimport { cn } from '##/utils/bem';\n\nexport const cnSelectLoader = cn('SelectLoader');\n\nexport const SelectLoader = () => {\n  return (\n    <div className={cnSelectLoader()}>\n      <Loader className={cnSelectLoader('Loader')} size=\"s\" />\n    </div>\n  );\n};\n", "import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { useClickOutside } from '##/hooks/useClickOutside';\nimport { useDebounce } from '##/hooks/useDebounce';\nimport { KeyHandler, useKeys } from '##/hooks/useKeysDepricated';\nimport { useMutableRef } from '##/hooks/useMutableRef';\nimport { usePrevious } from '##/hooks/usePrevious';\nimport { useRefs } from '##/hooks/useRefs';\nimport {\n  CountedGroup,\n  getCountedGroups,\n  getGroups,\n  SelectAllItem,\n} from '##/utils/getGroups';\n\nimport { scrollToIndex, useHoistedState } from './helpers';\n\ntype IndexForHighlight = number | ((oldIndex: number) => number);\n\ntype Group<ITEM, GROUP> = {\n  items: ITEM[];\n  key: string | number;\n  group?: GROUP;\n};\ntype GetItemGroupKey<ITEM> = (item: ITEM) => string | number | undefined;\ntype GetGroupKey<GROUP> = (item: GROUP) => string | number | undefined;\ntype SortGroups<ITEM, GROUP> = (\n  a: Group<ITEM, GROUP>,\n  b: Group<ITEM, GROUP>,\n) => number;\n\ntype OnChangeProp<ITEM, MULTIPLE extends boolean> = (\n  value: (MULTIPLE extends true ? ITEM[] : ITEM) | null,\n  props: {\n    e: React.SyntheticEvent;\n  },\n) => void;\n\ntype ValueProp<ITEM, MULTIPLE extends boolean> =\n  | (MULTIPLE extends true ? ITEM[] : ITEM)\n  | null\n  | undefined;\n\nexport type OptionForCreate = {\n  label: string;\n  __optionForCreate: boolean;\n};\n\nexport type SelectProps<ITEM, GROUP, MULTIPLE extends boolean> = {\n  getItemGroupKey?: GetItemGroupKey<ITEM> | undefined;\n  getGroupKey?: GetGroupKey<GROUP>;\n  sortGroups?: SortGroups<ITEM, GROUP>;\n  groups?: GROUP[];\n  items: ITEM[];\n  dropdownRef: React.MutableRefObject<HTMLDivElement | null>;\n  controlRef: React.MutableRefObject<HTMLDivElement | null>;\n  disabled?: boolean;\n  selectAll?: boolean;\n  getItemLabel: (item: ITEM) => string;\n  getItemKey: (item: ITEM) => string | number;\n  getItemDisabled?: (item: ITEM) => boolean | undefined;\n  searchFunction?: (item: ITEM, searchValue: string) => boolean;\n  onCreate?: (\n    label: string,\n    props: { e: React.SyntheticEvent; label: string },\n  ) => void;\n  onFocus?: React.FocusEventHandler<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler<HTMLInputElement>;\n  multiple: boolean;\n  searchValue?: string;\n  onChange: OnChangeProp<ITEM, MULTIPLE>;\n  value: ValueProp<ITEM, MULTIPLE>;\n  dropdownOpen?: boolean;\n  onDropdownOpen?: (isOpen: boolean) => void;\n  onSearchValueChange?: (value: string) => void;\n  ignoreOutsideClicksRefs?: ReadonlyArray<React.RefObject<HTMLElement>>;\n};\n\nexport type OptionProps<ITEM> = {\n  index: number;\n  item: ITEM | OptionForCreate | SelectAllItem;\n  keyPrefix: string | number;\n};\n\nexport type GetOptionPropsResult = {\n  onClick: (e: React.SyntheticEvent) => void;\n  onMouseEnter: (e: React.SyntheticEvent) => void;\n  active: boolean;\n  hovered: boolean;\n  key: string | number;\n};\n\nconst isMultipleParams = <ITEM, GROUP>(\n  params: SelectProps<ITEM, GROUP, boolean>,\n): params is SelectProps<ITEM, GROUP, true> => {\n  return params.multiple;\n};\n\nconst isNotMultipleParams = <ITEM, GROUP>(\n  params: SelectProps<ITEM, GROUP, boolean>,\n): params is SelectProps<ITEM, GROUP, false> => {\n  return !params.multiple;\n};\n\nconst actions = {\n  setOpen: 'setOpen',\n  setSearch: 'setSearch',\n  highlightIndex: 'highlightIndex',\n};\n\nconst initialState = {\n  searchValue: '',\n  resolvedSearchValue: '',\n  isOpen: false,\n  highlightedIndex: 0,\n  scrollToHighlighted: false,\n};\n\nexport const isOptionForCreate = <ITEM, GROUP>(\n  params: OptionForCreate | Group<ITEM, GROUP> | ITEM,\n): params is OptionForCreate => {\n  return (\n    params && Object.prototype.hasOwnProperty.call(params, '__optionForCreate')\n  );\n};\n\nexport const isNotOptionForCreate = <ITEM, GROUP>(\n  params: OptionForCreate | Group<ITEM, GROUP>,\n): params is Group<ITEM, GROUP> => {\n  return (\n    params && !Object.prototype.hasOwnProperty.call(params, '__optionForCreate')\n  );\n};\n\nexport const isOptionForSelectAll = <ITEM>(\n  params: SelectAllItem | ITEM,\n): params is SelectAllItem => {\n  return (\n    params && Object.prototype.hasOwnProperty.call(params, '__optionSelctAll')\n  );\n};\n\nexport function useSelect<ITEM, GROUP, MULTIPLE extends boolean>(\n  params: SelectProps<ITEM, GROUP, MULTIPLE>,\n) {\n  const {\n    items,\n    dropdownRef,\n    controlRef,\n    disabled = false,\n    multiple = false,\n    getItemLabel,\n    getItemKey,\n    searchFunction,\n    getItemGroupKey,\n    groups,\n    selectAll = false,\n    getGroupKey,\n    sortGroups,\n    getItemDisabled,\n    onFocus,\n    onBlur,\n    searchValue: searchValueProp,\n    onDropdownOpen,\n    onSearchValueChange,\n    dropdownOpen,\n    ignoreOutsideClicksRefs,\n  } = params;\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  const value = useMemo(\n    () =>\n      (params.value &&\n        (Array.isArray(params.value) ? params.value : [params.value])) ||\n      [],\n    [params.value],\n  );\n\n  const [\n    {\n      searchValue,\n      isOpen,\n      highlightedIndex,\n      resolvedSearchValue,\n      scrollToHighlighted,\n    },\n    setState,\n  ] = useHoistedState(initialState);\n\n  const onSearchValueChangeRef = useMutableRef(onSearchValueChange);\n\n  const searchFunctionDefault = (item: ITEM, searchValue: string) =>\n    getItemLabel(item)\n      .toLocaleLowerCase()\n      .indexOf(searchValue.toLocaleLowerCase()) !== -1;\n\n  const [filteredOptions, optionForCreate] = useMemo(() => {\n    if (resolvedSearchValue && resolvedSearchValue !== '') {\n      const fiteredOptions = items.filter((item) =>\n        searchFunction\n          ? searchFunction(item, resolvedSearchValue)\n          : searchFunctionDefault(item, resolvedSearchValue),\n      );\n\n      const optionForCreate: OptionForCreate = {\n        label: searchValue,\n        __optionForCreate: true,\n      };\n\n      return [\n        fiteredOptions,\n        params.onCreate && !fiteredOptions.length ? optionForCreate : undefined,\n      ] as const;\n    }\n    return [items, undefined] as const;\n  }, [items, resolvedSearchValue]);\n\n  const visibleItems = useMemo(() => {\n    const resultGroups = getCountedGroups(\n      getGroups(\n        filteredOptions,\n        groups?.length ? getItemGroupKey : undefined,\n        groups,\n        getGroupKey,\n        sortGroups,\n      ),\n      isMultipleParams(params) ? params.value : [],\n      selectAll,\n      getItemKey,\n      getItemDisabled,\n    );\n\n    return optionForCreate ? [optionForCreate, ...resultGroups] : resultGroups;\n  }, [\n    value,\n    selectAll,\n    filteredOptions,\n    groups,\n    getItemGroupKey,\n    getItemDisabled,\n    getGroupKey,\n    sortGroups,\n    optionForCreate,\n  ]);\n\n  const maxHighlightIndex =\n    // колличество опций\n    filteredOptions.length +\n    // кнопка для создания\n    (optionForCreate ? 1 : 0) +\n    // кнопки выбрать все\n    (selectAll ? visibleItems.length : 0);\n\n  const optionsRefs = useRefs<HTMLDivElement>(maxHighlightIndex, [isOpen]);\n\n  const notFound = useMemo(() => {\n    let flag = false;\n    if (searchValue.length > 0) {\n      flag =\n        visibleItems.filter(\n          (group) =>\n            isOptionForCreate(group) || group.items.length > 0 || group.group,\n        ).length === 0 && !params.onCreate;\n    }\n    return flag;\n  }, [visibleItems]);\n\n  const hasItems = items.length !== 0;\n\n  const allItemsSelected = useMemo(() => {\n    if (isNotMultipleParams(params)) {\n      return false;\n    }\n    if (selectAll) {\n      return (\n        items.filter((el) =>\n          value.find((item) => getItemKey(item) === getItemKey(el)),\n        ).length === items.length\n      );\n    }\n\n    return false;\n  }, [selectAll, multiple, value, items]);\n\n  const getSelectedOptionIndex = (): number => {\n    let index = 0;\n    if (value.length > 0) {\n      for (const group of visibleItems) {\n        if (isOptionForCreate(group)) {\n          index++;\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        for (const item of group.items) {\n          if (isOptionForSelectAll(item)) {\n            return index;\n          }\n          if (getItemKey(item) === getItemKey(value[0])) {\n            return index;\n          }\n          index++;\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  // Actions\n\n  const setOpen = useCallback(\n    (newIsOpen: boolean) => {\n      setState(\n        (old) => ({\n          ...old,\n          isOpen: newIsOpen,\n        }),\n        actions.setOpen,\n      );\n    },\n    [setState],\n  );\n\n  const setResolvedSearch = useDebounce((value: string) => {\n    setState((old) => {\n      if (old.resolvedSearchValue === value) {\n        return old;\n      }\n      return {\n        ...old,\n        resolvedSearchValue: value,\n      };\n    }, actions.setSearch);\n  }, 300);\n\n  const setSearch = useCallback(\n    (value: string | undefined) => {\n      setState((old) => {\n        if (old.searchValue === value) {\n          return old;\n        }\n        return {\n          ...old,\n          searchValue: value || '',\n        };\n      }, actions.setSearch);\n      setResolvedSearch(value || '');\n    },\n    [setState, setResolvedSearch],\n  );\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const highlightIndex = useCallback(\n    (indexForHighlight: IndexForHighlight, scrollToHighlighted: boolean) => {\n      setState((old) => {\n        const newIndex = Math.min(\n          Math.max(\n            0,\n            typeof indexForHighlight === 'function'\n              ? indexForHighlight(old.highlightedIndex)\n              : indexForHighlight,\n          ),\n          maxHighlightIndex - 1,\n        );\n\n        if (old.highlightedIndex === newIndex) {\n          return old;\n        }\n\n        return {\n          ...old,\n          highlightedIndex: newIndex,\n          scrollToHighlighted,\n        };\n      }, actions.highlightIndex);\n    },\n    [filteredOptions, setState, optionForCreate],\n  );\n\n  useLayoutEffect(() => {\n    if (value !== null && !prevIsOpen && isOpen) {\n      const currentHighlightIndex = getSelectedOptionIndex();\n      if (filteredOptions.length > 0) {\n        scrollToIndex(currentHighlightIndex, dropdownRef, optionsRefs, () =>\n          highlightIndex(0, false),\n        );\n      }\n    }\n  });\n\n  const removeValue = (e: React.SyntheticEvent, valueItem: ITEM) => {\n    e.stopPropagation();\n    if (isMultipleParams(params)) {\n      const newValue = params.value?.filter(\n        (item) => getItemKey(item) !== getItemKey(valueItem),\n      );\n      const val = newValue?.length ? newValue : null;\n      params.onChange(val, {\n        e,\n      });\n    }\n  };\n\n  const onChange = (e: React.SyntheticEvent, item: ITEM) => {\n    if (getItemDisabled && getItemDisabled(item)) {\n      return;\n    }\n    if (isMultipleParams(params)) {\n      const newValue = value.some(\n        (value) => getItemKey(value) === getItemKey(item),\n      )\n        ? value.filter((value) => getItemKey(value) !== getItemKey(item))\n        : [...value, item];\n      const val = newValue?.length ? newValue : null;\n      params.onChange(val, { e });\n    }\n    if (isNotMultipleParams(params)) {\n      params.onChange(item, { e });\n      setOpen(false);\n      setSearch('');\n    }\n  };\n\n  const onChangeAll = (parametrs: {\n    e: React.SyntheticEvent;\n    items: ITEM[];\n  }) => {\n    const { e, items } = parametrs;\n    if (isMultipleParams(params)) {\n      const nonDisabledItems = getItemDisabled\n        ? items.filter((item) => !getItemDisabled(item))\n        : items;\n\n      const currentGroupValues: ITEM[] = [];\n      const withoutGroupValues: ITEM[] = [];\n      value.forEach((el) => {\n        if (\n          nonDisabledItems.find((item) => getItemKey(el) === getItemKey(item))\n        ) {\n          currentGroupValues.push(el);\n        } else {\n          withoutGroupValues.push(el);\n        }\n      });\n      if (currentGroupValues.length === nonDisabledItems.length) {\n        params.onChange(withoutGroupValues, { e });\n      } else {\n        const val = [...withoutGroupValues, ...nonDisabledItems];\n        params.onChange(val, {\n          e,\n        });\n      }\n    }\n  };\n\n  const onCreate = (e: React.SyntheticEvent, label: string) => {\n    params.onCreate && params.onCreate(label, { e, label });\n    setOpen(false);\n    setSearch('');\n  };\n\n  // Handlers\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!disabled && !(!multiple && value.length > 0)) {\n      setSearch(e.target.value);\n      setOpen(true);\n    }\n  };\n\n  const handleInputClick = (): void => {\n    !disabled && setOpen(!isOpen);\n\n    if (multiple) {\n      inputRef.current?.focus();\n    }\n  };\n\n  const clearValue = (e: React.SyntheticEvent) => {\n    if (isMultipleParams(params)) {\n      const results = value?.filter((item) => getItemDisabled?.(item));\n      const val = results && results.length > 0 ? results : null;\n      params.onChange(val, {\n        e,\n      });\n    }\n    if (isNotMultipleParams(params)) {\n      params.onChange(null, { e });\n    }\n    setSearch('');\n  };\n\n  const getHandleRemoveValue = (item: ITEM) => (e: React.SyntheticEvent) =>\n    removeValue(e, item);\n\n  // Prop Getters\n\n  const ArrowUp: KeyHandler = (_, e): void => {\n    e.preventDefault();\n    !disabled && setOpen(true);\n    highlightIndex((old) => old - 1, true);\n  };\n\n  const ArrowDown: KeyHandler = (_, e): void => {\n    e.preventDefault();\n    !disabled && setOpen(true);\n    highlightIndex((old) => old + 1, true);\n  };\n\n  const Enter: KeyHandler = (_, e): void => {\n    if (isOpen) {\n      if (searchValue || filteredOptions[highlightedIndex]) {\n        e.preventDefault();\n      }\n\n      const getData = (\n        index: number,\n      ): [\n        CountedGroup<ITEM, GROUP> | undefined,\n        SelectAllItem | OptionForCreate | ITEM | undefined,\n      ] => {\n        let couter = 0;\n        for (const group of visibleItems) {\n          if (isOptionForCreate(group)) {\n            couter++;\n            return [undefined, group];\n          }\n          if (group.items.length + couter > index) {\n            return [group, group.items[index - couter]];\n          }\n          couter += group.items.length;\n        }\n        return [undefined, undefined];\n      };\n\n      const [group, item] = getData(highlightedIndex);\n\n      if (isOptionForCreate(item)) {\n        onCreate(e, item.label);\n        return;\n      }\n\n      if (isOptionForSelectAll(item)) {\n        onChangeAll({\n          e,\n          items:\n            (group?.items.filter(\n              (el) => !isOptionForSelectAll(el),\n            ) as ITEM[]) ?? [],\n        });\n        return;\n      }\n\n      if (item) {\n        onChange(e, item);\n      }\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const Escape: KeyHandler = (): void => {\n    setOpen(false);\n  };\n\n  const Tab: KeyHandler = (_, e): void => {\n    if (isOpen) {\n      e.preventDefault();\n      setOpen(false);\n    }\n  };\n\n  const Backspace: KeyHandler = (_, e): void => {\n    if (searchValue) {\n      return;\n    }\n    if (multiple) {\n      removeValue(e, value[value.length - 1]);\n    } else {\n      clearValue(e);\n    }\n  };\n\n  const getKeyProps = useKeys({\n    ArrowUp,\n    ArrowDown,\n    PageUp: ArrowUp,\n    PageDown: ArrowDown,\n    Home: ArrowUp,\n    End: ArrowDown,\n    Enter,\n    Escape,\n    Tab,\n    Backspace,\n  });\n\n  const getOptionProps = ({\n    index,\n    item,\n    keyPrefix,\n  }: OptionProps<ITEM>): GetOptionPropsResult => {\n    if (isOptionForCreate(item)) {\n      return {\n        onClick: (e: React.SyntheticEvent) => {\n          onCreate(e, item.label);\n        },\n        onMouseEnter: () => {\n          highlightIndex(index, false);\n        },\n        active: false,\n        hovered: index === highlightedIndex,\n        key: `${keyPrefix}__optionForCreate`,\n      };\n    }\n    if (isOptionForSelectAll(item)) {\n      const getItems = (): ITEM[] => {\n        for (const group of visibleItems) {\n          if (isOptionForCreate(group)) {\n            break;\n          }\n          if (group.key === item.groupKey) {\n            return (\n              (group?.items.filter(\n                (el) => !isOptionForSelectAll(el),\n              ) as ITEM[]) ?? []\n            );\n          }\n        }\n        return [];\n      };\n      return {\n        onClick: (e: React.SyntheticEvent) => {\n          onChangeAll({ e, items: getItems() });\n        },\n        onMouseEnter: () => {\n          highlightIndex(index, false);\n        },\n        active: false,\n        hovered: index === highlightedIndex,\n        key: `${keyPrefix}__optionForSelectAll`,\n      };\n    }\n    const key = getItemKey(item);\n    return {\n      onClick: (e: React.SyntheticEvent) => {\n        onChange(e, item);\n      },\n      onMouseEnter: () => {\n        highlightIndex(index, false);\n      },\n      active: Boolean(value.find((item) => getItemKey(item) === key)),\n      hovered: index === highlightedIndex,\n      key: `${keyPrefix}${key}`,\n    };\n  };\n\n  useClickOutside({\n    isActive: isOpen,\n    ignoreClicksInsideRefs: [\n      dropdownRef,\n      controlRef,\n      ...(ignoreOutsideClicksRefs || []),\n    ],\n    handler: () => {\n      setOpen(false);\n    },\n  });\n\n  useEffect(() => {\n    if (disabled) {\n      setOpen(false);\n    }\n  }, [disabled]);\n\n  useEffect(() => {\n    const currentHighlightIndex = getSelectedOptionIndex();\n    highlightIndex(currentHighlightIndex, true);\n  }, [highlightIndex]);\n\n  useEffect(() => {\n    if (filteredOptions.length > 0 && scrollToHighlighted) {\n      scrollToIndex(highlightedIndex, dropdownRef, optionsRefs, () =>\n        highlightIndex(0, false),\n      );\n    }\n  }, [highlightedIndex]);\n\n  const handleInputFocus = (e: React.FocusEvent<HTMLInputElement>): void => {\n    if (!disabled) {\n      if (!isFocused) {\n        setIsFocused(true);\n      }\n      if (typeof onFocus === 'function') {\n        onFocus(e);\n      }\n    }\n  };\n\n  const handleInputBlur = (e: React.FocusEvent<HTMLInputElement>): void => {\n    if (isOpen) {\n      inputRef.current?.focus();\n      return;\n    }\n\n    if (isFocused) {\n      setIsFocused(false);\n    }\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleToggleDropdown = (): void => {\n    if (isOpen) {\n      setOpen(false);\n      setIsFocused(false);\n    } else {\n      setOpen(true);\n      setIsFocused(true);\n      inputRef.current?.focus();\n    }\n  };\n\n  useEffect(() => {\n    setSearch(searchValueProp);\n  }, [searchValueProp]);\n\n  useEffect(() => {\n    dropdownRef.current?.scrollTo({ top: 0 });\n  }, [resolvedSearchValue]);\n\n  useEffect(() => {\n    onDropdownOpen?.(isOpen);\n  }, [isOpen]);\n\n  useEffect(() => {\n    onSearchValueChangeRef.current?.(searchValue);\n  }, [searchValue]);\n\n  useEffect(() => {\n    setOpen(dropdownOpen || false);\n  }, [dropdownOpen]);\n\n  return {\n    isOpen,\n    isFocused,\n    highlightedIndex,\n    visibleItems,\n    highlightIndex,\n    getOptionProps,\n    handleInputFocus,\n    handleInputBlur,\n    handleToggleDropdown,\n    handleInputClick,\n    inputRef,\n    getKeyProps,\n    handleInputChange,\n    searchValue,\n    clearValue,\n    getHandleRemoveValue,\n    notFound,\n    hasItems,\n    allItemsSelected,\n    optionsRefs,\n  };\n}\n", "export type KeyHandler = (\n  prop: Record<string, unknown>,\n  e: React.KeyboardEvent,\n) => void;\n\nexport type KeyProps = {\n  onKeyDown?: (e: React.KeyboardEvent) => void;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n};\n\nexport type UserKeysProps = {\n  [key: string]: (\n    prop: { keyCode: number; key: string; shift: boolean; meta: boolean },\n    e: React.KeyboardEvent<Element>,\n  ) => void;\n};\n\nexport const useKeys = (userKeys: UserKeysProps) => {\n  return (rest?: KeyProps): KeyProps => {\n    return {\n      ...rest,\n      onKeyDown: (e: React.KeyboardEvent): void => {\n        const { keyCode, key, shiftKey: shift, metaKey: meta } = e;\n        const handler = userKeys[key] || userKeys[keyCode];\n        if (typeof handler === 'function') {\n          handler(\n            {\n              keyCode,\n              key,\n              shift,\n              meta,\n            },\n            e,\n          );\n        }\n        if (typeof rest?.onKeyDown === 'function') {\n          rest.onKeyDown(e);\n        }\n      },\n    };\n  };\n};\n", "import React from 'react';\n\nexport function usePrevious<T>(value: T): T {\n  const ref = React.useRef(value);\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n", "import React from 'react';\n\nimport { scrollIntoView } from '##/utils/scrollIntoView';\n\ntype State = {\n  searchValue: string;\n  resolvedSearchValue: string;\n  isOpen: boolean;\n  highlightedIndex: number;\n  scrollToHighlighted: boolean;\n};\ntype Action = string;\ntype Reducer = (state: State, newState: State, action: Action) => State;\ntype Updater = (state: State) => State;\n\nexport function useHoistedState(\n  initialState: State,\n): [State, (updater: Updater, action: Action) => void] {\n  const reducerRef = React.useRef<Reducer>((old, newState) => newState);\n  const [state, _setState] = React.useState<State>(initialState);\n  const setState = React.useCallback(\n    (updater: Updater, action: Action) => {\n      if (!action) {\n        throw new Error('An action type is required to update the state');\n      }\n      return _setState((old) => reducerRef.current(old, updater(old), action));\n    },\n    [_setState],\n  );\n  return [state, setState];\n}\n\ntype ScrollToIndexFunctionType = (\n  optionIndex: number,\n  dropdownRef: React.MutableRefObject<HTMLDivElement | null>,\n  optionsRefs: React.RefObject<HTMLDivElement>[],\n  onFailure: () => void,\n) => void;\n\nexport const scrollToIndex: ScrollToIndexFunctionType = (\n  index,\n  dropdownRef,\n  optionsRefs,\n  onFailure,\n): void => {\n  if (!dropdownRef.current) {\n    return;\n  }\n\n  const element = optionsRefs[index].current;\n\n  if (element) {\n    scrollIntoView(element, dropdownRef.current);\n  } else {\n    onFailure();\n  }\n};\n", "// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n// add support for visualViewport object currently implemented in chrome\ninterface visualViewport {\n  height: number\n  width: number\n}\n\ntype ScrollLogicalPosition = 'start' | 'center' | 'end' | 'nearest'\n// This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\ntype ScrollMode = 'always' | 'if-needed'\n// New option that skips auto-scrolling all nodes with overflow: hidden set\n// See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\ntype SkipOverflowHiddenElements = boolean\n\ninterface Options {\n  block?: ScrollLogicalPosition\n  inline?: ScrollLogicalPosition\n  scrollMode?: ScrollMode\n  boundary?: CustomScrollBoundary\n  skipOverflowHiddenElements?: SkipOverflowHiddenElements\n}\n\n// Custom behavior, not in any spec\ntype CustomScrollBoundaryCallback = (parent: Element) => boolean\ntype CustomScrollBoundary = Element | CustomScrollBoundaryCallback | null\ninterface CustomScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nfunction isElement(el: any): el is Element {\n  return typeof el === 'object' && el != null && el.nodeType === 1\n}\n\nfunction canOverflow(\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nfunction getFrameElement(el: Element) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nfunction isHiddenByFrame(el: Element): boolean {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nfunction isScrollable(el: Element, skipOverflowHiddenElements?: boolean) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nfunction alignNearest(\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nfunction getParentElement(element: Node): Element | null {\n  const parent = element.parentElement\n  if (parent == null) {\n    return (element.getRootNode() as ShadowRoot).host || null\n  }\n  return parent\n}\n\nexport default (target: Element, options: Options): CustomScrollAction[] => {\n  //TODO: remove this hack when microbundle will support typescript >= 4.0\n  const windowWithViewport = window as unknown as Window & {\n    visualViewport: visualViewport\n  }\n\n  const { scrollMode, block, inline, boundary, skipOverflowHiddenElements } =\n    options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = getParentElement(cursor)\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.width\n    : innerWidth\n  const viewportHeight = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.height\n    : innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  const viewportX = window.scrollX || pageXOffset\n  const viewportY = window.scrollY || pageYOffset\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: CustomScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const { height, width, top, right, bottom, left } =\n      frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    const scaleX =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth === 0\n          ? 0\n          : width / (frame as HTMLElement).offsetWidth\n        : 0\n    const scaleY =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight === 0\n          ? 0\n          : height / (frame as HTMLElement).offsetHeight\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll / scaleY,\n          frame.scrollHeight - height / scaleY + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll / scaleX,\n          frame.scrollWidth - width / scaleX + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n", "import computeScrollIntoView from 'compute-scroll-into-view';\n\nexport function scrollIntoView(\n  node: HTMLDivElement,\n  menuNode: HTMLDivElement,\n): void {\n  const actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed',\n  });\n  actions.forEach((action) => {\n    const { el, top, left } = action;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n", "import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';\nimport {\n  PropForm,\n  PropSize,\n  PropStatus,\n  PropView,\n  RenderItemProps,\n} from '../SelectComponents/types';\n\nexport type SelectItemDefault = {\n  label: string;\n  id: string | number;\n  groupId?: string | number;\n  disabled?: boolean;\n};\n\nexport type SelectGroupDefault = {\n  label: string;\n  id: string | number;\n};\n\ntype SelectPropValue<ITEM> = ITEM | null | undefined;\n\ntype SelectRenderValueProps<ITEM> = {\n  item: ITEM;\n};\n\nexport type SelectPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type SelectPropGetItemKey<ITEM> = (item: ITEM) => string | number;\nexport type SelectPropGetItemGroupKey<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\nexport type SelectPropGetItemDisabled<ITEM> = (\n  item: ITEM,\n) => boolean | undefined;\nexport type SelectPropGetGroupKey<GROUP> = (group: GROUP) => string | number;\nexport type SelectPropGetGroupLabel<GROUP> = (group: GROUP) => string;\nexport type PropRenderItem<ITEM> = (\n  props: RenderItemProps<ITEM>,\n) => React.ReactElement | null;\nexport type PropRenderValue<ITEM> = (\n  props: SelectRenderValueProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type SelectPropOnChange<ITEM> = (\n  value: ITEM | null,\n  props: { e: React.SyntheticEvent },\n) => void;\n\nexport type SelectProps<\n  ITEM = SelectItemDefault,\n  GROUP = SelectGroupDefault,\n> = PropsWithHTMLAttributesAndRef<\n  {\n    items: ITEM[];\n    onChange: SelectPropOnChange<ITEM>;\n    disabled?: boolean;\n    form?: PropForm;\n    dropdownForm?: 'default' | 'brick' | 'round';\n    size?: PropSize;\n    view?: PropView;\n    status?: PropStatus;\n    focused?: boolean;\n    placeholder?: string;\n    ariaLabel?: string;\n    dropdownClassName?: string;\n    dropdownRef?: React.RefObject<HTMLDivElement>;\n    required?: boolean;\n    name?: string;\n    isLoading?: boolean;\n    labelForEmptyItems?: string;\n    value?: SelectPropValue<ITEM>;\n    renderItem?: PropRenderItem<ITEM>;\n    renderValue?: PropRenderValue<ITEM>;\n    onFocus?: React.FocusEventHandler<HTMLInputElement>;\n    onBlur?: React.FocusEventHandler<HTMLInputElement>;\n    inputRef?: React.RefObject<HTMLInputElement>;\n    groups?: GROUP[];\n    getItemLabel?: SelectPropGetItemLabel<ITEM>;\n    getItemKey?: SelectPropGetItemKey<ITEM>;\n    getItemGroupKey?: SelectPropGetItemGroupKey<ITEM>;\n    getItemDisabled?: SelectPropGetItemDisabled<ITEM>;\n    getGroupLabel?: SelectPropGetGroupLabel<GROUP>;\n    getGroupKey?: SelectPropGetGroupKey<GROUP>;\n    label?: string;\n    labelIcon?: IconComponent;\n    labelPosition?: 'top' | 'left';\n    caption?: string;\n    virtualScroll?: boolean;\n    onScrollToBottom?: (lenght: number) => void;\n    onDropdownOpen?: (isOpen: boolean) => void;\n    dropdownOpen?: boolean;\n    ignoreOutsideClicksRefs?: ReadonlyArray<React.RefObject<HTMLElement>>;\n  },\n  HTMLDivElement\n> &\n  (ITEM extends { label: SelectItemDefault['label'] }\n    ? {}\n    : { getItemLabel: SelectPropGetItemLabel<ITEM> }) &\n  (ITEM extends { id: SelectItemDefault['id'] }\n    ? {}\n    : { getItemKey: SelectPropGetItemKey<ITEM> }) &\n  (GROUP extends { label: SelectGroupDefault['label'] }\n    ? {}\n    : { getGroupLabel: SelectPropGetGroupLabel<GROUP> }) &\n  (GROUP extends { id: SelectGroupDefault['id'] }\n    ? {}\n    : { getGroupKey: SelectPropGetGroupKey<GROUP> });\n\nexport type SelectComponent = <\n  ITEM = SelectItemDefault,\n  GROUP = SelectGroupDefault,\n>(\n  props: SelectProps<ITEM, GROUP>,\n) => React.ReactElement | null;\n\nexport const defaultGetItemKey: SelectPropGetItemKey<SelectItemDefault> = (\n  item,\n) => item.id;\nexport const defaultGetItemLabel: SelectPropGetItemLabel<SelectItemDefault> = (\n  item,\n) => item.label;\nexport const defaultGetItemGroupKey: SelectPropGetItemGroupKey<\n  SelectItemDefault\n> = (item) => item.groupId;\nexport const defaultGetItemDisabled: SelectPropGetItemDisabled<\n  SelectItemDefault\n> = (item) => item.disabled;\n\nexport const defaultGetGroupKey: SelectPropGetGroupKey<SelectGroupDefault> = (\n  group,\n) => group.id;\nexport const defaultGetGroupLabel: SelectPropGetGroupLabel<\n  SelectGroupDefault\n> = (group) => group.label;\n\nexport function withDefaultGetters<ITEM, GROUP>(\n  props: SelectProps<ITEM, GROUP>,\n) {\n  return {\n    ...props,\n    getItemLabel: props.getItemLabel || defaultGetItemLabel,\n    getItemKey: props.getItemKey || defaultGetItemKey,\n    getItemGroupKey: props.getItemGroupKey || defaultGetItemGroupKey,\n    getItemDisabled: props.getItemDisabled || defaultGetItemDisabled,\n    getGroupLabel: props.getGroupLabel || defaultGetGroupLabel,\n    getGroupKey: props.getGroupKey || defaultGetGroupKey,\n  };\n}\n\nexport const iconSizeMap: Record<PropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'm',\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA;AAGA,IAAAA,iBAA0C;;;ACH1C,OAAA;AAIO,IAAMC,iBAAiB;AACvB,IAAMC,WAAWC,GAAE,QAAA;;;ACHnB,IAAMC,4BAA4B;;;ACDzC,mBAAkC;;;ACC3B,IAAMC,WAAW,CAAC,KAAK,MAAM,KAAK,GAAjB;AAEjB,IAAMC,kBAAkBD,SAAS,CAAD;AAEhC,IAAME,WAAW,CACtB,WACA,gBACA,gBACA,SACA,gBACA,cACA,cACA,SACA,cACA,cACA,cACA,gBACA,cACA,YAdsB;AAiBjB,IAAMC,kBAAkBD,SAAS,CAAD;AAEhC,IAAME,WAAW,CAAC,WAAW,OAAZ;AAEjB,IAAMC,kBAAkBD,SAAS,CAAD;;;;ADUhC,IAAME,sBAAkBC,yBAC7B,SAACC,GAAOC,GAAQ;AACd,MAAA,IAkBID,EAjBFE,MAAAA,IADF,WAAA,IACSC,kBADT,GAAAC,KAkBIJ,EAhBFK,MAAAA,IAFF,WAAAD,KAESE,kBAFTF,IAAA,IAkBIJ,EAfFO,MAAAA,IAHF,WAAA,IAGSC,kBAHT,GAIEC,KAcET,EAdFS,WACAC,IAaEV,EAbFU,UACAC,IAYEX,EAZFW,UACAC,IAWEZ,EAXFY,UACAC,IAUEb,EAVFa,QACAC,KASEd,EATFc,SACAC,IAQEf,EARFe,IACAC,IAOEhB,EAPFgB,UAXF,IAkBIhB,EANFiB,MAAAA,KAZF,WAAA,IAYS,WAZT,GAAA,IAkBIjB,EALFkB,eAAAA,KAbF,WAAA,IAakB,QAblB,GAcEC,IAIEnB,EAJFmB,OACAC,IAGEpB,EAHFoB,WACAC,IAEErB,EAFFqB,SACGC,IAjBL,yBAkBItB,GAlBJ,SAAA;AAoBA,SACE,aAAAuB,QAAA,cAAA,OAAA,OAAA,OAAA,EACE,WAAWC,SAAS,EAAEN,eAAAA,IAAehB,MAAAA,GAAMK,MAAAA,GAAMU,MAAAA,GAA7B,GAAqC,CAACR,EAAD,CAAtC,EADrB,GAEMa,CAFN,GAIGH,KACC,aAAAI,QAAA,cAAC,YAAD,EACE,MAAMH,GACN,IAAG,SACH,UAAUT,GACV,SAASI,GACT,WAAWS,SAAS,SAAS,EAAEN,eAAAA,GAAF,CAAV,GACnB,MAAMhB,EANR,GAQGiB,CARH,GAWF,aAAAI,QAAA,cAAA,OAAA,EAAK,WAAWC,SAAS,MAAD,EAAxB,GACE,aAAAD,QAAA,cAAA,OAAA,EACE,WAAWC,SAAS,mBAAmB,EACrCjB,MAAAA,GACAF,MAAAA,GACAK,UAAAA,GACAI,SAAAA,IACAE,UAAAA,GACAH,QAAAA,EANqC,CAApB,GAQnB,KAAKZ,EATP,GAWGW,CAXH,GAaCS,KACC,aAAAE,QAAA,cAAC,cAAD,EAAc,WAAWC,SAAS,SAAD,GAAa,QAAQX,EAAtD,GACGQ,CADH,CAfJ,CAhBF;AAsCH,CA7DsC;;;AEnCzC,IAAAI,iBAA4D;AAF5D,OAAA;;;ACAA,IAAAC,gBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4BxB,IAAMC,kBAAkB;AAE/B,IAAMC,uBAAuB,SAC3BC,GACAC,GACAC,GACG;AACH,MAAMC,IAAMH,EAAOC,CAAD;AAElB,SAAsB,eAAf,OAAOE,IAAsBD,IAAaC;AAClD;AAWM,SAASC,UACdC,GACAC,GACAC,GACAC,GACAC,IAE8B;AAAA,MAD9BP,IAC8B,IAAA,UAAA,UAAA,WAAA,UAAA,CAAA,IAAA,UAAA,CAAA,IADjBJ;AAEb,MAA+B,cAA3B,OAAOQ,EACT,QAAO,CAAC,EAAED,OAAAA,GAAOF,KAAKD,GAAYQ,YAAY,GAAtC,CAAD;AAFqB,MAAA,GAKxBC,IAA6C,CAAA,GALrBC,KAAA,2BAMXP,CANW;AAAA,MAAA;AAAA,QAAA,IAAA,SAAA,QAAA;AAAA,UAMnBJ,KANmB,EAAA,OAOtBY,KAAed,qBACnBO,GACAL,IACAC,CAHuC,GAKnCY,KAAmBH,EAAaI,UACpC,SAACC,IAAD;AAAA,eAAWA,GAAMb,QAAQU;MAAzB,CADuB;AAIzB,UAAwB,KAApBC,GACFH,GAAaG,EAAD,EAAmBT,MAAMY,KAAKhB,EAA1C;WACK;AAAA,YACCS,KACJF,KAAeD,IACXA,EAAOQ,UAAU,SAACG,IAAD;AAAA,iBAAOV,EAAYU,EAAD,MAAQL;QAA1B,CAAjB,IACA,IAEAM,IAAkC,EACtChB,KAAKU,IACLR,OAAO,CAACJ,EAAD,GACPS,YAAAA,IACAM,OAAOT,IAASA,EAAOG,EAAD,IAAT,OAJyB;AAOxCC,UAAaM,KAAKE,CAAlB;MACD;IAhC2B;AAM9B,SAAAP,GAAA,EAAA,GAAA,EAAA,IAAAA,GAAA,EAAA,GAAA,OAAA,GAAA;EAN8B,SAAAQ,IAAA;AAAA,IAAAR,GAAA,EAAAQ,EAAA;EAAA,UAAA;AAAA,IAAAR,GAAA,EAAA;EAAA;AA6C9B,SAV0B,cAAtB,OAAOH,KACTE,EAAaU,KAAKZ,EAAlB,IACSF,KAAUC,KACnBG,EAAaU,KAAK,SAACD,IAAGE,IAAM;AAAA,WACtBF,GAAEV,aAAaY,GAAEZ,aAAmB,IACpCU,GAAEV,aAAaY,GAAEZ,aAAmB,KACjC;EACR,CAJD,GAOKC;AACR;AAEM,SAASY,iBACdhB,GACAiB,GACAC,GACAC,GACAC,IAC6B;AAC7B,MAAMC,IAAuC,mBAAOrB,CAAP;AAwB7C,SAvBIkB,KACFlB,EAAOsB,QAAQ,SAACb,IAAOc,IAAU;AAAA,QAC3BC,IAAa,GACbC,IAAe;AACnBhB,IAAAA,GAAMX,MAAMwB,QAAQ,SAAC5B,IAAS;AACtB0B,MAAAA,MAAe,SAAIA,MAAJ,WAAIA,MAAAA,GAAkB1B,EAAH,MACtC8B,KAAc,IAFY,SAIxBP,KAJwB,WAIxBA,KAAAA,EAAQS,KAAK,SAACC,IAAD;AAAA,eAAQR,EAAWzB,EAAD,MAAWyB,EAAWQ,EAAD;MAAvC,CAAb,MACFF,KAAgB;IAEnB,CAPD,GAQAJ,EAAWE,EAAD,EAAQzB,QAAlB,CACE,EACE8B,kBAAgB,MAChBJ,YAAAA,GACAK,UAAUpB,GAAMb,KAChB6B,cAAAA,EAJF,CADF,EAAA,OAAA,mBAOKJ,EAAWE,EAAD,EAAQzB,KAPvB,CAAA;EASD,CApBD,GAsBKuB;AACR;;;ACtID,IAAAS,gBAAkC;AAFlC,OAAA;;;ACGA,IAAAC,gBAAkB;AAHlB,OAAA;;;ACMO,IAAMC,qBAAkD,EAC7DC,IAAI,MACJC,GAAG,MACHC,GAAG,KACHC,GAAG,IAJ0D;AAOxD,IAAMC,8BAA2D,EACtEJ,IAAI,KACJC,GAAG,KACHC,GAAG,KACHC,GAAG,IAJmE;AAOjE,IAAME,2BAAwD,EACnEL,IAAI,KACJC,GAAG,KACHC,GAAG,KACHC,GAAG,IAJgE;AAO9D,IAAMG,8BAA2D,EACtEN,IAAI,OACJC,GAAG,OACHC,GAAG,MACHC,GAAG,IAJmE;AAOjE,IAAMI,yBAAsD,EACjEP,IAAI,OACJC,GAAG,OACHC,GAAG,MACHC,GAAG,KAJ8D;AAO5D,IAAMK,cAAkD,EAC7DR,IAAI,MACJC,GAAG,MACHC,GAAG,KACHC,GAAG,IAJ0D;AAOxD,IAAMM,0BAAuD,EAClEN,GAAG,KACHD,GAAG,KACHD,GAAG,MACHD,IAAI,MAJ8D;;;ADpC7D,IAAMU,iBAAiBC,GAAG,cAAD;AAEzB,IAAMC,aAAa,SACxBC,GACAC,GACAC,GACAC,GACAC,IACsB;AACtB,MAAMC,IAA2BL,IAAI,mBAC5BM,MAAMC,QAAQP,CAAd,IAAsBA,IAAO,CAACA,CAAD,CADD,IAEjC,CAAA;AACJ,MAAIG,GAAM;AACR,QAAMK,IAAS,cAAAC,QAAA,cAAC,GAAD,EAAM,MAAMC,SAASC,aAAaT,GAAME,EAApB,EAApB,CAAA;AACE,eAAbH,KACFI,EAAMO,KAAKJ,CAAX,GAEe,YAAbP,KACFI,EAAMQ,QAAQL,CAAd;EAEH;AACD,SAAOH,EAAMS,IAAI,SAACC,IAAMC,IAAU;AAChC,QAAIC,SAASF,EAAD,EACV,QACE,cAAAN,QAAA,cAAA,OAAA,EACE,WAAWZ,eAAe,QAAQ,EAChCI,UAAAA,EADgC,CAAT,GAGzB,KAAKJ,eAAe,QAAQ,EAC1BI,UAAAA,GACAe,OAAAA,GAF0B,CAAT,EAJrB,GASGD,EATH;EAaL,CAhBM;AAiBR;;;AEzCM,IAAMG,eAAe,CAAC,KAAK,MAAM,KAAK,GAAjB;AAErB,IAAMC,sBAAsBD,aAAa,CAAD;AAExC,IAAME,sBAAsB,CAAC,UAAU,WAAX;AAE5B,IAAMC,6BAA6BD,oBAAoB,CAAD;AAKtD,IAAME,eAAe,CAAC,WAAW,SAAS,OAArB;AAErB,IAAMC,sBAAsBD,aAAa,CAAD;;;;AHFxC,IAAME,aAAaC,GAAG,UAAD;AAE5B,IAAMC,iBAAiB,SACrBC,GACAC,GACG;AAAA,MAAA,IAmBCD,EAjBFE,MAAAA,IAFC,WAAA,IAEMC,sBAFN,GAGDC,KAgBEJ,EAhBFI,QACAC,IAeEL,EAfFK,OACAC,IAcEN,EAdFM,aACAC,IAaEP,EAbFO,UACAC,KAYER,EAZFQ,WACAC,IAWET,EAXFS,UACAC,IAUEV,EAVFU,WACAC,IASEX,EATFW,WACAC,IAQEZ,EARFY,UAXCC,KAmBCb,EAPFc,IAAIC,IAZH,WAAAF,KAYS,QAZTA,IAaDG,IAMEhB,EANFgB,SACAC,IAKEjB,EALFiB,SAdCC,KAmBClB,EAJFmB,QAAAA,IAfC,WAAAD,KAeQE,sBAfRF,IAgBDG,KAGErB,EAHFqB,OACAC,IAEEtB,EAFFsB,UACGC,IAlBF,yBAmBCvB,GAnBDwB,UAAA,GAqBGC,IACJR,KAAW,CAACV,IAAWU,IAAvB;AAEF,SACE,cAAAS,QAAA,cAAC,GAAD,OAAA,OAAA,CAAA,GACMH,GADN,EAEE,WAAW1B,WACT,EAAEO,QAAAA,IAAQG,UAAAA,GAAUS,SAAAA,GAASW,aAAa,CAAC,CAACF,EAA5C,GACA,CACEG,OAAO,EACLC,YAAY,MACZ3B,MAAAA,GACA4B,MAAMX,EAHD,CAAD,GAKNY,WACEV,MAAS,EACPW,IACkB,gBAAhB1B,IACI2B,4BAA4B/B,CAAD,IAC3BgC,mBAAmBhC,CAAD,GACxBiC,IAAIC,uBAAuBlC,CAAD,EALnB,CADD,GASVmC,eAAc,GACd7B,EAhBF,CAFmB,GAqBrB,SAASiB,GACT,KAAKxB,EAxBP,CAAA,GA0BGqC,WAAW7B,GAAU,QAAQP,GAAMU,GAAUU,CAAnC,GACTX,KAAcD,KAAcD,KAAaG,IAEvCP,KACE,cAAAqB,QAAA,cAAA,QAAA,EAAM,WAAWW,eAAe,QAAQ,EAAEE,UAAU,SAAZ,CAAT,EAA/B,GACGlC,CADH,IAFFA,GAMHiC,WAAW5B,GAAW,SAASR,GAAMS,GAAWW,CAAtC,CAlCb;AAqCH;AAEM,IAAMkB,eAAWC,0BAAW1C,cAAD;;;AIzFlC,IAAA2C,gBAAkB;;;ACElB,IAAAC,gBAAkC;AAFlC,OAAA;;AAcO,IAAMC,gBAAgBC,GAAG,aAAD;AAExB,IAAMC,kBAAcC,0BACzB,SAACC,GAAOC,GAAQ;AACd,MAAA,IAMID,EALFE,MAAAA,IADF,WAAA,IACSC,sBADT,GAEEC,KAIEJ,EAJFI,aACAC,IAGEL,EAHFK,WACAC,IAEEN,EAFFM,OACGC,IALL,yBAMIP,GANJQ,UAAA;AAQA,SACE,cAAAC,QAAA,cAAA,OAAA,OAAA,OAAA,CAAA,GACMF,GADN,EAEE,KAAKN,GACL,WAAWL,cAAc,MAAM,CAC7Bc,WACEJ,KAAS,EACPK,IACkB,gBAAhBP,KACIQ,4BAA4BV,CAAD,IAC3BW,mBAAmBX,CAAD,GACxBY,IAAIC,wBAAwBb,CAAD,EALpB,CADD,GASVG,CAV6B,CAAP,EAH1B,CAAA,CAAA;AAiBH,CA5BkC;;;ACdrC,IAAAW,gBAAkC;AAFlC,OAAA;;AAqBO,IAAMC,mBAAmBC,GAAG,gBAAD;AAElC,IAAMC,cAAkD,EACtDC,IAAI,OACJC,GAAG,OACHC,GAAG,MACHC,GAAG,IAJmD;AAOjD,IAAMC,qBAAiBC,0BAC5B,SAACC,GAAOC,GAAQ;AACd,MACEC,IAOEF,EAPFE,WADF,IAQIF,EANFG,MAAAA,KAFF,WAAA,IAESC,sBAFT,GAGEC,IAKEL,EALFK,OACAC,IAIEN,EAJFM,aACAC,IAGEP,EAHFO,WACAC,KAEER,EAFFQ,OACGC,IAPL,yBAQIT,GARJU,UAAA;AAUA,SACE,cAAAC,QAAA,cAAC,MAAD,OAAA,OAAA,CAAA,GACMF,GADN,EAEE,KAAKR,GACL,WAAWV,iBAAiB,MAAM,CAChCqB,eAAc,GACdC,WACEL,MAAS,EACPM,IACkB,gBAAhBR,IACIS,4BAA4BZ,EAAD,IAC3Ba,mBAAmBb,EAAD,GACxBc,IAAIC,yBAAyBf,EAAD,GAC5BgB,IAAIC,4BAA4BjB,EAAD,EANxB,CADD,GAUVI,CAZgC,CAAP,GAc3B,MAAMd,YAAYU,EAAD,GACjB,MAAK,aACL,YAAW,MACX,SAAQ,MACR,WAAU,YArBZ,CAAA,GAuBID,IAGA,cAAAS,QAAA,cAAA,QAAA,EAAM,WAAWC,eAAe,QAAQ,EAAES,UAAU,SAAZ,CAAT,EAA/B,GACGhB,CADH,IAFAA,GAMDiB,WAAWpB,GAAW,SAASC,IAArB,MAAA,CA9Bb;AAiCH,CA9CqC;;;ARfjC,IAAMoB,SAASC,GAAG,MAAD;;;ASfxB,IAAAC,SAAuB;AAGvB,IAAMC,eAAgBC,OACpB,qBAAA,OAAA,OAAA,OAAA,EAAK,SAAQ,aAAY,OAAM,6BAA/B,GAAgEA,CAAhE,GACE,qBAAA,QAAA,EAAM,GAAE,qCAAR,CAAA,CADF;AAIF,IAAA,yBAAeD;;;ACRf,IAAAE,SAAuB;AAGvB,IAAMC,eAAgBC,OACpB,qBAAA,OAAA,OAAA,OAAA,EAAK,SAAQ,aAAY,OAAM,6BAA/B,GAAgEA,CAAhE,GACE,qBAAA,QAAA,EAAM,GAAE,gCAAR,CAAA,CADF;AAIF,IAAA,yBAAeD;;;ACRf,IAAAE,UAAuB;AAGvB,IAAMC,gBAAiBC,OACrB,sBAAA,OAAA,OAAA,OAAA,EAAK,SAAQ,aAAY,OAAM,6BAA/B,GAAgEA,CAAhE,GACE,sBAAA,QAAA,EAAM,GAAE,0CAAR,CAAA,CADF;AAIF,IAAA,0BAAeD;;;ACFf,IAAME,QAA6B,EACjCC,GAAGC,wBACHC,GAAGD,wBACHE,GAAGC,wBACHC,IAAIC,yBACJC,MAAM,WACNC,YAAY,EAAER,GAAG,OAAOE,GAAG,OAAOC,GAAG,OAAOE,IAAI,MAApC,GACZI,OAAO,OAP0B;AAUnC,IAAA,gBAAeV;;;ACZf,IAAA,cAAeW,UAAUC,aAAD;;;ACCjB,IAAMC,UAAUC,gBAAgBC,eAAOC,WAAR;;;ACJtC,IAAAC,gBAAkC;;AAU3B,IAAMC,kBAAcC,0BACzB,SAACC,GAAOC,GAAQ;AAAA,MAAA,IAMVD,EAJFE,MAAAA,IAFY,WAAA,IAELC,sBAFK,GAGZC,KAGEJ,EAHFI,aACAC,IAEEL,EAFFK,WACGC,IALS,yBAMVN,GANUO,UAAA,GAQRC,IACY,gBAAhBJ,KACIK,4BAA4BP,CAAD,IAC3BQ,mBAAmBR,CAAD;AAExB,SACE,cAAAS,QAAA,cAAA,cAAAA,QAAA,UAAA,MACE,cAAAA,QAAA,cAAC,UAAD,OAAA,OAAA,CAAA,GACML,GADN,EAEE,MAAMJ,GACN,KAAKD,GACL,UAAUW,SACV,OAAO,EACLC,IAAIL,GACJM,IAAIC,4BAA4Bb,CAAD,EAF1B,EALT,CAAA,CAAA,GAUCG,KACC,cAAAM,QAAA,cAAC,aAAD,EAAa,MAAMT,GAAM,OAAO,EAAEc,IAAIR,EAAN,EAAhC,CAAA,CAZJ;AAgBH,CA/BkC;;;ACTrC,IAAAS,gBAAkC;AAFlC,OAAA;AAiBA,IAAMC,eAAeC,GAAG,YAAD;AAOhB,IAAMC,iBAAaC,0BACxB,SAAA,GAMEC,GACG;AAAA,MAAA,IAAA,EALDC,MAAAA,IAKC,WAAA,IALMC,sBAKN,GAAAC,KAAA,EAJDC,aAAAA,IAIC,WAAAD,KAJaE,6BAIbF,IAHDG,IAGC,EAHDA;AAIF,SACE,cAAAC,QAAA,cAAA,OAAA,EACE,KAAKP,GACL,WAAWJ,aAAa,EAAEK,MAAAA,EAAF,GAAU,CAChCO,WAAW,EACTC,IACkB,gBAAhBL,IACIM,4BAA4BT,CAAD,IAC3BU,mBAAmBV,CAAD,EAJf,CAAD,GAMVK,CAPgC,CAAX,EAFzB,GAYE,cAAAC,QAAA,cAAA,OAAA,EAAK,WAAWX,aAAa,WAAD,EAA5B,GACE,cAAAW,QAAA,cAAC,QAAD,EAAQ,MAAK,KAAI,WAAWX,aAAa,QAAD,EAAxC,CAAA,CADF,CAZF;AAiBH,CA3BiC;;;ACxBpC,IAAAgB,iBAAkC;;;ACAlC,OAAA;AAIO,IAAMC,YAAYC,GAAG,SAAD;;;ACApB,IAAMC,mBAAgD,EAC3DC,IAAI,OACJC,GAAG,OACHC,GAAG,MACHC,GAAG,KAJwD;;;;AFKtD,IAAMC,cAAUC,2BACrB,SAACC,GAAOC,GAAQ;AACd,MAAA,IAOID,EANFE,MAAAA,IADF,WAAA,IACSC,sBADT,GAEEC,KAKEJ,EALFI,MACAC,IAIEL,EAJFK,QACAC,IAGEN,EAHFM,QACAC,IAEEP,EAFFO,WACGC,KANL,yBAOIR,GAPJS,UAAA;AASA,SACE,eAAAC,QAAA,cAAA,OAAA,OAAA,OAAA,CAAA,GACMF,IADN,EAEE,KAAKP,GACL,WAAWU,UAAU,EAAET,MAAAA,GAAME,MAAAA,IAAMC,QAAAA,GAAQC,QAAAA,EAAtB,GAAgC,CACnDM,WAAW,EACTC,IAAIC,iBAAiBZ,CAAD,EADX,CAAD,GAGVa,eAAc,GACdR,CALmD,CAAjC,EAHtB,CAAA,CAAA;AAYH,CAxB8B;;;AGPjC,IAAAS,iBAAuE;AAFvE,OAAA;;;ACAA,IAAAC,iBAAwB;;;ACAxB,IAAAC,iBAAkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3C,IAAMC,oBAAoB,SAI/BC,GACAC,GACkB;AAAA,MAAA,IACkBC,eAAAA,QAAMC,SAAwB,WAAA;AAAA,WAChEH,EAAKI,IAAI,SAACC,IAAD;AAAA,aAASJ,EAAOI,GAAIC,OAAL;IAAf,CAAT;EADgE,CAA9B,GADlB,IAAA,eAAA,GAAA,CAAA,GACXC,KADW,EAAA,CAAA,GACCC,IADD,EAAA,CAAA,GAMZC,IAAYP,eAAAA,QAAMQ,OAAOT,CAAb;AAmBlB,aAlBAU,gCAAgB,WAAM;AACpBF,MAAUH,UAAUL;EACrB,GAAE,CAACA,CAAD,CAFY,OAIfU,gCAAgB,WAAM;AAAA,QAAAC,IACdC,KAAiB,IAAIC,eAAe,WAAM;AAC9CN,QAAcR,EAAKI,IAAI,SAACC,IAAD;AAAA,eAASI,EAAUH,QAAQD,GAAIC,OAAtB;MAAT,CAAT,CAAD;IACd,CAFsB,GADHS,KAAAC,4BAKFhB,CALE;AAAA,QAAA;AAKpB,WAAAe,GAAA,EAAA,GAAA,EAAAH,KAAAG,GAAA,EAAA,GAAA,QAAwB;AAAA,YAAbV,KAAaO,GAAA;AACtBP,QAAAA,GAAIC,WAAWO,GAAeI,QAAQZ,GAAIC,OAA3B;MAChB;IAPmB,SAAAY,IAAA;AAAA,MAAAH,GAAA,EAAAG,EAAA;IAAA,UAAA;AAAA,MAAAH,GAAA,EAAA;IAAA;AASpB,WAAO,WAAM;AACXF,MAAAA,GAAeM,WAAf;IACD;EACF,GAAE,CAACnB,CAAD,CAZY,GAcRO;AACR;;;AChCD,IAAMa,cAA6B,EAAEC,OAAO,GAAGC,QAAQ,EAApB;AAE5B,IAAMC,iBAAiB,SAC5BC,GACkB;AAClB,MAAI,CAACA,EACH,QAAOJ;AAGT,MAAA,IAA0BI,EAAGC,sBAAH,GAAlBJ,IAAR,EAAQA,OAAOC,IAAf,EAAeA;AAEf,SAAO,EACLD,OAAAA,GACAC,QAAAA,EAFK;AAIR;;;AFVM,SAASI,iBACdC,GACe;AACf,MAAMC,QAAOC,wBACX,WAAA;AAAA,WAAM,CAACF,CAAD;EAAN,GAEA,CAACA,EAAIG,OAAL,CAHkB;AAKpB,SAAOC,kBAAkBH,GAAMI,cAAP,EAAuB,CAAxC;AACR;;;AGhBM,IAAMC,eAAe,SAC1BC,GAD0B;AAAA,SAEgB,cAApB,OAAOA;AAFH;;;ACM5B,IAAMC,cAAc,SAACC,GAAWC,GAAZ;AAAA,SAAkD,EACpED,GAAGE,KAAKC,MAAMH,CAAX,GACHC,GAAGC,KAAKC,MAAMF,CAAX,EAFiE;AAAlD;AAKb,IAAMG,0BAA0B,SAAA,GAYX;AAAA,MAX1BC,IAW0B,EAX1BA,aACAC,IAU0B,EAV1BA,YAU0B,IAAA,EAT1BC,UAAYP,KASc,EATdA,GAAGC,IASW,EATXA,GASW,IAAA,EAR1BO,aAAAA,IAQ0B,WAAA,IARZ,IAQY,GAAAC,KAAA,EAP1BC,QAAAA,IAO0B,WAAAD,KAPjB,IAOiBA,IACXE,IAAwCN,EAA/CO,OAA6BC,IAAkBR,EAA1BS,QACdC,IAAsCT,EAA7CM,OAA4BI,KAAiBV,EAAzBQ,QACtBG,IAAe,EACnBjB,GAAGA,KAAIe,IAAc,GACrBd,GAAGA,IAAIe,KAAe,EAFH,GAKfE,IAAsBlB,KAAIe,IAAcL,GACxCS,IAAqBnB,KAAIW,IAAeD,GACxCU,KAAyB,EAC7BC,OAAOJ,EAAajB,IAAIQ,GACxBc,QAAQL,EAAajB,IAAIW,IAAe,GACxCY,MAAMN,EAAajB,IAAIW,IAAeH,EAHT,GAMzBgB,IAAqBvB,IAAIe,KAAeN,GACxCe,KAAmBxB,IAAIY,IAAgBH,GACvCgB,IAA2B,EAC/BC,IAAIV,EAAahB,IAAIY,IAAgBL,GACrCc,QAAQL,EAAahB,IAAIY,IAAgB,GACzCe,MAAMX,EAAahB,IAAIO,EAHQ,GAM3BqB,IAA0B7B,IAC1B8B,IAA2B9B,KAAIW,IAAeI,GAE9CgB,IAAwB9B,GACxB+B,IAA0B/B,IAAIY,IAAgBG;AAEpD,SAAO,EACLiB,QAAQlC,YAAYqB,GAAuBG,MAAME,EAA9B,GACnBS,UAAUnC,YAAYqB,GAAuBE,QAAQG,EAAhC,GACrBU,SAASpC,YAAYqB,GAAuBC,OAAOI,EAA/B,GAEpBW,UAAUrC,YAAYqB,GAAuBG,MAAMC,CAA9B,GACrBa,YAAYtC,YAAYqB,GAAuBE,QAAQE,CAAhC,GACvBc,WAAWvC,YAAYqB,GAAuBC,OAAOG,CAA/B,GAEtBe,SAASxC,YAAYmB,GAAqBQ,EAAyBC,EAA/C,GACpBa,aAAazC,YACXmB,GACAQ,EAAyBJ,MAFH,GAIxBmB,WAAW1C,YAAYmB,GAAqBQ,EAAyBE,IAA/C,GAEtBc,QAAQ3C,YAAYoB,GAAoBO,EAAyBC,EAA9C,GACnBgB,YAAY5C,YACVoB,GACAO,EAAyBJ,MAFJ,GAIvBsB,UAAU7C,YAAYoB,GAAoBO,EAAyBE,IAA9C,GAErBiB,eAAe9C,YAAY8B,GAAyBL,CAA1B,GAC1BsB,gBAAgB/C,YAAY+B,GAA0BN,CAA3B,GAE3BuB,aAAahD,YAAY8B,GAAyBJ,EAA1B,GACxBuB,cAAcjD,YAAY+B,GAA0BL,EAA3B,GAEzBwB,aAAalD,YAAYoB,GAAoBY,CAArB,GACxBmB,eAAenD,YAAYoB,GAAoBa,CAArB,GAE1BmB,cAAcpD,YAAYmB,GAAqBa,CAAtB,GACzBqB,gBAAgBrD,YAAYmB,GAAqBc,CAAtB,EAjCtB;AAmCR;AAgBM,IAAMqB,kCAAkC,SAAA,GAc1C;AAAA,MAbOC,IAaP,EAbH/C,UACAF,IAYG,EAZHA,aACAkD,IAWG,EAXHA,cAWGC,KAAA,EAVHlD,YAAAA,IAUG,WAAAkD,KAVU,EAAE5C,OAAO,GAAGE,QAAQ,EAApB,IAUV0C,IATHhD,IASG,EATHA,aACWiD,IAQR,EARHC,WACAC,KAOG,EAPHA,oBACAC,IAMG,EANHA,kBACAC,IAKG,EALHA,gBAKG,IAAA,EAJHnD,QAAAA,IAIG,WAAA,IAJM,IAIN;AACH,MAAI,CAAC4C,EACH,QAAO,EAAE/C,UAAU+C,GAAiBI,WAAWD,EAAxC;AAFN,MAKGK,KAAuB1D,wBAAwB,EACnDC,aAAAA,GACAC,YAAAA,GACAC,UAAU+C,GACV9C,aAAAA,GACAE,QAAAA,EALmD,CAAD,GAQ9CgD,IACJ,CAACD,CAAD,EAAA,OAAA,mBAAsBE,EAAtB,CAAA,EACGI,OAAO,SAACC,IAAD;AAAA,WAAS,CAACJ,EAAiBK,SAASD,EAA1B;EAAV,CADV,EAEGE,KAAK,SAACF,IAAQ;AAAA,QACPG,KAAML,GAAqBE,EAAD,GACxBpD,KAAkBP,EAAlBO,OAAOE,KAAWT,EAAXS,QAETsD,KAAgBD,GAAIlE,IAAIa,MAAUyC,EAAazC,QAC/CuD,KAAuB,KAATF,GAAIlE,GAElBqE,KAAyB,KAATH,GAAInE,GACpBuE,KAAiBJ,GAAInE,IAAIY,MAAS2C,EAAa3C;AAErD,WAAOyD,MAAeD,MAAiBE,MAAiBC;EACzD,CAbH,KAaQV;AAEV,SAAO,EACLH,WAAAA,GACAnD,UAAUuD,GAAqBJ,CAAD,EAFzB;AAIR;;;ACvJD,IAAAc,iBAAiC;AAIjC,IAAMC,gBAAgB,SAACC,GAA0C;AAAA,WACzDC,IAAyB,CAAA,GAC3BC,IAA2BF,GAExBE,IACLA,OAAgBF,KAAWC,EAAeE,KAAKD,CAApB,GAC3BA,IAAcA,EAAYE;AAG5B,SAAOH;AACR;AAGM,IAAMI,uBAAuB,SAAA,GAS9B;AAAA,MARJC,IAQI,EARJA,UACAC,IAOI,EAPJA,iBACAC,IAMI,EANJA,qBAOMC,KAAyBC,cAAcF,CAAD;AAE5CG,gCAAU,WAAM;AACd,QAAMC,KAAK,WAAA;AAAA,aAAMH,GAAuBI,QAAvB;IAAN;AACX,QAAIP,GAAU;AACZQ,aAAOC,iBAAiB,UAAUH,EAAlC;AAEA,UAAMI,KAAa,SAAAT,KAAe,WAAfA,KAAAA,EAAiBM,UAChCd,cAAcQ,EAAgBM,OAAjB,IACb,CAAA;AAGJ,aAFAG,GAAWC,QAAQ,SAACC,IAAD;AAAA,eAAcA,GAASH,iBAAiB,UAAUH,EAApC;MAAd,CAAnB,GAEO,WAAM;AACXE,eAAOK,oBAAoB,UAAUP,EAArC,GAEAI,GAAWC,QAAQ,SAACC,IAAD;AAAA,iBACjBA,GAASC,oBAAoB,UAAUP,EAAvC;QADiB,CAAnB;MAGD;IACF;EAEF,GAAE,CAACL,CAAD,CAnBM;AAoBV;;;;;;;;;;;;;;;;;;;;;;ANzBM,IAAMa,wBAAwB,CACnC,cACA,YAEA,aACA,YACA,WACA,UAEA,UACA,cACA,YAEA,WACA,eACA,WAfmC;AAkB9B,IAAMC,sBAAsB,CACjC,iBACA,eAEA,kBACA,gBAEA,eACA,iBAEA,gBACA,gBAXiC;AA8B5B,IAAMC,aAAU,CAAA,EAAA,OAAOC,uBAA0BC,mBAAjC;AAAhB,IAkCDC,YAAY,SAChBC,GACAC,GACG;AACH,MAAIC,SAASD,CAAD,EACV,QAAOA;AAGT,MAAIE,SAASF,CAAD,KAAgBD,EAAII,SAAS;AACvC,QAAMC,IAASC,iBAAiBN,EAAII,OAAL,EAAcG,iBAA9B,WAAA,OACFN,CADE,CAAA;AAIf,QAAII,KAAU,MAAMG,KAAKH,CAAX,EACZ,QAAA,CAAcA,EAAOI,MAAM,GAAGJ,EAAOK,SAAS,CAAhC;AAGhB,QAAIL,KAAU,OAAOG,KAAKH,CAAZ,GAAqB;AAAA,UAC3BM,IAAWC,WACfN,iBAAiBO,SAASC,eAAV,EAA2BH,QADlB,GAGrBI,IAAG,CAAUV,EAAOI,MAAM,GAAGJ,EAAOK,SAAS,CAAhC;AAEnB,aAAOC,IAAWI;IACnB;AAED,QAAIV,KAAU,MAAMG,KAAKH,CAAX,GAAoB;AAAA,UAC1BM,KAAWC,WAAWN,iBAAiBN,EAAII,OAAL,EAAcO,QAA/B,GACrBK,IAAE,CAAUX,EAAOI,MAAM,GAAGJ,EAAOK,SAAS,CAAhC;AAElB,aAAOC,KAAWK;IACnB;AAED,WAAO;EACR;AAED,SAAO;AACR;AAvEM,IA8EDC,kBAID,SAAA,GAA0D;AAAA,MAAvDC,IAAuD,EAAvDA,gBAAgBC,IAAuC,EAAvCA,UAAUC,IAA6B,EAA7BA,wBAA6BC,KAC5CC,iBAAgB,GAAzBC,IADqDF,GACrDE;AAWR,SATAC,gBAAgB,EACdC,UAAU,CAAC,CAACP,GACZE,wBAAsB,CAAA,EAAA,OAAA,mBAChBA,KAA0B,CAAA,CADV,GAAA,mBAEhBG,KAAQ,CAAA,CAFQ,CAAA,GAItBG,SAASR,EANK,CAAD,GASRC;AACR;AA/FM,IAiGDQ,YAAYC,GAAG,SAAD;AAEb,IAAMC,cAAUC,2BACrB,SAACC,GAAOC,GAAiB;AAAA,MAAA,GAErBb,IAeEY,EAfFZ,UAFqBE,KAiBnBU,EAdFE,WAAWC,IAHU,WAAAb,KAGQ,aAHRA,IAAA,IAiBnBU,EAbFI,QAAQlC,IAJa,WAAA,IAIA,IAJA,GAKrBmC,KAYEL,EAZFK,aALqB,IAiBnBL,EAXFM,oBAAAA,IANqB,WAAA,IAMAzC,aANA,GAAA,IAiBnBmC,EAVFO,eACApB,IASEa,EATFb,gBARqBqB,KAiBnBR,EARFS,gBAAAA,IATqB,WAAAD,KASJ,kBATIA,IAUrBE,IAOEV,EAPFU,OACAC,IAMEX,EANFW,WACUC,KAKRZ,EALFa,UACAC,IAIEd,EAJFc,WACAC,KAGEf,EAHFe,kBACAC,IAEEhB,EAFFgB,gBACGC,IAhBkB,yBAiBnBjB,GAjBmBkB,UAAA,GAmBjBjD,IAAMkD,eAAAA,QAAMC,OAAuB,IAA7B,GAnBW,IAoBLC,SAAQ,GAAlBC,IApBe,EAoBfA,OApBe,IAsByBH,eAAAA,QAAMI,SAAN,GAtBzB,IAAA,eAAA,GAAA,CAAA,GAsBhBC,IAtBgB,EAAA,CAAA,GAsBEC,IAtBF,EAAA,CAAA,GAAA,IAyBGC,iBAAiBzD,CAAD,GAAlC0D,IAzBe,EAyBfA,OAAOC,IAzBQ,EAyBRA,QACTC,IAAaH,iBAAiBZ,KAAa,EAAEzC,SAAS,KAAX,CAAd,GAC7ByD,IAAuBX,eAAAA,QAAMC,OAAyB,IAA/B,GA3BN,IA4ByBD,eAAAA,QAAMI,SAEpD,CAAA,CAF8C,GA5BzB,IAAA,eAAA,GAAA,CAAA,GA4BhBQ,IA5BgB,EAAA,CAAA,GA4BEC,IA5BF,EAAA,CAAA,GAgCjBC,IAAwB,WAAM;AAClCD,MAAoB,SAACE,IAAD;AAAA,aAAYA,GAAMvD,SAAS,CAAA,IAAKuD;IAAhC,CAAD,GACnBJ,EAAqBzD,UAAU;EAChC,GAEK8D,IAAyB,WAAA;AAAA,QAAAC;AAAA,WAC7BX,EAAmB,SAACX,KAAD,WAACA,KAAD,UAAAsB,KAACtB,EAAWzC,YAAZ,WAAA+D,KAAA,SAACA,GAAoBC,sBAApB,CAAD;EADU,GAGzBjC,QAASkC,wBACb,WAAA;AAAA,WAAMtE,UAAUC,GAAKC,CAAN;EAAf,GACA,CAACA,GAAD,CAAA,CAAqBD,EAAII,OAAzB,CAFoB,GAxCC,IA6CSkE,gCAAgC,EAC9DC,aAAa,EAAEb,OAAAA,GAAOC,QAAAA,EAAT,GACba,cAAc,EAEZd,OAAO7C,SAASC,gBAAgB2D,aAChCd,QAAQ9C,SAASC,gBAAgB4D,aAHrB,GAKdtC,aAAAA,IACAD,QAAAA,GACAF,WAAWC,GACXG,oBAAAA,GACAyB,kBAAAA,GACAlB,UAAUW,IACN,EAAEoB,GAAGpB,EAAiBqB,MAAMC,GAAGtB,EAAiBuB,IAAhD,IACAnC,IACJiB,YAAAA,GACApB,gBAAAA,EAhB8D,CAAD,GAAvDI,IA7Ce,EA6CfA,UAAUX,IA7CK,EA6CLA;AAmBlB8C,gCAAU,WAAA;AAAA,WAAA,SAAMhC,KAAN,WAAMA,IAAN,SAAMA,EAAiBd,CAAH;EAApB,GAAmC,CAACA,CAAD,CAApC,OAET8C,0BAAUb,GAAwB,CAACN,CAAD,CAAzB,GAEToB,qBAAqB,EACnBvD,UAAQ,MACRwD,iBAAiBpC,KAAa,EAAEzC,SAAS,KAAX,GAC9B8E,qBAAqB,SAAA,sBAAM;AACzBlB,MAAqB,GACrBE,EAAsB;EACvB,EANkB,CAAD,OAgBpBiB,gCAAgB,WAAM;AAChBtB,MAAqBzD,YAAY6B,MAEjC4B,EAAqBzD,WACrB,CAAC0D,EAAiBsB,SAASvB,EAAqBzD,OAA/C,KACD,CAAC0D,EAAiBsB,SAASnD,CAA1B,KACDA,MAAcO,KAEduB,EAAoB,SAACE,IAAD;AAAA,aAClBJ,EAAqBzD,UAArB,CAAA,EAAA,OAAA,mBACQ6D,EADR,GAAA,CACeJ,EAAqBzD,OADpC,CAAA,IAEI6D;IAHc,CAAD,GAMrBJ,EAAqBzD,UAAU6B;EAElC,GAAE,CAACA,CAAD,CAhBY,OAqBfkD,gCAAgBnB,GAAuB,CAACjC,CAAD,CAAxB;AAEf,MAAMsD,IAAa,CAACzC,KAAY,CAACe,KAAU,CAACD;AAE5C,SACE,eAAAR,QAAA,cAAC,iBAAD,OAAA,OAAA,CAAA,GACMF,GADN,EAEE,QAAQK,GACR,WAAW1B,UAAU,EAAEM,WAAAA,GAAWoD,YAAAA,EAAb,GAA2B,CAAC3C,CAAD,CAA5B,GACpB,WAAW4C,OAAOzE,SAAS0E,MAC3B,KAAKC,WAAW,CAACxF,GAAKgC,CAAN,CAAD,GACf,OAAK,cAAA,cAAA,CAAA,GACAS,CADA,GAEC4C,IACA,CAAA,KADU,IAAA,CAAA,GAAA,gBAAA,GAGP,iBAHO,GAAA,SAIL,SAAAzC,KAAQ,WAARA,IAAA,SAAAA,EAAUiC,MAAK,KAAKS,OAAOG,SAJtB,IAAA,CAAA,GAAA,gBAAA,GAMP,kBANO,GAAA,SAOL,SAAA7C,KAAQ,WAARA,IAAA,SAAAA,EAAU+B,MAAK,KAAKW,OAAOI,SAPtB,IAAA,CAAA,GAAA,gBAAA,GAAA,mBASuB5C,KAAgB,GAAA,OACxCc,EAAWF,OAD6B,IAAA,IAAA,MATvC,GAAA,gBAAA,GAAA,4BAYgC,EAAA,WAAA,MAAA,IAAA,SAEpC,MAdI,GAAA,gBAAA,GAAA,wBAe4Bd,IAAQ,SAExC,QAjBI,GAAA,EAFX,EANP,CAAA,GA6BE,eAAAM,QAAA,cAAC,iBAAD,EACE,gBAAgBhC,GAChB,wBAAwB,CAAClB,GAAK6C,KAAa,EAAEzC,SAAS,KAAX,CAAnB,EAF1B,GAIGuF,aAAaxE,CAAD,IAAaA,EAASc,CAAD,IAAcd,CAJlD,CA7BF;AAqCH,CApJ8B;;;AO3KjC,IAAAyE,iBAA+C;AAIxC,IAAMC,cAAc,SACzBC,GACAC,GACG;AAAA,MACGC,QAAaC,uBAA6C,IAAvC,GACnBC,IAAQC,cAAcL,CAAD;AAQ3B,aANAM,0BAAU,WAAM;AACd,WAAO,WAAY;AACjBJ,QAAWK,WAAWC,aAAaN,EAAWK,OAAZ;IACnC;EACF,GAAE,CAACN,CAAD,CAJM,OAMFQ,4BACJ,WAAa;AAAA,aAAAC,KAAA,UAAA,QAATC,KAAS,MAAAD,EAAA,GAAA,IAAA,GAAA,IAAAA,IAAA,IAATC,CAAAA,GAAS,CAAA,IAAA,UAAA,CAAA;AACRT,MAAWK,WACbC,aAAaN,EAAWK,OAAZ,GAGdL,EAAWK,UAAUK,WAAW,WAAM;AACpCV,QAAWK,UAAU,MACQ,cAAzB,OAAOH,EAAMG,WACfH,EAAMG,QAAN,MAAAH,GAAiBO,EAAZ;IAER,GAAEV,CAL4B;EAMhC,GACD,CAACA,CAAD,CAbgB;AAenB;;;AChCD,IAAAY,iBAAqD;;;ACArD,IAAAC,iBAAmC;AAEnC,IAAMC,cAAc,SAAIC,GAAJ;AAAA,SACD,YAAjB,OAAOA;AADW;AAYb,IAAMC,UAAU,SAIrBC,GAJqB;AAAA,MAKrBC,IALqB,IAAA,UAAA,UAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAKH,CAAA;AALG,aAOrBC,wBAAQ,WAAM;AACZ,QAAIL,YAAYG,CAAD,GAAY;AAEzB,eADMG,KAA0C,CAAA,GACvCC,IAAQ,GAAGA,IAAQJ,EAASK,QAAQD,IAC3CD,CAAAA,GAAIH,EAASI,CAAD,CAAT,QAAoBE,0BAAS;AAGlC,aAAOH;IACR;AAED,WAAWI,MAAMP,CAAV,EACJQ,KAAK,IADD,EAEJC,IAAI,WAAA;AAAA,iBAAMH,0BAAS;IAAf,CAFA;EAGR,GAbM,CAaiB,YAApB,OAAON,IAAwBA,IAAWA,EAASU,KAAK,GAAd,CAbvC,EAAA,OAAA,mBAa8DT,CAb9D,CAAA,CAAA;AAPc;;;ACdvB,IAAAU,iBAAkD;AAoB3C,IAAMC,+BAA+B;AAErC,IAAMC,aAAa,SAACC,GAAgBC,GAAjB;AAAA,SACxBD,EAAKE,KAAK,GAAV,MAAmBD,EAAKC,KAAK,GAAV;AADK;AAGnB,IAAMC,YAAY,SACvBC,GACAC,GACAC,GACG;AACHC,gCAAU,WAAM;AACd,QAAID,GAAU;AAAA,UAAA;AAAA,gBAAA,IACZF,EAAII,YADQ,WAAA,IAAA,SACZ,EAAaC,iBAAiB,UAAUJ,CAAxC;IACD;AAED,WAAO,WAAM;AAAA,UAAAK;AAAA,gBAAAA,KACXN,EAAII,YADO,WAAAE,KAAA,SACXA,GAAaC,oBAAoB,UAAUN,CAA3C;IACD;EACF,GAAE,CAACD,EAAII,SAASH,GAAIC,CAAlB,CARM;AASV;AAEM,IAAMM,mBAAmB,SAACC,GAAD;AAAA,SAC9BC,eAAeD,CAAD,EAAKE;AADW;AAGhC,IAAMC,qBAAqB,SAACC,GAAkBC,GAAgB;AAAA,SAC5C,KAAZD,IACK,IAEFE,KAAKC,KAAKH,IAAWC,CAArB,IAA4BA;AACpC;AAEM,IAAMG,qBAAqB,SAChCC,GACAP,GACAQ,GACqB;AAAA,MACfL,IACJH,IAASQ,IAAiBzB,+BACb,MAATiB,IACAQ,IAAiBzB,8BAEjB0B,KAAoC,CACxCL,KAAKC,KAAKJ,mBAAmBM,IAAMJ,GAAKH,CAAZ,CAA5B,GACAI,KAAKC,KAAKJ,mBAA2B,MAARM,IAAYJ,IAAMI,IAAMJ,GAAKH,CAA9B,CAA5B,CAFwC;AAK1C,SAAOS;AACR;AAEM,IAAMC,sBAAsB,SAACC,GAAsBC,GAAoB;AAE5E,WACQC,GAFFC,IAAa,mBAAOH,CAAP,GACVI,KAAQ,GAAGA,KAAQH,EAAMI,QAAQD,KAClCF,KAAUD,EAAMG,EAAD,GACP,IAAVF,MACFC,EAAcC,EAAD,IAAUF;AAG3B,SAAOC;AACR;AAEM,IAAMG,8BAA8B,SACzCC,GACAC,GACAC,GACG;AACH,MAAMC,IAAoBC,cAAclB,KAAKmB,IAAIC,MAAM,MAAMJ,CAArB,CAAD;AAEvC,aAAOK,4BAAY,WAAM;AACvB,QAAKP,GAAL;AAIA,UAAMT,KAAkBH,mBACtBY,EAAcQ,WACd7B,iBAAiBqB,CAAD,GAChBG,EAAkB5B,OAHsB;AAM1C0B,QAAI,SAACQ,IAAU;AAAA,eACTlB,GAAgB,CAAD,MAAQkB,GAAM,CAAD,KAAOlB,GAAgB,CAAD,MAAQkB,GAAM,CAAD,IAC1DlB,KAGFkB;MACR,CANE;IAVH;EAiBD,GAAE,CAACT,GAAeC,CAAhB,CAlBe;AAmBnB;AAED,IAAMS,WAAW,SACfC,GACApB,GACAqB,GACG;AAAA,WACGC,IAAgBD,EAAUE,MAAM,GAAhB,GAChBC,KACJF,EAAcG,OAAO,SAACC,IAAGC,IAAJ;AAAA,WAAUD,KAAIC;EAAd,GAAiB,CAAtC,IAA2CL,EAAcf,QAEvDqB,IAAMtD,8BAEH0B,EAAgB,CAAD,KAAOoB,EAAI,CAAD,IAAMQ,IAAMJ,KAC1CI,MAAOtD;AAGT,SAAOsD;AACR;AAEM,IAAMC,kBAAkB,SAC7B3B,GACAC,GACAH,GACAO,GACW;AAIX,WAHMa,KAAwB,CAAC,GAAG,CAAJ,GACxBU,IAA2B,CAAC,GAAG,CAAJ,GAExBxB,IAAQ,GAAGA,IAAQJ,EAAWK,QAAQD,IACzCN,GAAgB,CAAD,IAAMoB,GAAI,CAAD,MAC1BA,GAAI,CAAD,KAAOlB,EAAWI,CAAD,GACpBwB,EAAO,CAAD,IAAMxB,IAAQ,IAGlBN,EAAgB,CAAD,IAAMoB,GAAI,CAAD,MAC1BA,GAAI,CAAD,KAAOlB,EAAWI,CAAD,GACpBwB,EAAO,CAAD,IAAMxB,IAAQ;AAgBxB,SAZkB,MAAdwB,EAAO,CAAD,KAA2B,MAAdA,EAAO,CAAD,MAC3BA,EAAO,CAAD,IAAMxD,+BAGV6B,EAAMI,WAAWL,EAAWK,WAC9BuB,EAAO,CAAD,KAAOX,SAASC,IAAKpB,GAAiBE,CAAvB,IAGnB4B,EAAO,CAAD,IAAMvB,MACduB,EAAO,CAAD,IAAMvB,IAGP,CAACa,IAAKU,CAAN;AACR;;;AF7IM,IAAMC,mBAAmB,SAAA,GAU3B;AAAA,MANHC,IAMG,EANHA,QACAC,IAKG,EALHA,kBAKG,IAAA,EAJHC,UAAAA,KAIG,WAAA,KAAA,GAAA,QAC2CC,yBAA2B,CACvE,GAAG,CADoE,CAAnB,GADnD,IAAA,eAAA,GAAA,CAAA,GACIC,IADJ,EAAA,CAAA,GACqBC,KADrB,EAAA,CAAA,GAAA,QAIyBF,yBAAiB,CAC3C,CAAC,GAAG,CAAJ,GACA,CAAC,GAAGD,KAAWI,+BAA+BN,CAA9C,CAF2C,CAAT,GAJjC,IAAA,eAAA,GAAA,CAAA,GAIIO,IAJJ,EAAA,CAAA,GAIYC,IAJZ,EAAA,CAAA,GAQGC,KAAWC,QAAsBV,GAAQI,CAAvB,GAClBO,QAAmBC,uBAAuB,IAAjB,GACzBC,IAAQC,kBAAkBL,IAAUM,gBAAX,GACzBC,QAAgBJ,uBAAOK,oBAAoB,CAAA,GAAIJ,CAAL,CAApB,GACtBK,KAAsBC,cAAclB,CAAD,GAZtC,IAa8Ba,sBAC/BM,wBAAQ,WAAM;AACZ,WAAO,CAACT,CAAD;EACR,GAAE,CAACA,CAAD,CAFI,GAGPI,gBAJgD,GAb/CM,KAAA,eAAA,GAAA,CAAA,GAaIC,IAbJD,GAAA,CAAA,GAmBGE,IAA2BC,4BAC/Bb,EAAiBc,SACjBpB,IACAQ,CAH0D;AAqD5D,SA/CAa,UAAUf,GAAkBY,GAA0BrB,EAA7C,OAETyB,0BAAU,WAAM;AACVzB,IAAAA,MACFqB,EAAwB;EAE3B,GAAE,CAACD,GAAwBpB,EAAzB,CAJM,OAMTyB,0BAAU,WAAM;AACVzB,IAAAA,MACFc,EAAcS,UAAUR,oBAAoBD,EAAcS,SAASZ,CAAxB,GAC3CL,EACEoB,gBAAgBZ,EAAcS,SAASZ,GAAOT,GAAiBJ,CAAhD,CADR,KAITQ,EAAU,CACR,CAAC,GAAG,CAAJ,GACA,CAAC,GAAGR,CAAJ,CAFQ,CAAD;EAKZ,GAZQ,CAAA,EAAA,OAAA,mBAYFI,CAZE,GAAA,CAYeS,GAAOb,GAAQE,EAZ9B,CAAA,CAAA,OAcTyB,0BAAU,WAAM;AACVzB,IAAAA,MAAYgB,GAAoBO,WAAWlB,EAAO,CAAD,EAAI,CAAV,IAAe,KAAKP,KACjEkB,GAAoBO,QAAQzB,CAA5B;EAEH,GAAE,CAACO,EAAO,CAAD,EAAI,CAAV,GAAcL,EAAf,CAJM,OAMTyB,0BAAU,WAAM;AAAA,QACRE,KAAyC,CAAC,GAAG,CAAJ,GACzCC,KAAsB,CAC1B,CAAC,GAAG,CAAJ,GACA,CAAC,GAAG5B,KAAWI,+BAA+BN,CAA9C,CAF0B;AAK5BQ,MAAU,SAACuB,IAAD;AAAA,aACRC,WAAWD,GAAM,CAAD,GAAKD,GAAY,CAAD,CAAtB,KACVE,WAAWD,GAAM,CAAD,GAAKD,GAAY,CAAD,CAAtB,IACNC,KACAD;IAJI,CAAD,GAOTzB,GAAmB,SAAC0B,IAAD;AAAA,aACjBC,WAAWD,IAAOF,EAAR,IAAgCE,KAAQF;IADjC,CAAD;EAGnB,GAAE,CAAC3B,EAAD,CAjBM,GAmBF,EACLO,UAAAA,IACAE,kBAAAA,GACAsB,OAAO1B,EAAO,CAAD,GACb2B,UAAU3B,EAAO,CAAD,EAAI,CAAV,EAJL;AAMR;;;AG3GD,OAAA;;;ACcA,SAAS4B,iBACPC,GACAC,GACAC,GACAC,GACA;AACA,SAAOA,IACHH,EAAWG,GAAD,gBAAA,CAAA,GAAaF,GAAcC,CAA3B,CAAA,IACVF,EAAU,gBAAA,CAAA,GAAIC,GAAcC,CAAlB,CAAA;AACf;AAEM,SAASE,mBACdJ,GACAG,GAEyB;AAAA,MADzBF,IACyB,IAAA,UAAA,UAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IADX;AAEd,SAAO,EACLI,QAAQN,iBAAiBC,GAAYC,GAAa,UAAUE,CAApC,GACxBG,cAAcP,iBACZC,GACAC,GACA,gBACAE,CAJ4B,GAM9BI,YAAYR,iBACVC,GACAC,GACA,cACAE,CAJ0B,GAM5BK,OAAOT,iBAAiBC,GAAYC,GAAa,SAASE,CAAnC,GACvBM,aAAaV,iBACXC,GACAC,GACA,eACAE,CAJ2B,GAM7BO,WAAWX,iBAAiBC,GAAYC,GAAa,aAAaE,CAAvC,GAC3BQ,MAAMZ,iBAAiBC,GAAYC,GAAa,QAAQE,CAAlC,GACtBS,YAAYb,iBACVC,GACAC,GACA,cACAE,CAJ0B,GAM5BU,UAAUd,iBAAiBC,GAAYC,GAAa,YAAYE,CAAtC,EA7BrB;AA+BR;;;ADhCD,IAAMW,OAAOC,GAAG,mBAAD;AAER,IAAMC,sBAA2CF;AACjD,IAAMG,sCAAsCC,mBAAmBJ,IAAD;AAE9D,IAAMK,iBAAiB;;;AElCvB,IAAMC,cAAc,WAAgB;AAAA,MAAfC,IAAe,IAAA,UAAA,UAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAP,IAC9BC,IAAgBD;AAEpB,SAAO,WAAM;AAGX,WAFAC,KAAS,GAEFA;EACR;AACF;;;ACND,IAAAC,iBAAkC;AAFlC,OAAA;;AAsBO,IAAMC,uBAAuBC,GAAG,oBAAD;AAE/B,IAAMC,yBAAwDC,2BACnE,SAACC,GAAOC,GAAQ;AACd,MACEC,IAQEF,EARFE,WACAC,IAOEH,EAPFG,gBACAC,KAMEJ,EANFI,YACAC,IAKEL,EALFK,QACAC,IAIEN,EAJFM,SACAC,IAGEP,EAHFO,MACAC,KAEER,EAFFQ,QACGC,IARL,yBASIT,GATJU,UAAA;AAWA,SACE,eAAAC,QAAA,cAAC,aAAD,OAAA,OAAA,CAAA,GACMF,GADN,EAEE,KAAKR,GACL,WAAWL,qBAAqB,MAAM,CAACM,CAAD,CAAP,GAC/B,iBAAeG,GACf,MAAK,UACL,QAAQC,GACR,MAAMC,GACN,aAAaC,IACb,OACE,eAAAG,QAAA,cAAA,eAAAA,QAAA,UAAA,MACGR,GADH,MACoB,eAAAQ,QAAA,cAAA,KAAA,MAAIP,EAAJ,GADpB,GAAA,EAVJ,CAAA,CAAA;AAgBH,CA9B4E;;;ACxB/E,IAAAQ,iBAAkC;;AAgB3B,IAAMC,uBAAoDC,2BAC/D,SAAA,GAA4BC,GAA5B;AAAA,MAAGC,IAAH,EAAGA,QAAWC,IAAd,yBAAA,GAAAC,UAAA;AAAA,SACE,eAAAC,QAAA,cAAC,gBAAD,OAAA,OAAA,CAAA,GAAoBF,GAApB,EAAgC,KAAKF,GAAK,aAAaC,EAAvD,CAAA,CAAA;AADF,CADyE;;;AChB3E,IAAAI,iBAAkC;;;ACElC,IAAAC,iBAAkC;AAFlC,OAAA;;AAwBO,IAAMC,kBAAsD,EACjEC,IAAI,KACJC,GAAG,KACHC,GAAG,KACHC,GAAG,IAJ8D;AAO5D,IAAMC,eAAeC,GAAG,YAAD;AAEvB,IAAMC,iBAAwCC,2BACnD,SAACC,GAAOC,GAAQ;AACd,MACEC,IAUEF,EAVFE,WACAC,IASEH,EATFG,OACAC,KAQEJ,EARFI,QACAC,IAOEL,EAPFK,SACAC,IAMEN,EANFM,UACAC,IAKEP,EALFO,MACAC,KAIER,EAJFQ,QACAC,IAGET,EAHFS,UACAC,IAEEV,EAFFU,SACGC,IAVL,yBAWIX,GAXJY,WAAA;AAaA,SACE,eAAAC,QAAA,cAAC,UAAD,OAAA,OAAA,CAAA,GACMF,GADN,EAEE,KAAKV,GACL,WAAWL,aAAa,MAAM,CAACM,CAAD,CAAP,GACvB,iBAAeE,IACf,iBAAeK,GACf,MAAK,UACL,OAAON,GACP,aAAaK,IACb,MAAMD,GACN,QAAQF,GACR,SAAS,CAACC,KAAYF,IACtB,UAAUK,GACV,SAASC,GACT,UACEJ,KACE,eAAAO,QAAA,cAAC,UAAD,EACE,SAAST,IACT,UAAUK,GACV,MAAMlB,gBAAgBgB,CAAD,EAHvB,CAAA,EAhBN,CAAA,GAwBGJ,CAxBH;AA2BH,CA3C4D;;;;ADTxD,IAAMW,kBAAkBC,GAAG,eAAD;AAEjC,IAAMC,cAA8C,EAClDC,IAAI,KACJC,GAAG,KACHC,GAAG,KACHC,GAAG,IAJ+C;AAO7C,IAAMC,oBAA8CC,2BACzD,SAACC,GAAOC,GAAQ;AACd,MACEC,IASEF,EATFE,SACAC,IAQEH,EARFG,cACAC,KAOEJ,EAPFI,MACAC,IAMEL,EANFK,QACAC,IAKEN,EALFM,SALF,IAUIN,EAJFO,YAAAA,KANF,WAAA,IAMe,IANf,GAOEC,IAGER,EAHFQ,WAPF,IAUIR,EAFFS,OAAAA,IARF,WAAA,IAQU,IARV,GASKC,IATL,yBAUIV,GAVJW,WAAA;AAYA,SACE,eAAAC,QAAA,cAAC,UAAD,OAAA,OAAA,CAAA,GACMF,GADN,EAEE,KAAKT,GACL,WAAWV,gBAAgB,MAAM,CAACiB,CAAD,CAAP,GAC1B,iBAAeN,GACf,MAAK,UACL,OAAM,eACN,aAAaG,GACb,MAAMD,IACN,QAAQE,GACR,WACE,eAAAM,QAAA,cAAC,MAAD,EACE,MAAMnB,YAAYW,EAAD,GACjB,YAAW,MACX,MAAK,QAHP,GAAA,GAAA,OAIKG,IAJL,MAAA,EAAA,OAIsBE,CAJtB,CAAA,GAMF,UACE,eAAAG,QAAA,cAAC,UAAD,EACE,SAASV,GACT,cAAcC,GACd,MAAMU,gBAAgBT,EAAD,EAHvB,CAAA,EAlBJ,CAAA,GAAA,aAAA;AA4BH,CA3CkE;;;AE/BrE,IAAAU,iBAAkB;AAFlB,OAAA;AAOO,IAAMC,iBAAiBC,GAAG,cAAD;AAEzB,IAAMC,eAAe,WAAM;AAChC,SACE,eAAAC,QAAA,cAAA,OAAA,EAAK,WAAWH,eAAc,EAA9B,GACE,eAAAG,QAAA,cAAC,QAAD,EAAQ,WAAWH,eAAe,QAAD,GAAY,MAAK,IAAlD,CAAA,CADF;AAIH;;;ACfD,IAAAI,iBAOO;;;;;;;;;;;;;;;;;;;;;ACaA,IAAMC,UAAU,SAACC,GAA4B;AAClD,SAAO,SAACC,GAA8B;AACpC,WAAAC,eAAAA,eAAA,CAAA,GACKD,CADL,GAAA,CAAA,GAAA,EAEEE,WAAW,SAAA,UAACC,GAAiC;AAAA,UACnCC,IAAiDD,EAAjDC,SAASC,KAAwCF,EAAxCE,KAAeC,IAAyBH,EAAnCI,UAA0BC,IAASL,EAAlBM,SACjCC,IAAUX,EAASM,EAAD,KAASN,EAASK,CAAD;AAClB,oBAAnB,OAAOM,KACTA,EACE,EACEN,SAAAA,GACAC,KAAAA,IACAC,OAAAA,GACAE,MAAAA,EAJF,GAMAL,CAPK,GAUsB,cAA3B,QAAA,SAAOH,KAAP,WAAOA,IAAP,SAAOA,EAAME,cACfF,EAAKE,UAAUC,CAAf;IAEH,EAnBH,CAAA;EAqBD;AACF;;;AC5CD,IAAAQ,iBAAkB;AAEX,SAASC,YAAeC,GAAa;AAC1C,MAAMC,IAAMC,eAAAA,QAAMC,OAAOH,CAAb;AAMZ,SAJAE,eAAAA,QAAME,UAAU,WAAM;AACpBH,MAAII,UAAUL;EACf,GAAE,CAACA,CAAD,CAFH,GAIOC,EAAII;AACZ;;;ACVD,IAAAC,iBAAkB;;;ACuClB,SAAA,EAAmBC,IAAAA;AACjB,SAAqB,YAAA,OAAPA,MAAyB,QAANA,MAA8B,MAAhBA,GAAGC;AACpD;AAEA,SAASC,EACPC,IACAC,IAAAA;AAEA,UAAA,CAAIA,MAA2C,aAAbD,OAId,cAAAE,MAA0B,WAAbF;AACnC;AAyBA,SAAqBG,EAACN,IAAaI,IAAAA;AACjC,MAAIJ,GAAGO,eAAeP,GAAGQ,gBAAgBR,GAAGS,cAAcT,GAAGU,aAAa;AACxE,QAAWC,KAAGC,iBAAiBZ,IAAI,IAAA;AACnC,WACaE,EAACS,GAAME,WAAWT,EAAAA,KAC7BF,EAAYS,GAAMG,WAAWV,EAAAA,KAhBnC,SAAyBJ,IAAAA;AACvB,UAAWe,KAbb,SAAyBf,IAAAA;AACvB,YAAA,CAAKA,GAAGgB,iBAAAA,CAAkBhB,GAAGgB,cAAcC,YACzC,QAAO;AAGT,YAAA;AACE,iBAASjB,GAACgB,cAAcC,YAAYC;QAGrC,SAFQC,IAAAA;AACP,iBACD;QAAA;MACH,EAGgCnB,EAAAA;AAC9B,aAAA,CAAA,CAAKe,OAKHA,GAAMR,eAAeP,GAAGQ,gBAAgBO,GAAMN,cAAcT,GAAGU;IAEnE,EAQsBV,EAAAA;EAEnB;AAED,SAAA;AACF;AAUA,SAAA,EACEoB,IACAC,IACAC,IACAC,IACAC,IACAC,GACAC,GACAC,GAAAA;AAqBA,SACGF,IAAmBL,MAClBM,IAAiBL,MAClBI,IAAmBL,MAAsBM,IAAiBL,KAEpD,IA2CNI,KAAoBL,MAAsBO,KAAeL,MACzDI,KAAkBL,MAAoBM,KAAeL,KAE/CG,IAAmBL,KAAqBG,KA4C9CG,IAAiBL,MAAoBM,IAAcL,MACnDG,IAAmBL,MAAsBO,IAAcL,KAEjDI,IAAiBL,KAAmBG,KAI/C;AAAA;AAUA,IAAA,IAAA,SAAgBI,IAAiBC,IAAAA;AAE/B,MAAMC,IAAqBC,QAInBC,IACNH,GADMG,YAAYC,IAClBJ,GADkBI,OAAOC,IACzBL,GADyBK,QAAQC,IACjCN,GADiCM,UAAU/B,IAC3CyB,GAD2CzB,4BAKvCgC,IACgB,cAAA,OAAbD,IAA0BA,IAAW,SAACE,IAAAA;AAAAA,WAAkBA,OAAKF;EAAQ;AAE9E,MAAA,CAAKG,EAAUV,EAAAA,EACb,OAAM,IAAA,UAAc,gBAAA;AAStB,WAhCwBW,GAClBC,GA0BgBC,IAAGC,SAASD,oBAAoBC,SAASC,iBAGnDC,IAAc,CAAA,GAChBC,IAAmBjB,IACtBU,EAAUO,CAAAA,KAAWT,EAAcS,CAAAA,KAAS;AAKjD,SAHAA,IAhCY,SADRL,KADkBD,IAkCIM,GAjCLC,iBAAAA,EAELC,YAAAA,EAA6BC,QAAQ,OAAA,OAkCtCP,GAAkB;AAC/BG,QAAOK,KAAKJ,CAAAA;AACZ;IACD;AAIW,YAAVA,KACAA,MAAWH,SAASQ,QACpB5C,EAAauC,CAAAA,KAAAA,CACZvC,EAAaoC,SAASC,eAAAA,KAMX,QAAVE,KAAkBvC,EAAauC,GAAQzC,CAAAA,KACzCwC,EAAOK,KAAKJ,CAAAA;EAEf;AA4CD,WArCmBM,IAAGrB,EAAmBsB,iBACrCtB,EAAmBsB,eAAeC,QAClCC,YACgBC,IAAGzB,EAAmBsB,iBACtCtB,EAAmBsB,eAAeI,SAClCC,aAAAA,IAGc1B,OAAO2B,WAAWC,aAC9BC,IAAY7B,OAAO8B,WAAWC,aAEpCC,IAOInC,GAAOoC,sBAAAA,GANDC,IAAYF,EAApBP,QACOU,IAAPb,EAAAA,OACKc,IAASJ,EAAdK,KACOC,IAAPC,EAAAA,OACQC,IAAYR,EAApBS,QACMC,IAANC,EAAAA,MAIEC,IACQ,YAAV1C,KAA+B,cAAVA,IACjBkC,IACU,UAAVlC,IACAsC,IACAJ,IAAYF,IAAe,GAC7BW,IACS,aAAX1C,IACIuC,IAAaP,IAAc,IAChB,UAAXhC,IACAmC,IACAI,GAGAI,IAAqC,CAAA,GAAA,IAE1B,GAAGC,IAAQlC,EAAOmC,QAAQD,KAAS;AAClD,QAAM/D,IAAQ6B,EAAOkC,CAAAA,GAKnB/D,IAAAA,EAAMiD,sBAAAA,GADAR,IAAAA,EAAAA,QAAQH,IAAK2B,EAAL3B,OAAOe,IAAAA,EAAAA,KAAKE,IAAKU,EAALV,OAAOE,IAAAA,EAAAA,QAAQE,IAAAA,EAAAA;AAK3C,QACiB,gBAAf1C,KACAmC,KAAa,KACbM,KAAc,KACdF,KAAgBhB,KAChBc,KAAelB,KACfgB,KAAaC,KACbG,KAAgBC,KAChBC,KAAcC,KACdL,KAAeC,EAGf,QACDO;AAED,QAAMI,IAAarE,iBAAiBG,CAAAA,GAC9BmE,IAAaC,SAASF,EAAWG,iBAA2B,EAAA,GACnDC,IAAGF,SAASF,EAAWK,gBAA0B,EAAA,GAAA,IAC5CH,SAASF,EAAWM,kBAA4B,EAAA,GAC9DC,IAAeL,SAASF,EAAWQ,mBAA6B,EAAA,GAEvDC,IAAW,GACVC,IAAW,GAIPC,IAClB,iBAAiB7E,IACZA,EAAsB8E,cACtB9E,EAAsBN,cACvByE,IACAY,IACA,GACAC,IACJ,kBAAA,IACKhF,EAAsBiF,eACtBjF,EAAsBR,eACvB8E,IACAG,IACA,GAEAS,IACJ,iBAAsBlF,IACqB,MAAtCA,EAAsB8E,cACrB,IACAxC,IAAStC,EAAsB8E,cACjC,GACAK,IACJ,kBAAA,IAC4C,MAAvCnF,EAAsBiF,eACrB,IACAxC,IAAUzC,EAAsBiF,eAClC;AAEN,QAAIvD,MAAqB1B,EAIrB2E,KADY,YAAVzD,IACY0C,IACK,UAAV1C,IACK0C,IAAcpB,IACT,cAAVtB,IACKkE,EACZvC,GACAA,IAAYL,GACZA,GACA8B,GACAG,GACA5B,IAAYe,GACZf,IAAYe,IAAcV,GAC1BA,CAAAA,IAIYU,IAAcpB,IAAiB,GAI7CoC,IADa,YAAXzD,IACa0C,IACK,aAAX1C,IACM0C,IAAezB,IAAgB,IAC1B,UAAXjB,IACM0C,IAAezB,IAGfgD,EACbC,GACAA,IAAYjD,GACZA,GACA+B,GACAY,GACAM,IAAYxB,GACZwB,IAAYxB,IAAeV,GAC3BA,CAAAA,GAMJwB,IAAcW,KAAKC,IAAI,GAAGZ,IAAc9B,CAAAA,GACxC+B,IAAeU,KAAKC,IAAI,GAAGX,IAAeS,CAAAA;SACrC;AAIHV,UADY,YAAVzD,IACY0C,IAAcP,IAAMiB,IACf,UAAVpD,IACK0C,IAAcH,IAASgB,IAAeO,IACjC,cAAV9D,IACKkE,EACZ/B,GACAI,GACAhB,GACA6B,GACAG,IAAeO,GACfpB,GACAA,IAAcV,GACdA,CAAAA,IAIYU,KAAeP,IAAMZ,IAAS,KAAKuC,IAAkB,GAInEJ,IADa,YAAXzD,IACa0C,IAAeF,IAAOQ,IACjB,aAAXhD,IACM0C,KAAgBF,IAAOrB,IAAQ,KAAKuC,IAAiB,IAChD,UAAX1D,IACM0C,IAAeN,IAAQwB,IAAcF,IAGrCO,EACbzB,GACAJ,GACAjB,GACA6B,GACAY,IAAcF,GACdhB,GACAA,IAAeV,GACfA,CAAAA;AAIJ,UAAQqC,IAA0BxF,EAA1BwF,YAAYC,IAAczF,EAAdyF;AAkBpB7B,WAAe6B,KAhBfd,IAAcW,KAAKC,IACjB,GACAD,KAAKI,IACHD,IAAYd,IAAcQ,GAC1BnF,EAAMP,eAAegD,IAAS0C,IAASH,CAAAA,CAAAA,IAa3CnB,KAAgB2B,KAVhBZ,IAAeU,KAAKC,IAClB,GACAD,KAAKI,IACHF,IAAaZ,IAAeM,GAC5BlF,EAAML,cAAc2C,IAAQ4C,IAASL,CAAAA,CAAAA;IAO1C;AAEDf,MAAa5B,KAAK,EAAEjD,IAAIe,GAAOqD,KAAKsB,GAAahB,MAAMiB,EAAAA,CAAAA;EACxD;AAED,SAAA;AACD;;;AC7fM,SAASe,eACdC,GACAC,GACM;AACN,MAAMC,IAAUC,EAAsBH,GAAM,EAC1CI,UAAUH,GACVI,OAAO,WACPC,YAAY,YAH8B,CAAP;AAKrCJ,IAAQK,QAAQ,SAACC,IAAW;AAC1B,QAAQC,KAAkBD,GAAlBC,IAAIC,KAAcF,GAAdE,KAAKC,IAASH,GAATG;AACjBF,IAAAA,GAAGG,YAAYF,IACfD,GAAGI,aAAaF;EACjB,CAJD;AAKD;;;AFDM,SAASG,gBACdC,GACqD;AAAA,MAC/CC,IAAaC,eAAAA,QAAMC,OAAgB,SAACC,IAAKC,IAAN;AAAA,WAAmBA;EAAnB,CAAtB,GADkC,IAE1BH,eAAAA,QAAMI,SAAgBN,CAAtB,GAF0B,IAAA,eAAA,GAAA,CAAA,GAE9CO,KAF8C,EAAA,CAAA,GAEvCC,IAFuC,EAAA,CAAA,GAG/CC,IAAWP,eAAAA,QAAMQ,YACrB,SAACC,IAAkBC,IAAmB;AACpC,QAAI,CAACA,GACH,OAAM,IAAIC,MAAM,gDAAV;AAER,WAAOL,EAAU,SAACJ,IAAD;AAAA,aAASH,EAAWa,QAAQV,IAAKO,GAAQP,EAAD,GAAOQ,EAAtC;IAAT,CAAD;EACjB,GACD,CAACJ,CAAD,CAPe;AASjB,SAAO,CAACD,IAAOE,CAAR;AACR;AASM,IAAMM,gBAA2C,SACtDC,GACAC,GACAC,GACAC,GACS;AACT,MAAKF,EAAYH,SAAjB;AAIA,QAAMM,KAAUF,EAAYF,CAAD,EAAQF;AAE/BM,IAAAA,KACFC,eAAeD,IAASH,EAAYH,OAAtB,IAEdK,EAAS;EATX;AAWD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AHlCD,IA6EMG,mBAAmB,SACvBC,GAC6C;AAC7C,SAAOA,EAAOC;AACf;AAjFD,IAmFMC,sBAAsB,SAC1BF,GAC8C;AAC9C,SAAO,CAACA,EAAOC;AAChB;AAvFD,IAyFME,UAAU,EACdC,SAAS,WACTC,WAAW,aACXC,gBAAgB,iBAHF;AAzFhB,IA+FMC,eAAe,EACnBC,aAAa,IACbC,qBAAqB,IACrBC,QAAM,OACNC,kBAAkB,GAClBC,qBAAmB,MALA;AAQd,IAAMC,oBAAoB,SAC/Bb,GAC8B;AAC9B,SACEA,KAAUc,OAAOC,UAAUC,eAAeC,KAAKjB,GAAQ,mBAA7C;AAEb;AAEM,IAAMkB,uBAAuB,SAClClB,GACiC;AACjC,SACEA,KAAU,CAACc,OAAOC,UAAUC,eAAeC,KAAKjB,GAAQ,mBAA7C;AAEd;AAEM,IAAMmB,uBAAuB,SAClCnB,GAC4B;AAC5B,SACEA,KAAUc,OAAOC,UAAUC,eAAeC,KAAKjB,GAAQ,kBAA7C;AAEb;AAEM,SAASoB,UACdpB,GACA;AAAA,MAEEqB,IAqBErB,EArBFqB,OACAC,IAoBEtB,EApBFsB,aACAC,IAmBEvB,EAnBFuB,YAJFC,KAuBIxB,EAlBFyB,UAAAA,IALF,WAAAD,MAAAA,IAAA,IAuBIxB,EAjBFC,UAAAA,IANF,WAAA,KAAA,GAOEyB,KAgBE1B,EAhBF0B,cACAC,IAeE3B,EAfF2B,YACAC,IAcE5B,EAdF4B,gBACAC,IAaE7B,EAbF6B,iBACAC,IAYE9B,EAZF8B,QAXFC,KAuBI/B,EAXFgC,WAAAA,IAZF,WAAAD,MAAAA,IAaEE,IAUEjC,EAVFiC,aACAC,IASElC,EATFkC,YACAC,KAQEnC,EARFmC,iBACAC,IAOEpC,EAPFoC,SACAC,KAMErC,EANFqC,QACaC,IAKXtC,EALFQ,aACA+B,IAIEvC,EAJFuC,gBACAC,IAGExC,EAHFwC,qBACAC,IAEEzC,EAFFyC,cACAC,IACE1C,EADF0C,yBAGIC,QAAWC,uBAAyB,IAAnB,GAzBvB,QA2BkCC,yBAAQ,KAAA,GA3B1C,IAAA,eAAA,GAAA,CAAA,GA2BOC,IA3BP,EAAA,CAAA,GA2BkBC,IA3BlB,EAAA,CAAA,GA6BMC,QAAQC,wBACZ,WAAA;AAAA,WACGjD,EAAOgD,UACLE,MAAMC,QAAQnD,EAAOgD,KAArB,IAA8BhD,EAAOgD,QAAQ,CAAChD,EAAOgD,KAAR,MAChD,CAAA;EAHF,GAIA,CAAChD,EAAOgD,KAAR,CALmB,GA7BrB,IA8CII,gBAAgB7C,YAAD,GA9CnB,IAAA,eAAA,GAAA,CAAA,GAAA,IAAA,EAAA,CAAA,GAuCIC,IAvCJ,EAuCIA,aACAE,IAxCJ,EAwCIA,QACAC,IAzCJ,EAyCIA,kBACAF,IA1CJ,EA0CIA,qBACAG,IA3CJ,EA2CIA,qBAEFyC,IA7CF,EAAA,CAAA,GAgDMC,IAAyBC,cAAcf,CAAD,GAEtCgB,IAAwB,SAACC,IAAYjD,IAAb;AAAA,WAGoB,OAFhDkB,GAAa+B,EAAD,EACTC,kBADH,EAEGC,QAAQnD,GAAYkD,kBAAZ,CAFX;EAD4B,GAlD9B,QAuD2CT,wBAAQ,WAAM;AACvD,QAAIxC,KAA+C,OAAxBA,GAA4B;AAAA,UAC/CmD,KAAiBvC,EAAMwC,OAAO,SAACJ,IAAD;AAAA,eAClC7B,IACIA,EAAe6B,IAAMhD,CAAP,IACd+C,EAAsBC,IAAMhD,CAAP;MAHS,CAAb;AAWvB,aAAO,CACLmD,IACA5D,EAAO8D,YAAY,CAACF,GAAeG,SAPI,EACvCC,OAAOxD,GACPyD,mBAAiB,KAFsB,IAOvC,MAFK;IAIR;AACD,WAAO,CAAC5C,GAAD,MAAA;EACR,GAAE,CAACA,GAAOZ,CAAR,CAnB+C,GAvDlD,IAAA,eAAA,GAAA,CAAA,GAuDOyD,IAvDP,EAAA,CAAA,GAuDwBC,IAvDxB,EAAA,CAAA,GA4EMC,QAAenB,wBAAQ,WAAM;AACjC,QAAMoB,KAAeC,iBACnBC,UACEL,GACA,SAAApC,KAAM,WAANA,KAAAA,EAAQiC,SAASlC,IAAjB,QACAC,GACAG,GACAC,CALO,GAOTnC,iBAAiBC,CAAD,IAAWA,EAAOgD,QAAQ,CAAA,GAC1ChB,GACAL,GACAQ,EAXmC;AAcrC,WAAOgC,IAAe,CAAIA,CAAJ,EAAA,OAAA,mBAAwBE,EAAxB,CAAA,IAAwCA;EAC/D,GAAE,CACDrB,GACAhB,GACAkC,GACApC,GACAD,GACAM,IACAF,GACAC,GACAiC,CATC,CAhByB,GA4BtBK,IAEJN,EAAgBH,UAEfI,IAAkB,IAAI,MAEtBnC,IAAYoC,EAAaL,SAAS,IAE/BU,IAAcC,QAAwBF,GAAmB,CAAC9D,CAAD,CAApC,GAErBiE,QAAW1B,wBAAQ,WAAM;AAC7B,QAAI2B,KAAI;AAQR,WAPyB,IAArBpE,EAAYuD,WACda,KAIe,MAHbR,EAAaP,OACX,SAACgB,IAAD;AAAA,aACEhE,kBAAkBgE,EAAD,KAAgC,IAArBA,GAAMxD,MAAM0C,UAAcc,GAAMA;IAD9D,CADF,EAGEd,UAAgB,CAAC/D,EAAO8D,WAEvBc;EACR,GAAE,CAACR,CAAD,CAVqB,GAYlBU,IAA4B,MAAjBzD,EAAM0C,QAEjBgB,QAAmB9B,wBAAQ,WAAM;AAAA,WAAA,CACjC/C,oBAAoBF,CAAD,KADc,CAAA,CAIjCgC,KAEAX,EAAMwC,OAAO,SAACmB,IAAD;AAAA,aACXhC,EAAMiC,KAAK,SAACxB,IAAD;AAAA,eAAU9B,EAAW8B,EAAD,MAAW9B,EAAWqD,EAAD;MAAzC,CAAX;IADW,CAAb,EAEEjB,WAAW1C,EAAM0C;EAKxB,GAAE,CAAC/B,GAAW/B,GAAU+C,GAAO3B,CAA7B,CAb6B,GAe1B6D,IAAyB,WAAc;AAC3C,QAAIC,KAAQ;AACZ,QAAmB,IAAfnC,EAAMe,QAAY;AAAA,UAAAqB,IAAAC,KAAAC,4BACAlB,CADA;AAAA,UAAA;AACpB,aAAAiB,GAAA,EAAA,GAAA,EAAAD,KAAAC,GAAA,EAAA,GAAA,QAAkC;AAAA,cAAvBR,KAAuBO,GAAA;AAChC,cAAIvE,kBAAkBgE,EAAD,GAAS;AAC5BM,YAAAA;AAEA;UACD;AAL+B,cAAAI,IAAA/D,KAAA8D,4BAMbT,GAAMxD,KANO;AAAA,cAAA;AAMhC,iBAAAG,GAAA,EAAA,GAAA,EAAA+D,KAAA/D,GAAA,EAAA,GAAA,QAAgC;AAAA,kBAArBiC,KAAqB8B,GAAA;AAC9B,kBAAIpE,qBAAqBsC,EAAD,EACtB,QAAO0B;AAET,kBAAIxD,EAAW8B,EAAD,MAAW9B,EAAWqB,EAAM,CAAD,CAAN,EACjC,QAAOmC;AAETA,cAAAA;YACD;UAd+B,SAAAK,IAAA;AAAA,YAAAhE,GAAA,EAAAgE,EAAA;UAAA,UAAA;AAAA,YAAAhE,GAAA,EAAA;UAAA;QAejC;MAhBmB,SAAAgE,IAAA;AAAA,QAAAH,GAAA,EAAAG,EAAA;MAAA,UAAA;AAAA,QAAAH,GAAA,EAAA;MAAA;IAiBrB;AAED,WAAO;EACR,GAIKjF,SAAUqF,4BACd,SAACC,IAAuB;AACtBrC,MACE,SAACsC,IAAD;AAAA,aAAAC,eAAAA,eAAA,CAAA,GACKD,EADL,GAAA,CAAA,GAAA,EAEEjF,QAAQgF,GAFV,CAAA;IAAA,GAIAvF,QAAQC,OALF;EAOT,GACD,CAACiD,CAAD,CAVyB,GAarBwC,KAAoBC,YAAY,SAAC9C,IAAkB;AACvDK,MAAS,SAACsC,IAAQ;AAAA,aACZA,GAAIlF,wBAAwBuC,KACvB2C,KAFOC,eAAAA,eAAA,CAAA,GAKXD,EALW,GAAA,CAAA,GAAA,EAMdlF,qBAAqBuC,GANP,CAAA;IAQjB,GAAE7C,QAAQE,SARH;EAST,GAAE,GAVkC,GAY/BA,SAAYoF,4BAChB,SAACzC,IAA8B;AAC7BK,MAAS,SAACsC,IAAQ;AAAA,aACZA,GAAInF,gBAAgBwC,KACf2C,KAFOC,eAAAA,eAAA,CAAA,GAKXD,EALW,GAAA,CAAA,GAAA,EAMdnF,aAAawC,MAAS,GANR,CAAA;IAQjB,GAAE7C,QAAQE,SARH,GASRwF,GAAkB7C,MAAS,EAAV;EAClB,GACD,CAACK,GAAUwC,EAAX,CAb2B,GAgBvBE,KAAaC,YAAYtF,CAAD,GAExBJ,SAAiBmF,4BACrB,SAACQ,IAAsCrF,IAAiC;AACtEyC,MAAS,SAACsC,IAAQ;AAChB,UAAMO,KAAWC,KAAKC,IACpBD,KAAKE,IACH,GAC6B,cAA7B,OAAOJ,KACHA,GAAkBN,GAAIhF,gBAAL,IACjBsF,EAJN,GAMAzB,IAAoB,CAPL;AADD,aAWZmB,GAAIhF,qBAAqBuF,KACpBP,KAZOC,eAAAA,eAAA,CAAA,GAgBXD,EAhBW,GAAA,CAAA,GAAA,EAiBdhF,kBAAkBuF,IAClBtF,qBAAAA,GAlBc,CAAA;IAoBjB,GAAET,QAAQG,cApBH;EAqBT,GACD,CAAC4D,GAAiBb,GAAUc,CAA5B,CAxBgC;AA2BlCmC,sCAAgB,WAAM;AACpB,QAAc,SAAVtD,KAAkB,CAAC+C,MAAcrF,GAAQ;AAC3C,UAAM6F,KAAwBrB,EAAsB;AACvB,UAAzBhB,EAAgBH,UAClByC,cAAcD,IAAuBjF,GAAamD,GAAa,WAAA;AAAA,eAC7DnE,GAAe,GAAD,KAAA;MAD+C,CAAlD;IAIhB;EACF,CATc;AA/Of,MA0PMmG,KAAc,SAACjF,IAAyBkF,IAAoB;AAEhE,QADAlF,GAAEmF,gBAAF,GACI5G,iBAAiBC,CAAD,GAAU;AAAA,UAAAuF,IACtBqB,KAAQ,UAAArB,KAAGvF,EAAOgD,UAAV,WAAAuC,KAAA,SAAGA,GAAc1B,OAC7B,SAACJ,IAAD;AAAA,eAAU9B,EAAW8B,EAAD,MAAW9B,EAAW+E,EAAD;MAAzC,CADe,GAGXG,KAAM,SAAAD,MAAQ,WAARA,MAAAA,GAAU7C,SAAS6C,KAAW;AAC1C5G,QAAO8G,SAASD,IAAK,EACnBrF,GAAAA,GADmB,CAArB;IAGD;EACF,GAEKsF,KAAW,SAACtF,IAAyBiC,IAAe;AACxD,QAAA,EAAItB,MAAmBA,GAAgBsB,EAAD,IAAtC;AAGA,UAAI1D,iBAAiBC,CAAD,GAAU;AAAA,YACtB4G,KAAW5D,EAAM+D,KACrB,SAAC/D,IAAD;AAAA,iBAAWrB,EAAWqB,EAAD,MAAYrB,EAAW8B,EAAD;QAA3C,CADe,IAGbT,EAAMa,OAAO,SAACb,IAAD;AAAA,iBAAWrB,EAAWqB,EAAD,MAAYrB,EAAW8B,EAAD;QAA3C,CAAb,IAHa,CAAA,EAAA,OAAA,mBAITT,CAJS,GAAA,CAIFS,EAJE,CAAA,GAKXoD,KAAM,SAAAD,MAAQ,WAARA,MAAAA,GAAU7C,SAAS6C,KAAW;AAC1C5G,UAAO8G,SAASD,IAAK,EAAErF,GAAAA,GAAF,CAArB;MACD;AACGtB,0BAAoBF,CAAD,MACrBA,EAAO8G,SAASrD,IAAM,EAAEjC,GAAAA,GAAF,CAAtB,GACApB,GAAO,KAAA,GACPC,GAAU,EAAD;IAfX;EAiBD,GAEK2G,KAAc,SAACC,IAGf;AACJ,QAAQzF,KAAayF,GAAbzF,GAAGH,KAAU4F,GAAV5F;AACX,QAAItB,iBAAiBC,CAAD,GAAU;AAAA,UACtBkH,KAAmB/E,KACrBd,GAAMwC,OAAO,SAACJ,IAAD;AAAA,eAAU,CAACtB,GAAgBsB,EAAD;MAA1B,CAAb,IACApC,IAEE8F,KAA6B,CAAA,GAC7BC,KAA6B,CAAA;AAUnC,UATApE,EAAMqE,QAAQ,SAACrC,IAAO;AAElBkC,QAAAA,GAAiBjC,KAAK,SAACxB,IAAD;AAAA,iBAAU9B,EAAWqD,EAAD,MAASrD,EAAW8B,EAAD;QAAvC,CAAtB,IAEA0D,GAAmBG,KAAKtC,EAAxB,IAEAoC,GAAmBE,KAAKtC,EAAxB;MAEH,CARD,GASImC,GAAmBpD,WAAWmD,GAAiBnD,OACjD/D,GAAO8G,SAASM,IAAoB,EAAE5F,GAAAA,GAAF,CAApC;WACK;AACL,YAAMqF,KAAG,CAAA,EAAA,OAAOO,IAAP,mBAA8BF,EAA9B,CAAA;AACTlH,UAAO8G,SAASD,IAAK,EACnBrF,GAAAA,GADmB,CAArB;MAGD;IACF;EACF,GAEKsC,KAAW,SAACtC,IAAyBwC,IAAkB;AAC3DhE,MAAO8D,YAAY9D,EAAO8D,SAASE,IAAO,EAAExC,GAAAA,IAAGwC,OAAAA,GAAL,CAAvB,GACnB5D,GAAO,KAAA,GACPC,GAAU,EAAD;EACV,GAmBKkH,KAAa,SAAC/F,IAA4B;AAC9C,QAAIzB,iBAAiBC,CAAD,GAAU;AAAA,UACtBwH,KAAO,SAAGxE,KAAH,WAAGA,IAAH,SAAGA,EAAOa,OAAO,SAACJ,IAAD;AAAA,eAAA,SAAUtB,MAAV,WAAUA,KAAV,SAAUA,GAAkBsB,EAAH;MAAzB,CAAd,GACVoD,KAAMW,MAA4B,IAAjBA,GAAQzD,SAAayD,KAAU;AACtDxH,QAAO8G,SAASD,IAAK,EACnBrF,GAAAA,GADmB,CAArB;IAGD;AACGtB,wBAAoBF,CAAD,KACrBA,EAAO8G,SAAS,MAAM,EAAEtF,GAAAA,GAAF,CAAtB,GAEFnB,GAAU,EAAD;EACV,GAOKoH,KAAsB,SAACC,IAAGlG,IAAY;AAC1CA,IAAAA,GAAEmG,eAAF,GACClG,KAAYrB,GAAO,IAAA,GACpBE,GAAe,SAACqF,IAAD;AAAA,aAASA,KAAM;IAAf,GAAD,IAAA;EACf,GAEKiC,KAAwB,SAACF,IAAGlG,IAAY;AAC5CA,IAAAA,GAAEmG,eAAF,GACClG,KAAYrB,GAAO,IAAA,GACpBE,GAAe,SAACqF,IAAD;AAAA,aAASA,KAAM;IAAf,GAAD,IAAA;EACf,GA4EKkC,KAAcC,QAAQ,EAC1BL,SAAAA,IACAG,WAAAA,IACAG,QAAQN,IACRO,UAAUJ,IACVK,MAAMR,IACNS,KAAKN,IACLO,OAjFwB,SAApBA,MAAqBT,IAAGlG,IAAY;AACxC,QAAId,GAAQ;AAAA,OACNF,KAAe0D,EAAgBvD,CAAD,MAChCa,GAAEmG,eAAF;AAFQ,UAKJS,KAAU,SACdjD,IAIG;AAAA,YAAAC,IACCiD,KAAS,GADV9C,KAAAD,4BAEiBlB,CAFjB;AAAA,YAAA;AAEH,eAAAmB,GAAA,EAAA,GAAA,EAAAH,KAAAG,GAAA,EAAA,GAAA,QAAkC;AAAA,gBAAvBV,KAAuBO,GAAA;AAChC,gBAAIvE,kBAAkBgE,EAAD,EAEnB,QADAwD,MACO,CAAA,QAAYxD,EAAZ;AAET,gBAAIA,GAAMxD,MAAM0C,SAASsE,KAASlD,GAChC,QAAO,CAACN,IAAOA,GAAMxD,MAAM8D,KAAQkD,EAApB,CAAR;AAETA,YAAAA,MAAUxD,GAAMxD,MAAM0C;UACvB;QAXE,SAAAyB,IAAA;AAAA,UAAAD,GAAA,EAAAC,EAAA;QAAA,UAAA;AAAA,UAAAD,GAAA,EAAA;QAAA;AAYH,eAAO,CAAA,QAAA,MAAA;MACR,GAvBSA,KAyBY6C,GAAQzH,CAAD,GAzBnBa,KAAA,eAAA+D,IAAA,CAAA,GAyBHV,KAzBGrD,GAAA,CAAA,GAyBIiC,KAzBJjC,GAAA,CAAA;AA2BV,UAAIX,kBAAkB4C,EAAD,EAEnB,QAAA,KADAK,GAAStC,IAAGiC,GAAKO,KAAT;AAIV,UAAI7C,qBAAqBsC,EAAD,GAAQ;AAAA,YAAA6E;AAQ9B,eAAA,KAPAtB,GAAY,EACVxF,GAAAA,IACAH,OAAK,UAAAiH,KAAA,SACFzD,MADE,WACFA,KADE,SACFA,GAAOxD,MAAMwC,OACZ,SAACmB,IAAD;AAAA,iBAAQ,CAAC7D,qBAAqB6D,EAAD;QAA7B,CADD,MADE,WAAAsD,KAAAA,KAGa,CAAA,EALR,CAAD;MAQZ;AAEG7E,MAAAA,MACFqD,GAAStF,IAAGiC,EAAJ;IAEX,MACCrD,IAAO,IAAA;EAEV,GAgCCmI,QA9ByB,SAArBA,SAAiC;AACrCnI,OAAO,KAAA;EACR,GA6BCoI,KA3BsB,SAAlBA,IAAmBd,IAAGlG,IAAY;AAClCd,UACFc,GAAEmG,eAAF,GACAvH,GAAO,KAAA;EAEV,GAuBCqI,WArB4B,SAAxBA,UAAyBf,IAAGlG,IAAY;AACxChB,UAGAP,IACFwG,GAAYjF,IAAGwB,EAAMA,EAAMe,SAAS,CAAhB,CAAT,IAEXwD,GAAW/F,EAAD;EAEb,EAE2B,CAAD;AAyE3BkH,kBAAgB,EACdC,UAAUjI,GACVkI,wBAAsB,CACpBtH,GACAC,CAFoB,EAAA,OAAA,mBAGhBmB,KAA2B,CAAA,CAHX,CAAA,GAKtBmG,SAAS,SAAA,UAAM;AACbzI,OAAO,KAAA;EACR,EATa,CAAD,OAYf0I,0BAAU,WAAM;AACVrH,SACFrB,GAAO,KAAA;EAEV,GAAE,CAACqB,CAAD,CAJM,OAMTqH,0BAAU,WAAM;AACd,QAAMvC,KAAwBrB,EAAsB;AACpD5E,OAAeiG,IAAD,IAAA;EACf,GAAE,CAACjG,EAAD,CAHM,OAKTwI,0BAAU,WAAM;AACe,QAAzB5E,EAAgBH,UAAcnD,KAChC4F,cAAc7F,GAAkBW,GAAamD,GAAa,WAAA;AAAA,aACxDnE,GAAe,GAAD,KAAA;IAD0C,CAA7C;EAIhB,GAAE,CAACK,CAAD,CANM;AAiET,aApBAmI,0BAAU,WAAM;AACdzI,OAAUiC,CAAD;EACV,GAAE,CAACA,CAAD,CAFM,OAITwG,0BAAU,WAAM;AAAA,QAAAtD;AAAA,cAAAA,KACdlE,EAAYyH,YADE,WAAAvD,KAAA,SACdA,GAAqBwD,SAAS,EAAEC,KAAK,EAAP,CAA9B;EACD,GAAE,CAACxI,CAAD,CAFM,OAITqI,0BAAU,WAAM;AAAA,aACdvG,KADc,WACdA,IADc,SACdA,EAAiB7B,CAAH;EACf,GAAE,CAACA,CAAD,CAFM,OAIToI,0BAAU,WAAM;AAAA,QAAAtD;AAAA,cAAAA,KACdlC,EAAuByF,YADT,WAAAvD,KAAA,SACdA,GAAA,KAAAlC,GAAiC9C,CAAX;EACvB,GAAE,CAACA,CAAD,CAFM,OAITsI,0BAAU,WAAM;AACd1I,OAAQqC,KAAY,KAAb;EACR,GAAE,CAACA,CAAD,CAFM,GAIF,EACL/B,QAAAA,GACAoC,WAAAA,GACAnC,kBAAAA,GACAyD,cAAAA,GACA9D,gBAAAA,IACA4I,gBA1JqB,SAAjBA,eAAiB1D,IAIwB;AAAA,QAH7CL,KAG6CK,GAH7CL,OACA1B,KAE6C+B,GAF7C/B,MACA0F,KAC6C3D,GAD7C2D;AAEA,QAAItI,kBAAkB4C,EAAD,EACnB,QAAO,EACL2F,SAAS,SAAA,QAAC5H,IAA4B;AACpCsC,SAAStC,IAAGiC,GAAKO,KAAT;IACT,GACDqF,cAAc,SAAA,eAAM;AAClB/I,SAAe6E,IAAD,KAAA;IACf,GACDmE,QAAM,OACNC,SAASpE,OAAUxE,GACnB6I,KAAG,GAAA,OAAKL,IAAL,mBAAA,EATE;AAYT,QAAIhI,qBAAqBsC,EAAD,GAAQ;AAC9B,UAAMgG,KAAW,WAAc;AAAA,YAAAjE,IAAAJ,KAAAE,4BACTlB,CADS;AAAA,YAAA;AAC7B,eAAAgB,GAAA,EAAA,GAAA,EAAAI,KAAAJ,GAAA,EAAA,GAAA,QAAkC;AAAA,gBAAvBP,KAAuBW,GAAA;AAChC,gBAAI3E,kBAAkBgE,EAAD,EACnB;AAEF,gBAAIA,GAAM2E,QAAQ/F,GAAKiG,UAAU;AAAA,kBAAAnE;AAC/B,qBAAA,UAAAA,KAAA,SACGV,MADH,WACGA,KADH,SACGA,GAAOxD,MAAMwC,OACZ,SAACmB,IAAD;AAAA,uBAAQ,CAAC7D,qBAAqB6D,EAAD;cAA7B,CADD,MADH,WAAAO,KAAAA,KAGkB,CAAA;YAEnB;UACF;QAZ4B,SAAAC,IAAA;AAAA,UAAAJ,GAAA,EAAAI,EAAA;QAAA,UAAA;AAAA,UAAAJ,GAAA,EAAA;QAAA;AAa7B,eAAO,CAAA;MACR;AACD,aAAO,EACLgE,SAAS,SAAA,QAAC5H,IAA4B;AACpCwF,WAAY,EAAExF,GAAAA,IAAGH,OAAOoI,GAAQ,EAApB,CAAD;MACZ,GACDJ,cAAc,SAAA,eAAM;AAClB/I,WAAe6E,IAAD,KAAA;MACf,GACDmE,QAAM,OACNC,SAASpE,OAAUxE,GACnB6I,KAAG,GAAA,OAAKL,IAAL,sBAAA,EATE;IAWR;AACD,QAAMK,KAAM7H,EAAW8B,EAAD;AACtB,WAAO,EACL2F,SAAS,SAAA,QAAC5H,IAA4B;AACpCsF,SAAStF,IAAGiC,EAAJ;IACT,GACD4F,cAAc,SAAA,eAAM;AAClB/I,SAAe6E,IAAD,KAAA;IACf,GACDmE,QAAM,CAAA,CAAUtG,EAAMiC,KAAK,SAACxB,IAAD;AAAA,aAAU9B,EAAW8B,EAAD,MAAW+F;IAA/B,CAAX,GAChBD,SAASpE,OAAUxE,GACnB6I,KAAG,GAAA,OAAKL,EAAL,EAAA,OAAiBK,EAAjB,EATE;EAWR,GAiGCG,kBAhEuB,SAAnBA,iBAAoBnI,IAAgD;AACnEC,UACC,CAACqB,KACHC,EAAY,IAAA,GAES,cAAnB,OAAOX,KACTA,EAAQZ,EAAD;EAGZ,GAwDCoI,iBAtDsB,SAAlBA,gBAAmBpI,IAAgD;AACvE,QAAId,GAAQ;AAAA,UAAA0E;AAEV,aAAA,MAAA,UAAAA,KADAzC,EAASoG,YACT,WAAA3D,KAAA,SADAA,GAAkByE,MAAlB;IAED;AAEG/G,SACFC,EAAY,KAAA,GAGQ,cAAlB,OAAOV,MACTA,GAAOb,EAAD;EAET,GA0CCsI,sBAxC2B,SAAvBA,uBAAmC;AACvC,QAAIpJ,EACFN,IAAO,KAAA,GACP2C,EAAY,KAAA;SACP;AAAA,UAAAyC;AACLpF,SAAO,IAAA,GACP2C,EAAY,IAAA,GAFP,UAAAyC,KAGL7C,EAASoG,YAHJ,WAAAvD,KAAA,SAGLA,GAAkBqE,MAAlB;IACD;EACF,GAgCCE,kBA5RuB,SAAnBA,mBAA+B;AAGnC,QAFCtI,KAAYrB,GAAQ,CAACM,CAAF,GAEhBT,GAAU;AAAA,UAAAuF;AAAA,gBAAAA,KACZ7C,EAASoG,YADG,WAAAvD,KAAA,SACZA,GAAkBqE,MAAlB;IACD;EACF,GAuRClH,UAAAA,GACAkF,aAAAA,IACAmC,mBAtSwB,SAApBA,kBAAqBxI,IAAiD;AACrEC,SAAc,CAACxB,KAA2B,IAAf+C,EAAMe,WACpC1D,GAAUmB,GAAEyI,OAAOjH,KAAV,GACT5C,GAAO,IAAA;EAEV,GAkSCI,aAAAA,GACA+G,YAAAA,IACA2C,sBA5Q2B,SAAvBA,qBAAwBzG,IAAD;AAAA,WAAgB,SAACjC,IAAD;AAAA,aAC3CiF,GAAYjF,IAAGiC,EAAJ;IADgC;EAAhB,GA6Q3BkB,UAAAA,GACAG,UAAAA,GACAC,kBAAAA,GACAN,aAAAA,EApBK;AAsBR;;;;;;;;;;;;;;;;;;;;;;AxChuBM,IAAM0F,qBAAqB,CAAC,WAAW,SAAS,OAArB;AAE3B,IAAMC,gCAAgCD,mBAAmB,CAAD;AAAxD,IAsCDE,mBAAmBC,GAAG,gBAAD;AAtCpB,IAwCDC,oBAAoB,SACxBC,GAWG;AAGH,WACQC,GAHJC,IAA4B,KAAnBF,EAASG,SAAc,IAAIH,EAASG,QAExCC,IAAQ,GAAGA,IAAQJ,EAASG,QAAQC,IACrCH,KAAUD,EAASI,CAAD,GAEpBC,qBAAqBJ,CAAD,KAAaA,EAAQK,MAAMH,WACjDD,KAAUD,EAAQK,MAAMH;AAI5B,SAAOD;AACR;AAhEM,IAkEDK,YAAY,SAACC,GAAyBJ,GAAkB;AAC5D,SAAOA,KAASI,EAAM,CAAD,KAAOJ,IAAQI,EAAM,CAAD;AAC1C;AAEM,IAAMC,iBAAiC,SAACC,GAAU;AAAA,MAErDC,IAqBED,EArBFC,YACAC,IAoBEF,EApBFE,MACAC,IAmBEH,EAnBFG,gBACaC,KAkBXJ,EAlBFK,aACAC,IAiBEN,EAjBFM,gBACAC,IAgBEP,EAhBFO,WACAC,IAeER,EAfFQ,kBACAC,KAcET,EAdFS,oBATqD,IAuBnDT,EAbFU,UAAAA,IAVqD,WAAA,KAAA,GAWrDC,IAYEX,EAZFW,MACAC,IAWEZ,EAXFY,QAZqDC,KAuBnDb,EAVFc,QAAQC,IAb6C,WAAAF,KAahC,SAbgCA,IAcrDG,IASEhB,EATFgB,YACAC,IAQEjB,EARFiB,cACAC,KAOElB,EAPFkB,WACAC,IAMEnB,EANFmB,eACAC,KAKEpB,EALFoB,UACAC,IAIErB,EAJFqB,WACAC,IAGEtB,EAHFsB,eACAC,IAEEvB,EAFFuB,kBACGC,IAtBkD,yBAuBnDxB,GAvBmDyB,WAAA,GAyBjDC,IAAkB,YAATf,IAAmB,cAAc,UAE1CgB,QAAeC,wBAAQ,WAAM;AACjC,WAKa,IAJXX,EAAaY,OACX,SAACC,IAAD;AAAA,aACEC,kBAAkBD,EAAD,KAChBE,MAAMC,QAAQH,GAAMlC,KAApB,KAAmD,IAArBkC,GAAMlC,MAAMH;IAF7C,CADF,EAIEA;EAEL,GAAE,CAACwB,CAAD,CARyB,GAUtBH,IAAwB,WAAfC,IAAU,SAA0BA,GAE7CmB,QAAyBN,wBAC7B,WAAA;AAAA,WAAMvC,kBAAkB4B,CAAD;EAAvB,GACA,CAACA,CAAD,CAFoC,GAvCiB,IAiDnDkB,iBAAiB,EACnB1C,QAAQyC,GACRE,UAAUd,KAAiBV,GAC3BW,kBAAAA,EAHmB,CAAD,GAJlBc,IA7CqD,EA6CrDA,UACOC,IA9C8C,EA8CrDC,OACAC,IA/CqD,EA+CrDA,UACAC,IAhDqD,EAgDrDA,kBAOIF,IACiB,MAArBD,EAAc,CAAD,KAAahB,IAAgB,CAAC,GAAG,EAAJ,IAAUgB,GAEhDI,QAAaC,uBAAuB,IAAjB,GACnBtC,IAAcuC,WAAW,CAACH,GAAkBrC,EAAnB,CAAD,GA3DyB,IA4DxByC,QAAO,GA5DiB,IAAA,eAAA,GAAA,CAAA,GA4DhDC,IA5DgD,EAAA,CAAA,GA4DtCC,IA5DsC,EAAA,CAAA,GA6DjDC,IAAuBC,YAAYF,EAAWG,KAAK,GAAjB;AAexC,aAbAC,0BAAU,WAAM;AAAA,QAAAC,IACRC,KAAK,WAAM;AACfN,QAAWO,GAAX,GACAN,EAAoB;IACrB;AAID,WAAA,UAAAI,KAFAX,EAAiBc,YAEjB,WAAAH,KAAA,SAFAA,GAA0BI,iBAAiB,UAAUH,EAArD,GAEO,WAAM;AAAA,UAAAD;AAAA,gBAAAA,KACXX,EAAiBc,YADN,WAAAH,KAAA,SACXA,GAA0BK,oBAAoB,UAAUJ,EAAxD;IACD;EACF,GAAE,CAACZ,EAAiBc,OAAlB,CAXM,GAcP,eAAAG,QAAA,cAAC,oBAAD,EACE,IAAI9C,GACJ,eAAa,MACb,SAAS8B,GACT,SAASiB,eAJX,GAMG,SAACC,IAAY;AAAA,QACNC,KAAWC,YAAW,GACtBC,KAAkBD,YAAW;AAEnC,WACE,eAAAJ,QAAA,cAAC,SAAD,OAAA,OAAA,CAAA,GACMlC,GADN,EAEE,WAAWvB,GACX,WAAU,iBACV,oBAAoB,CAClB,iBACA,eACA,kBACA,cAJkB,GAMpB,QAAQa,GACR,KAAK4B,GACL,MAAK,WACL,WAAWvD,iBAAiB,MAAM,CAChC6E,UAAU,EAAE9D,MAAAA,GAAMS,MAAAA,GAAMsD,QAAM,MAAQC,QAAM,KAAlC,CAAD,GACTC,oBAAoB,EAAEP,SAAAA,GAAF,CAAD,GACnBrD,CAHgC,CAAP,GAK3B,kBAAgB,KAlBlB,CAAA,GAoBE,eAAAmD,QAAA,cAAA,OAAA,EACE,WAAWvE,iBAAiB,mBAAmB,CAC7CiF,WAAW,EACTC,IAAIC,iBAAiBpE,CAAD,EADX,CAAD,GAGVqE,eAAc,CAJ+B,CAApB,GAM3B,KAAKlE,EAPP,GASGa,MAAa,CAACS,KAAgB,eAAA+B,QAAA,cAAC,cAAD,IAAA,GAC/B,eAAAA,QAAA,cAAA,OAAA,EACE,WAAWvE,iBAAiB,QAAQ,EAAE2D,UAAAA,EAAF,CAAT,GAC3B,OAAO,EAAE0B,WAAWnC,EAAb,EAFT,GAIGpB,EAAawD,IAAI,SAAC3C,IAAO4C,IAAe;AACvC,UAAI3C,kBAAkBD,EAAD,GAAS;AAC5B,YAAMpC,KAAQmE,GAAQ;AACtB,eACE,eAAAH,QAAA,cAAC,oBAAD,OAAA,OAAA,EACE,MAAMxD,GACN,gBAAgBI,GAChB,YAAYwB,GAAM6C,OAClB,QAAQjD,GACR,KAAKL,EAAU3B,EAAD,EALhB,GAMMS,EAAe,EACjBT,OAAAA,IACAkF,MAAM9C,IACN+C,WAAWH,GAHM,CAAD,CANpB,CAAA;MAaH;AAED,UAAMI,KACkB,IAAtB7D,EAAaxB,SAAasE,GAAe,IAAK;AAEhD,aACE,eAAAL,QAAA,cAAC,yBAAD,EAAU,KAAK5B,GAAMiD,IAArB,GACGjD,GAAMA,SACLX,KACAtB,UAAU0C,GAAOuC,EAAR,KACP,eAAApB,QAAA,cAAC,kBAAD,EACE,OAAOvC,EAAcW,GAAMA,KAAP,GACpB,MAAM5B,GACN,QAAQwB,GACR,KAAKc,EAASsC,EAAD,GACb,KAAG,SAAA,OAAWhD,GAAMiD,GAAjB,EALL,CAAA,GAQHjD,GAAMlC,MAAM6E,IAAI,SAACG,IAAMI,IAAM;AAC5B,YAAIC,qBAAqBL,EAAD,GAAQ;AAAA,cACxBE,KAAef,GAAe,GAC9BrE,KAAQmE,GAAQ;AAEtB,cAAIhE,UAAU0C,GAAOuC,EAAR,EACX,QACE,eAAApB,QAAA,cAAC,eAAD,OAAA,OAAA,EACE,KAAKwB,QAAQ,CACX1C,EAASsC,EAAD,GACRzD,EAAU3B,EAAD,CAFE,CAAD,GAIZ,QAAQgC,GACR,MAAMxB,EANR,GAOMC,EAAe,EACjBT,OAAAA,IACAkF,MAAAA,IACAC,WAAWG,GAHM,CAAD,GAPpB,EAYE,cAAY,CAAA,EACVJ,GAAKO,gBAAgBP,GAAKQ,eACtBR,GAAKO,iBAAiBP,GAAKQ,YAGjC,SAASR,GAAKO,iBAAiBP,GAAKQ,YACpC,YAAYR,GAAKO,cACjB,OAAOP,GAAKQ,WAnBd,CAAA,CAAA;QAuBL,OAAM;AAAA,cACCN,KAAef,GAAe,GAC9BrE,KAAQmE,GAAQ;AACtB,cAAIhE,UAAU0C,GAAOuC,EAAR,EACX,QACE,eAAApB,QAAA,cAAC,yBAAD,EAAU,KAAG,GAAA,OAAK5B,GAAMiD,KAAX,GAAA,EAAA,OAAkBC,EAAlB,EAAb,GACGhE,EAAUqE,eAAA,EACTC,KAAKJ,QAAQ,CACX1C,EAASsC,EAAD,GACRzD,EAAU3B,EAAD,CAFE,CAAD,GAIZkF,MAAAA,GALS,GAMNzE,EAAe,EAChBT,OAAAA,IACAkF,MAAAA,IACAC,WAAWG,GAHK,CAAD,CANR,CAAA,CADb;QAgBL;MACF,CApDA,CAZH;IAmEH,CA1FA,GA2FA9D,MAAaS,KACZ,eAAA+B,QAAA,cAAC,YAAD,EAAY,MAAMxD,GAAM,aAAawB,EAArC,CAAA,CAhGJ,GAmGC,CAACR,MAAaR,KAAYU,MAAYZ,KACrC,eAAAkD,QAAA,cAAC,UAAD,EACE,MAAMxD,GACN,OAAOM,GACP,aAAakB,EAHf,GAKGlB,CALH,GAQD,CAACU,MAAa,CAACR,KAAYD,MAC1B,eAAAiD,QAAA,cAAC,UAAD,EACE,MAAMxD,GACN,OAAOO,IACP,aAAaiB,EAHf,GAKGjB,EALH,CAvHJ,CApBF;EAsJH,CAjKH;AAoKH;;;;;;;;;;;;;;;;;;;;;A8C3OM,IAAM8E,oBAA6D,SACxEC,GADwE;AAAA,SAErEA,EAAKC;AAFgE;AAGnE,IAAMC,sBAAiE,SAC5EF,GAD4E;AAAA,SAEzEA,EAAKG;AAFoE;AAGvE,IAAMC,yBAET,SAACJ,GAAD;AAAA,SAAUA,EAAKK;AAAf;AACG,IAAMC,yBAET,SAACN,GAAD;AAAA,SAAUA,EAAKO;AAAf;AAEG,IAAMC,qBAAgE,SAC3EC,GAD2E;AAAA,SAExEA,EAAMR;AAFkE;AAGtE,IAAMS,uBAET,SAACD,GAAD;AAAA,SAAWA,EAAMN;AAAjB;AAEG,SAASQ,oBACdC,GACA;AACA,SAAAC,eAAAA,eAAA,CAAA,GACKD,CADL,GAAA,CAAA,GAAA,EAEEE,cAAcF,EAAME,gBAAgBZ,qBACpCa,YAAYH,EAAMG,cAAchB,mBAChCiB,iBAAiBJ,EAAMI,mBAAmBZ,wBAC1Ca,iBAAiBL,EAAMK,mBAAmBX,wBAC1CY,eAAeN,EAAMM,iBAAiBR,sBACtCS,aAAaP,EAAMO,eAAeX,mBAPpC,CAAA;AASD;AAEM,IAAMY,cAA8C,EACzDC,IAAI,MACJC,GAAG,KACHC,GAAG,KACHC,GAAG,IAJsD;;;;AnDvH3D,IAAMC,eAAe,SACnBC,GACAC,GACG;AAAA,MACGC,QAAqBC,uBAAuB,IAAjB,GAC3BC,QAAaD,uBAA8B,IAAxB,GAFtBE,KAyCCC,gBAAgBC,gBAAgBC,oBAAmBR,CAAD,GAASI,CAA5C,GApCjBK,IALCJ,GAKDI,aACAC,IANCL,GAMDK,QACAC,IAPCN,GAODM,SACAC,KARCP,GAQDO,OACAC,IATCR,GASDQ,UACAC,IAVCT,GAUDS,OACAC,IAXCV,GAWDU,UACAC,IAZCX,GAYDW,UACAC,KAbCZ,GAaDY,WACAC,IAdCb,GAcDa,IACAC,IAfCd,GAeDc,aAfC,IAAAd,GAgBDe,MAAAA,KAhBC,WAAA,IAgBMC,kBAhBN,GAAA,IAAAhB,GAiBDiB,MAAAA,KAjBC,WAAA,IAiBMC,kBAjBN,GAAA,IAAAlB,GAkBDmB,MAAAA,IAlBC,WAAA,IAkBMC,kBAlBN,GAmBDC,IAnBCrB,GAmBDqB,mBACAC,IApBCtB,GAoBDsB,MApBC,IAAAtB,GAqBDuB,QAAAA,IArBC,WAAA,IAqBQ,CAAA,IArBR,GAsBDC,IAtBCxB,GAsBDwB,cAtBC,IAAAxB,GAuBDyB,oBAAAA,IAvBC,WAAA,IAuBoBC,4BAvBpB,GAwBDC,IAxBC3B,GAwBD2B,YACAC,IAzBC5B,GAyBD4B,iBACAC,IA1BC7B,GA0BD6B,iBACAC,IA3BC9B,GA2BD8B,aACAC,IA5BC/B,GA4BD+B,eACAC,IA7BChC,GA6BDgC,YACAC,IA9BCjC,GA8BDiC,WACaC,IA/BZlC,GA+BDmC,aACUC,IAhCTpC,GAgCDqC,UACAC,IAjCCtC,GAiCDsC,OAjCC,IAAAtC,GAkCDuC,cAAAA,IAlCC,WAAA,IAkCc,YAlCd,GAmCDC,IAnCCxC,GAmCDwC,gBACAC,IApCCzC,GAoCDyC,kBACAC,IArCC1C,GAqCD0C,eACAC,IAtCC3C,GAsCD2C,cACAC,IAvCC5C,GAuCD4C,yBACGC,IAxCF,yBAAA7C,IAAA8C,WAAA,GAAA,IAyDCC,UAA8B,EAChCxC,OAAAA,IACAgB,QAAAA,GACAd,OAAAA,GACAD,UAAAA,GACAM,aAAajB,GACbE,YAAAA,GACAY,UAAAA,GACAa,cAAAA,GACAG,YAAAA,GACAG,aAAAA,GACAF,iBAAAA,GACAC,iBAAAA,GACAmB,UAAQ,OACR3C,QAAAA,GACAC,SAAAA,GACAkC,gBAAAA,GACAG,cAAAA,GACAC,yBAAAA,EAlBgC,CAArB,GAbXK,IA5CC,EA4CDA,aACAC,IA7CC,EA6CDA,gBACAC,IA9CC,EA8CDA,QACAC,IA/CC,EA+CDA,cACAC,IAhDC,EAgDDA,WACAC,IAjDC,EAiDDA,kBACAC,KAlDC,EAkDDA,iBACAC,KAnDC,EAmDDA,sBACAnB,KApDC,EAoDDA,UACAoB,KArDC,EAqDDA,kBACAC,KAtDC,EAsDDA,UACAC,KAvDC,EAuDDA,UACAC,KAxDC,EAwDDA,aAsBIC,KAAUhD,IAAE,GAAA,OAAMA,GAAN,QAAA,IAAmBA;AAiCrC,SACE,eAAAiD,QAAA,cAAA,eAAAA,QAAA,UAAA,MACE,eAAAA,QAAA,cAAC,iBAAD,OAAA,OAAA,EACE,SAAST,GACT,UAAU1C,GACV,MAAMQ,GACN,MAAMF,IACN,MAAMF,IACN,UAAUL,GACV,KAAKd,GACL,OAAO0C,GACP,IAAIuB,GATN,GAUMhB,CAVN,GAYE,eAAAiB,QAAA,cAAA,OAAA,EACE,WAAWC,SAAS,SAAD,GACnB,KAAKhE,GACL,iBAAeoD,GACf,iBAAc,WACd,IAAItC,EALN,GAOE,eAAAiD,QAAA,cAAA,OAAA,EAAK,WAAWC,SAAS,cAAD,EAAxB,GACE,eAAAD,QAAA,cAAA,OAAA,EAAK,WAAWC,SAAS,uBAAD,EAAxB,GACE,eAAAD,QAAA,cAAA,SAAA,OAAA,OAAA,CAAA,GACMb,EAAW,GADjB,EAEE,WAAWc,SAAS,WAAD,GACnB,MAAK,QACL,MAAMzC,GACN,IAAIuC,IACJ,SAASP,GACT,QAAQC,IACR,cAAY3C,IACZ,SAAS6C,IACT,KAAKO,WAAW,CAAC3B,IAAUD,CAAX,CAAD,GACf,UAAQ,KAXV,CAAA,CAAA,GAaC6B,SAASxD,CAAD,MAtCDyB,KAV8B,SAA5CgC,mBAA6CvE,IAAU;AAC3D,QAAMwE,KAAQ3C,EAAa7B,GAAMyE,IAAP;AAE1B,WACE,eAAAN,QAAA,cAAA,QAAA,EAAM,WAAWC,SAAS,cAAD,GAAkB,OAAOI,GAAlD,GACGA,EADH;EAIH,GAwC2C,EAAEC,MAAM3D,EAAR,CAAZ,GACnB,CAACwD,SAASxD,CAAD,KAAWL,KACnB,eAAA0D,QAAA,cAAA,QAAA,EAAM,WAAWC,SAAS,aAAD,GAAiB,OAAM,cAAhD,GACG3D,CADH,CAhBJ,CADF,GAuBA,eAAA0D,QAAA,cAAA,QAAA,EAAM,WAAWC,SAAS,YAAD,EAAzB,GACE,eAAAD,QAAA,cAAA,UAAA,EACE,MAAK,UACL,WAAWC,SAAS,oBAAD,GACnB,UAAU,IACV,SAASP,GAJX,GAME,eAAAM,QAAA,cAAC,YAAD,EACE,MAAMO,YAAYlD,CAAD,GACjB,WAAW4C,SAAS,uBAAD,EAFrB,CAAA,CANF,CADF,CA9BF,CAZF,GAyDA,eAAAD,QAAA,cAAC,gBAAD,EACE,QAAQX,GACR,MAAMhC,GACN,YAAYpB,GACZ,gBAAgBmD,GAChB,aAAac,WAAW,CAAClD,GAAajB,CAAd,CAAD,GACvB,MAAM0C,GACN,WAAWlB,GACX,YAAYW,KAlG8B,SAA1CsC,kBAA2C3E,IAAU;AACzD,QAAQyE,KAAsDzE,GAAtDyE,MAAMG,KAAgD5E,GAAhD4E,QAAQC,KAAwC7E,GAAxC6E,SAASC,KAA+B9E,GAA/B8E,SAASC,KAAsB/E,GAAtB+E,cAAc9E,KAAQD,GAARC;AAEtD,WACE,eAAAkE,QAAA,cAAC,YAAD,EACE,OAAOtC,EAAa4C,EAAD,GACnB,QAAQG,IACR,SAASC,IACT,UAAQ,OACR,MAAMrD,GACN,QAAyB,YAAjBoB,IAA2B,cAAc,UACjD,SAASkC,IACT,cAAcC,IACd,UAAU7C,EAAgBuC,EAAD,GACzB,KAAKxE,GAVP,CAAA;EAaH,GAkFK,eAAemC,GACf,cAAcqB,GACd,UAAUM,IACV,WAAWzB,GACX,oBAAoBR,GACpB,UAAUkC,IACV,WAAWC,IACX,eAAelB,GACf,kBAAkBD,GAClB,OAC2B,YAAzB,QAAA,SAAOH,KAAP,WAAOA,IAAP,SAAOA,EAAOqC,UACV,EAAEA,QAAQrC,EAAMqC,SAAS,EAAzB,IADJ,OAnBJ,CAAA,CA1DF;AAoFH;AAEM,IAAMC,aAASC,2BAAWnF,YAAD;",
  "names": ["import_react", "COMPONENT_NAME", "cnSelect", "cn", "defaultLabelForEmptyItems", "propSize", "defaultPropSize", "propForm", "defaultPropForm", "propView", "defaultPropView", "SelectContainer", "forwardRef", "props", "ref", "size", "defaultPropSize", "e", "form", "defaultPropForm", "view", "defaultPropView", "className", "disabled", "required", "children", "status", "focused", "id", "multiple", "type", "labelPosition", "label", "labelIcon", "caption", "otherProps", "React", "cnSelect", "import_react", "import_react", "defaultGroupKey", "getItemGroupKeyGuard", "getter", "item", "noGroupKey", "key", "getGroups", "items", "getItemGroupKey", "groups", "getGroupKey", "sortGroups", "groupIndex", "resultGroups", "i", "itemGroupKey", "resultGroupIndex", "findIndex", "group", "push", "g", "resultGroup", "a", "sort", "b", "getCountedGroups", "values", "selectAll", "getItemKey", "getItemDisabled", "copyGroups", "forEach", "index", "totalCount", "checkedCount", "find", "el", "__optionSelctAll", "groupKey", "import_react", "import_react", "mapHorisontalSpase", "xs", "s", "m", "l", "mapHorisontalSpaseIncreased", "mapGroupVerticalSpaseTop", "mapGroupVerticalSpaseBottom", "mapItemVerticalPadding", "mapIconSize", "mapDividerVerticalSpace", "cnListItemGrid", "cn", "renderSlot", "side", "position", "size", "Icon", "iconSize", "sides", "Array", "isArray", "render", "React", "getByMap", "mapIconSize", "push", "unshift", "map", "item", "index", "isNotNil", "listPropSize", "defaultListPropSize", "listPropInnerOffset", "defaultListPropInnerOffset", "listPropForm", "defaultListPropForm", "cnListItem", "cn", "ListItemRender", "props", "ref", "size", "defaultListPropSize", "active", "label", "innerOffset", "disabled", "className", "leftSide", "rightSide", "rightIcon", "leftIcon", "n", "as", "Tag", "checked", "onClick", "r", "status", "textPropViewDefault", "space", "iconSize", "otherProps", "_excluded", "handleClick", "React", "interactive", "cnText", "lineHeight", "view", "cnMixSpace", "pH", "mapHorisontalSpaseIncreased", "mapHorisontalSpase", "pV", "mapItemVerticalPadding", "cnListItemGrid", "renderSlot", "position", "ListItem", "forwardRef", "import_react", "import_react", "cnListDivider", "cn", "ListDivider", "forwardRef", "props", "ref", "size", "defaultListPropSize", "innerOffset", "className", "space", "otherProps", "_excluded", "React", "cnMixSpace", "mH", "mapHorisontalSpaseIncreased", "mapHorisontalSpase", "mV", "mapDividerVerticalSpace", "import_react", "cnListGroupLabel", "cn", "mapFontSize", "xs", "s", "m", "l", "ListGroupLabel", "forwardRef", "props", "ref", "rightSide", "size", "defaultListPropSize", "label", "innerOffset", "className", "space", "otherProps", "_excluded", "React", "cnListItemGrid", "cnMixSpace", "mH", "mapHorisontalSpaseIncreased", "mapHorisontalSpase", "pT", "mapGroupVerticalSpaseTop", "pB", "mapGroupVerticalSpaseBottom", "position", "renderSlot", "cnList", "cn", "React", "IconAddSizeM", "props", "React", "IconAddSizeS", "props", "React", "IconAddSizeXs", "props", "props", "l", "IconAddSizeM", "m", "s", "IconAddSizeS", "xs", "IconAddSizeXs", "name", "renderType", "color", "createSvg", "props", "IconAdd", "createIconInner", "props", "svg", "import_react", "ListAddItem", "forwardRef", "props", "ref", "size", "defaultListPropSize", "innerOffset", "underLine", "otherProps", "_excluded", "horisontalSpase", "mapHorisontalSpaseIncreased", "mapHorisontalSpase", "React", "IconAdd", "pH", "pV", "mapGroupVerticalSpaseBottom", "mH", "import_react", "cnListLoader", "cn", "ListLoader", "forwardRef", "ref", "size", "defaultListPropSize", "e", "innerOffset", "defaultListPropInnerOffset", "className", "React", "cnMixSpace", "pH", "mapHorisontalSpaseIncreased", "mapHorisontalSpase", "import_react", "cnListBox", "cn", "mapVerticalSpase", "xs", "s", "m", "l", "ListBox", "forwardRef", "props", "ref", "size", "defaultListPropSize", "form", "border", "shadow", "className", "otherProps", "_excluded", "React", "cnListBox", "cnMixSpace", "pV", "mapVerticalSpase", "cnMixScrollBar", "import_react", "import_react", "import_react", "useResizeObserved", "refs", "mapper", "React", "useState", "map", "ref", "current", "dimensions", "setDimensions", "mapperRef", "useRef", "useLayoutEffect", "b", "resizeObserver", "ResizeObserver", "d", "_createForOfIteratorHelper", "observe", "a", "disconnect", "defaultSize", "width", "height", "getElementSize", "el", "getBoundingClientRect", "useComponentSize", "ref", "refs", "useMemo", "current", "useResizeObserved", "getElementSize", "isRenderProp", "children", "getPosition", "x", "y", "Math", "round", "getPositionsByDirection", "contentSize", "anchorSize", "position", "arrowOffset", "i", "offset", "contentWidth", "width", "contentHeight", "height", "anchorWidth", "anchorHeight", "anchorCenter", "xForRightDirections", "xForLeftDirections", "xForVerticalDirections", "right", "center", "left", "yForDownDirections", "yForUpDirections", "yForHorizontalDirections", "up", "down", "xForStartLeftDirections", "xForStartRightDirections", "yForStartUpDirections", "yForStartDownDirections", "upLeft", "upCenter", "upRight", "downLeft", "downCenter", "downRight", "rightUp", "rightCenter", "rightDown", "leftUp", "leftCenter", "leftDown", "downStartLeft", "downStartRight", "upStartLeft", "upStartRight", "leftStartUp", "leftStartDown", "rightStartUp", "rightStartDown", "getComputedPositionAndDirection", "initialPosition", "viewportSize", "e", "initialDirection", "direction", "possibleDirections", "bannedDirections", "spareDirection", "positionsByDirection", "filter", "dir", "includes", "find", "pos", "isFittingDown", "isFittingUp", "isFittingLeft", "isFittingRight", "import_react", "getAllParents", "element", "mutableParents", "currentNode", "push", "parentNode", "usePopoverReposition", "isActive", "scrollAnchorRef", "onRequestReposition", "onRequestRepositionRef", "useMutableRef", "useEffect", "fn", "current", "window", "addEventListener", "allParents", "forEach", "parentEl", "removeEventListener", "directionsStartCenter", "directionsStartEdge", "directions", "directionsStartCenter", "directionsStartEdge", "getOffset", "ref", "propOffset", "isNumber", "isString", "current", "cssVar", "getComputedStyle", "getPropertyValue", "test", "slice", "length", "fontSize", "parseFloat", "document", "documentElement", "rem", "em", "ContextConsumer", "onClickOutside", "children", "ignoreClicksInsideRefs", "e", "usePortalContext", "refs", "useClickOutside", "isActive", "handler", "cnPopover", "cn", "Popover", "forwardRef", "props", "componentRef", "direction", "passedDirection", "offset", "arrowOffset", "possibleDirections", "isInteractive", "n", "spareDirection", "style", "className", "passedPosition", "position", "anchorRef", "equalAnchorWidth", "onSetDirection", "otherProps", "_excluded", "React", "useRef", "useTheme", "theme", "useState", "anchorClientRect", "setAnchorClientRect", "useComponentSize", "width", "height", "anchorSize", "previousDirectionRef", "bannedDirections", "setBannedDirections", "resetBannedDirections", "state", "updateAnchorClientRect", "a", "getBoundingClientRect", "useMemo", "getComputedPositionAndDirection", "contentSize", "viewportSize", "clientWidth", "clientHeight", "x", "left", "y", "top", "useEffect", "usePopoverReposition", "scrollAnchorRef", "onRequestReposition", "useLayoutEffect", "includes", "notVisible", "window", "body", "useForkRef", "scrollY", "scrollX", "isRenderProp", "import_react", "useDebounce", "fn", "time", "timeoutRef", "useRef", "fnRef", "useMutableRef", "useEffect", "current", "clearTimeout", "useCallback", "a", "args", "setTimeout", "import_react", "import_react", "isNotNumber", "value", "useRefs", "elements", "deps", "useMemo", "obj", "index", "length", "createRef", "Array", "fill", "map", "join", "import_react", "defaultItemsCalculationCount", "arraysIsEq", "arr1", "arr2", "join", "useScroll", "ref", "fn", "isActive", "useEffect", "current", "addEventListener", "c", "removeEventListener", "getElementHeight", "el", "getElementSize", "height", "roundPositionByGap", "position", "gap", "Math", "ceil", "getVisiblePosition", "top", "elementMaxSize", "visiblePosition", "calculateSavedSizes", "savedSizes", "sizes", "element", "newSavedSizes", "index", "length", "useCalculateVisiblePosition", "scrollElement", "set", "elementsSizes", "elementMaxSizeRef", "useMutableRef", "max", "apply", "useCallback", "scrollTop", "state", "addCount", "pxs", "savedSize", "lastSavedSize", "slice", "average", "reduce", "a", "b", "add", "calculateBounds", "indexs", "useVirtualScroll", "length", "onScrollToBottom", "isActive", "useState", "visiblePosition", "setVisiblePosition", "defaultItemsCalculationCount", "bounds", "setBounds", "listRefs", "useRefs", "scrollElementRef", "useRef", "sizes", "useResizeObserved", "getElementHeight", "savedSizesRef", "calculateSavedSizes", "onScrollToBottomRef", "useMutableRef", "useMemo", "t", "scrollElementRefHeight", "calculateVisiblePosition", "useCalculateVisiblePosition", "current", "useScroll", "useEffect", "calculateBounds", "resetVisiblePosition", "resetBounds", "state", "arraysIsEq", "slice", "spaceTop", "cnFunctionHelper", "cnFunction", "animateName", "animate", "element", "cnForCssTransition", "appear", "appearActive", "appearDone", "enter", "enterActive", "enterDone", "exit", "exitActive", "exitDone", "cnFn", "cn", "cnMixPopoverAnimate", "cnMixPopoverAnimateForCssTransition", "cnForCssTransition", "animateTimeout", "fabricIndex", "start", "index", "import_react", "cnSelectCreateButton", "cn", "SelectCreateButton", "forwardRef", "props", "ref", "className", "labelForCreate", "inputValue", "active", "hovered", "size", "indent", "otherProps", "_excluded", "React", "import_react", "SelectGroupLabel", "forwardRef", "ref", "indent", "otherProps", "_excluded", "React", "import_react", "import_react", "sizeCheckboxMap", "xs", "s", "m", "l", "cnSelectItem", "cn", "SelectItem", "forwardRef", "props", "ref", "className", "label", "active", "hovered", "multiple", "size", "indent", "disabled", "onClick", "otherProps", "_excluded", "React", "cnSelectItemAll", "cn", "textSizeMap", "xs", "s", "m", "l", "SelectItemAll", "forwardRef", "props", "ref", "checked", "intermediate", "size", "indent", "hovered", "countItems", "className", "total", "otherProps", "_excluded", "React", "sizeCheckboxMap", "import_react", "cnSelectLoader", "cn", "SelectLoader", "React", "import_react", "useKeys", "userKeys", "rest", "_objectSpread", "onKeyDown", "e", "keyCode", "key", "shift", "shiftKey", "meta", "metaKey", "handler", "import_react", "usePrevious", "value", "ref", "React", "useRef", "useEffect", "current", "import_react", "el", "nodeType", "canOverflow", "overflow", "skipOverflowHiddenElements", "t", "isScrollable", "clientHeight", "scrollHeight", "clientWidth", "scrollWidth", "style", "getComputedStyle", "overflowY", "overflowX", "frame", "ownerDocument", "defaultView", "frameElement", "e", "scrollingEdgeStart", "scrollingEdgeEnd", "scrollingSize", "scrollingBorderStart", "scrollingBorderEnd", "elementEdgeStart", "elementEdgeEnd", "elementSize", "target", "options", "windowWithViewport", "window", "scrollMode", "block", "inline", "boundary", "checkBoundary", "node", "isElement", "element", "parent", "scrollingElement", "document", "documentElement", "frames", "cursor", "parentElement", "getRootNode", "host", "push", "body", "viewportWidth", "visualViewport", "width", "innerWidth", "viewportHeight", "height", "innerHeight", "scrollX", "pageXOffset", "viewportY", "scrollY", "pageYOffset", "_target$getBoundingCl", "getBoundingClientRect", "targetHeight", "targetWidth", "targetTop", "top", "targetRight", "right", "targetBottom", "bottom", "targetLeft", "left", "targetBlock", "targetInline", "computations", "index", "length", "_frame$getBoundingCli", "frameStyle", "borderLeft", "parseInt", "borderLeftWidth", "borderTop", "borderTopWidth", "borderRightWidth", "borderBottom", "borderBottomWidth", "blockScroll", "inlineScroll", "scrollbarWidth", "offsetWidth", "borderRight", "scrollbarHeight", "offsetHeight", "scaleX", "scaleY", "alignNearest", "viewportX", "Math", "max", "scrollLeft", "scrollTop", "min", "scrollIntoView", "node", "menuNode", "actions", "computeScrollIntoView", "boundary", "block", "scrollMode", "forEach", "action", "el", "top", "left", "scrollTop", "scrollLeft", "useHoistedState", "initialState", "reducerRef", "React", "useRef", "old", "newState", "useState", "state", "_setState", "setState", "useCallback", "updater", "action", "Error", "current", "scrollToIndex", "index", "dropdownRef", "optionsRefs", "onFailure", "element", "scrollIntoView", "isMultipleParams", "params", "multiple", "isNotMultipleParams", "actions", "setOpen", "setSearch", "highlightIndex", "initialState", "searchValue", "resolvedSearchValue", "isOpen", "highlightedIndex", "scrollToHighlighted", "isOptionForCreate", "Object", "prototype", "hasOwnProperty", "call", "isNotOptionForCreate", "isOptionForSelectAll", "useSelect", "items", "dropdownRef", "controlRef", "e", "disabled", "getItemLabel", "getItemKey", "searchFunction", "getItemGroupKey", "groups", "n", "selectAll", "getGroupKey", "sortGroups", "getItemDisabled", "onFocus", "onBlur", "searchValueProp", "onDropdownOpen", "onSearchValueChange", "dropdownOpen", "ignoreOutsideClicksRefs", "inputRef", "useRef", "useState", "isFocused", "setIsFocused", "value", "useMemo", "Array", "isArray", "useHoistedState", "setState", "onSearchValueChangeRef", "useMutableRef", "searchFunctionDefault", "item", "toLocaleLowerCase", "indexOf", "fiteredOptions", "filter", "onCreate", "length", "label", "__optionForCreate", "filteredOptions", "optionForCreate", "visibleItems", "resultGroups", "getCountedGroups", "getGroups", "maxHighlightIndex", "optionsRefs", "useRefs", "notFound", "flag", "group", "hasItems", "allItemsSelected", "el", "find", "getSelectedOptionIndex", "index", "b", "c", "_createForOfIteratorHelper", "d", "a", "useCallback", "newIsOpen", "old", "_objectSpread", "setResolvedSearch", "useDebounce", "prevIsOpen", "usePrevious", "indexForHighlight", "newIndex", "Math", "min", "max", "useLayoutEffect", "currentHighlightIndex", "scrollToIndex", "removeValue", "valueItem", "stopPropagation", "newValue", "val", "onChange", "some", "onChangeAll", "parametrs", "nonDisabledItems", "currentGroupValues", "withoutGroupValues", "forEach", "push", "clearValue", "results", "ArrowUp", "_", "preventDefault", "ArrowDown", "getKeyProps", "useKeys", "PageUp", "PageDown", "Home", "End", "Enter", "getData", "couter", "h", "Escape", "Tab", "Backspace", "useClickOutside", "isActive", "ignoreClicksInsideRefs", "handler", "useEffect", "current", "scrollTo", "top", "getOptionProps", "keyPrefix", "onClick", "onMouseEnter", "active", "hovered", "key", "getItems", "groupKey", "handleInputFocus", "handleInputBlur", "focus", "handleToggleDropdown", "handleInputClick", "handleInputChange", "target", "getHandleRemoveValue", "selectDropdownform", "defaultSelectDropdownPropForm", "cnSelectDropdown", "cn", "getLenghtElements", "elements", "element", "lenght", "length", "index", "isNotOptionForCreate", "items", "isVisible", "slise", "SelectDropdown", "props", "controlRef", "size", "getOptionProps", "dropdownRefProp", "dropdownRef", "labelForCreate", "className", "labelForNotFound", "labelForEmptyItems", "hasItems", "form", "isOpen", "n", "offset", "offsetProp", "renderItem", "visibleItems", "isLoading", "getGroupLabel", "notFound", "itemsRefs", "virtualScroll", "onScrollToBottom", "otherProps", "_excluded", "indent", "isListShowed", "useMemo", "filter", "group", "isOptionForCreate", "Array", "isArray", "lengthForVirtualScroll", "useVirtualScroll", "isActive", "spaceTop", "sliceHookProp", "slice", "listRefs", "scrollElementRef", "popoverRef", "useRef", "useForkRef", "useFlag", "scrolled", "setScroled", "setScroledOffDebouns", "useDebounce", "off", "useEffect", "a", "fn", "on", "current", "addEventListener", "removeEventListener", "React", "animateTimeout", "animate", "getIndex", "fabricIndex", "getVirtualIndex", "cnListBox", "border", "shadow", "cnMixPopoverAnimate", "cnMixSpace", "pV", "mapVerticalSpase", "cnMixScrollBar", "marginTop", "map", "groupIndex", "label", "item", "keyPrefix", "virtualIndex", "key", "i", "isOptionForSelectAll", "forkRef", "checkedCount", "totalCount", "_objectSpread", "ref", "defaultGetItemKey", "item", "id", "defaultGetItemLabel", "label", "defaultGetItemGroupKey", "groupId", "defaultGetItemDisabled", "disabled", "defaultGetGroupKey", "group", "defaultGetGroupLabel", "withDefaultGetters", "props", "_objectSpread", "getItemLabel", "getItemKey", "getItemGroupKey", "getItemDisabled", "getGroupLabel", "getGroupKey", "iconSizeMap", "xs", "s", "m", "l", "SelectRender", "props", "ref", "defaultDropdownRef", "useRef", "controlRef", "e", "usePropsHandler", "COMPONENT_NAME", "withDefaultGetters", "placeholder", "onBlur", "onFocus", "items", "onChange", "value", "required", "disabled", "ariaLabel", "id", "dropdownRef", "form", "defaultPropForm", "view", "defaultPropView", "size", "defaultPropSize", "dropdownClassName", "name", "groups", "getItemLabel", "labelForEmptyItems", "defaultLabelForEmptyItems", "getItemKey", "getItemGroupKey", "getItemDisabled", "getGroupKey", "getGroupLabel", "renderItem", "isLoading", "renderValueProp", "renderValue", "inputRefProp", "inputRef", "style", "dropdownForm", "onDropdownOpen", "onScrollToBottom", "virtualScroll", "dropdownOpen", "ignoreOutsideClicksRefs", "restProps", "_excluded", "useSelect", "multiple", "getKeyProps", "getOptionProps", "isOpen", "visibleItems", "isFocused", "handleInputFocus", "handleInputBlur", "handleToggleDropdown", "handleInputClick", "notFound", "hasItems", "optionsRefs", "inputId", "React", "cnSelect", "useForkRef", "isNotNil", "renderValueDefault", "label", "item", "iconSizeMap", "renderItemDefault", "active", "hovered", "onClick", "onMouseEnter", "zIndex", "Select", "forwardRef"]
}
